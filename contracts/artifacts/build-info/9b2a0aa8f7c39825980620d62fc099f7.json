{
	"id": "9b2a0aa8f7c39825980620d62fc099f7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SkyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\n\n/**\n * @title SkyToken\n * @dev Sky Token (SKY) 的主要合约实现\n * 实现了可升级的 ERC20 代币标准，包含完整的安全特性和扩展功能\n */\ncontract SkyToken is \n    Initializable, \n    ERC20Upgradeable, \n    OwnableUpgradeable, \n    ERC20PausableUpgradeable,\n    ReentrancyGuardUpgradeable \n{\n    // 状态变量声明\n    uint256 private constant INITIAL_SUPPLY = 100_000_000 ether;  // 1亿初始供应量\n    uint256 private constant MAX_TOTAL_SUPPLY = 1_000_000_000 ether;    // 10亿最大供应量\n    uint256 private constant CURRENT_VERSION = 1;\n    \n    uint256 public currentVersion;\n    uint256 public maxTokenSupply;\n    \n    // 代币经济参数\n    uint256 public constant MINT_LIMIT_PER_TX = 1_000_000 ether;  // 每次铸造限额：100万代币\n    uint256 public constant BURN_LIMIT_PER_TX = 500_000 ether;    // 每次销毁限额：50万代币\n    \n    // 权限管理\n    mapping(address => bool) public isBlacklisted;\n    mapping(address => bool) public isMinterRole;\n    \n    // 事件声明\n    event BlacklistStatusUpdated(address indexed account, bool status);\n    event MinterRoleUpdated(address indexed account, bool status);\n    event TokensBurnedBy(address indexed burner, uint256 amount);\n    event TokensMintedTo(address indexed recipient, uint256 amount);\n    \n    // 自定义错误\n    error SupplyExceedsMax();\n    error ExceedsMintLimit();\n    error ExceedsBurnLimit();\n    error AccountIsBlacklisted();\n    error InvalidTokenAmount();\n    error InvalidAddress();\n    error NotAuthorizedMinter();\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    /**\n     * @dev 初始化 Sky Token 合约\n     * 设置代币名称、符号，并分配初始供应量\n     */\n    function initialize() public initializer {\n        __ERC20_init(\"Sky Token\", \"SKY\");\n        __Ownable_init(msg.sender);\n        __ERC20Pausable_init();\n        __ReentrancyGuard_init();\n        \n        maxTokenSupply = MAX_TOTAL_SUPPLY;\n        currentVersion = CURRENT_VERSION;\n        \n        // 初始化代币供应量\n        _mint(msg.sender, INITIAL_SUPPLY);\n        \n        // 设置部署者为铸币者\n        isMinterRole[msg.sender] = true;\n        emit MinterRoleUpdated(msg.sender, true);\n    }\n\n    /**\n     * @dev 重写 _update 函数以实现黑名单检查和暂停功能\n     * @param from 发送方地址\n     * @param to 接收方地址\n     * @param value 转账金额\n     */\n    function _update(\n        address from,\n        address to,\n        uint256 value\n    ) internal virtual override(ERC20Upgradeable, ERC20PausableUpgradeable) {\n        // 黑名单检查\n        if (isBlacklisted[from] || isBlacklisted[to]) revert AccountIsBlacklisted();\n        \n        // 调用父合约的实现\n        super._update(from, to, value);\n    }\n    \n    /**\n     * @dev 铸造新代币（仅授权铸币者）\n     * @param recipient 接收地址\n     * @param amount 铸造数量\n     */\n    function mint(address recipient, uint256 amount) external nonReentrant {\n        if (!isMinterRole[msg.sender]) revert NotAuthorizedMinter();\n        if (recipient == address(0)) revert InvalidAddress();\n        if (amount == 0) revert InvalidTokenAmount();\n        if (amount > MINT_LIMIT_PER_TX) revert ExceedsMintLimit();\n        if (totalSupply() + amount > maxTokenSupply) revert SupplyExceedsMax();\n        \n        _mint(recipient, amount);\n        emit TokensMintedTo(recipient, amount);\n    }\n    \n    /**\n     * @dev 销毁代币\n     * @param amount 销毁数量\n     */\n    function burn(uint256 amount) public virtual nonReentrant {\n        if (amount == 0) revert InvalidTokenAmount();\n        if (amount > BURN_LIMIT_PER_TX) revert ExceedsBurnLimit();\n        \n        _burn(_msgSender(), amount);\n        emit TokensBurnedBy(_msgSender(), amount);\n    }\n    \n    /**\n     * @dev 设置铸币权限（仅所有者）\n     * @param account 目标地址\n     * @param status 是否授予铸币权限\n     */\n    function setMinterRole(address account, bool status) external onlyOwner {\n        if (account == address(0)) revert InvalidAddress();\n        isMinterRole[account] = status;\n        emit MinterRoleUpdated(account, status);\n    }\n    \n    /**\n     * @dev 更新黑名单状态（仅所有者）\n     * @param account 目标地址\n     * @param status 是否加入黑名单\n     */\n    function updateBlacklistStatus(address account, bool status) external onlyOwner {\n        if (account == address(0)) revert InvalidAddress();\n        isBlacklisted[account] = status;\n        emit BlacklistStatusUpdated(account, status);\n    }\n\n    /**\n     * @dev 暂停所有代币转移（仅所有者）\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @dev 恢复代币转移（仅所有者）\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n    \n    /**\n     * @dev 检查地址是否具有铸币权限\n     * @param account 要检查的地址\n     * @return bool 是否是铸币者\n     */\n    function hasMinterRole(address account) public view returns (bool) {\n        return isMinterRole[account];\n    }\n}"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {PausableUpgradeable} from \"../../../utils/PausableUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20PausableUpgradeable is Initializable, ERC20Upgradeable, PausableUpgradeable {\n    function __ERC20Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __ERC20Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol": {
				"ERC20PausableUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":\"ERC20PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x6864ab59f6580008a75b6b6b706170eb6b3729ca062eba7d77e864c4a957d5fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52ec5e3c8604ad60ea99e19e93e90506eac5e78e24ce84f91a38ea74b7df4b1c\",\"dweb:/ipfs/Qma3XrookDY3KqKxU83Y9aUKeke33wMUMTNNBKcfDNbC8T\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SkyToken.sol": {
				"SkyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccountIsBlacklisted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExceedsBurnLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExceedsMintLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorizedMinter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SupplyExceedsMax",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "BlacklistStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "MinterRoleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurnedBy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensMintedTo",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURN_LIMIT_PER_TX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINT_LIMIT_PER_TX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasMinterRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isMinterRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setMinterRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "updateBlacklistStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Sky Token (SKY) 的主要合约实现 实现了可升级的 ERC20 代币标准，包含完整的安全特性和扩展功能",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "销毁代币",
								"params": {
									"amount": "销毁数量"
								}
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"hasMinterRole(address)": {
								"details": "检查地址是否具有铸币权限",
								"params": {
									"account": "要检查的地址"
								},
								"returns": {
									"_0": "bool 是否是铸币者"
								}
							},
							"initialize()": {
								"details": "初始化 Sky Token 合约 设置代币名称、符号，并分配初始供应量"
							},
							"mint(address,uint256)": {
								"details": "铸造新代币（仅授权铸币者）",
								"params": {
									"amount": "铸造数量",
									"recipient": "接收地址"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "暂停所有代币转移（仅所有者）"
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setMinterRole(address,bool)": {
								"details": "设置铸币权限（仅所有者）",
								"params": {
									"account": "目标地址",
									"status": "是否授予铸币权限"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "恢复代币转移（仅所有者）"
							},
							"updateBlacklistStatus(address,bool)": {
								"details": "更新黑名单状态（仅所有者）",
								"params": {
									"account": "目标地址",
									"status": "是否加入黑名单"
								}
							}
						},
						"title": "SkyToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SkyToken.sol\":636:5680  contract SkyToken is ... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SkyToken.sol\":2090:2143  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SkyToken.sol\":2114:2136  _disableInitializers() */\n  tag_4\n    /* \"contracts/SkyToken.sol\":2114:2134  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"contracts/SkyToken.sol\":2114:2136  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/SkyToken.sol\":636:5680  contract SkyToken is ... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SkyToken.sol\":636:5680  contract SkyToken is ... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SkyToken.sol\":636:5680  contract SkyToken is ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x9d888e86\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xcb177b1e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xcb177b1e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x9d888e86\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb8360806\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x8129fc1c\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x23b872dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x4004c7a2\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x4004c7a2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x50f7c204\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x099db017\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18ab42c5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x20fc56a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SkyToken.sol\":5566:5678  function hasMinterRole(address account) public view returns (bool) {... */\n    tag_5:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SkyToken.sol\":1161:1220  uint256 public constant MINT_LIMIT_PER_TX = 1_000_000 ether */\n    tag_7:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SkyToken.sol\":1264:1321  uint256 public constant BURN_LIMIT_PER_TX = 500_000 ether */\n    tag_8:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SkyToken.sol\":5346:5411  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/SkyToken.sol\":1442:1486  mapping(address => bool) public isMinterRole */\n    tag_12:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SkyToken.sol\":3486:3987  function mint(address recipient, uint256 amount) external nonReentrant {... */\n    tag_13:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/SkyToken.sol\":4072:4355  function burn(uint256 amount) public virtual nonReentrant {... */\n    tag_14:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/SkyToken.sol\":1095:1124  uint256 public maxTokenSupply */\n    tag_15:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_16:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/SkyToken.sol\":2266:2779  function initialize() public initializer {... */\n    tag_19:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/SkyToken.sol\":5214:5275  function pause() external onlyOwner {... */\n    tag_20:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SkyToken.sol\":1060:1089  uint256 public currentVersion */\n    tag_23:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SkyToken.sol\":4895:5137  function updateBlacklistStatus(address account, bool status) external onlyOwner {... */\n    tag_25:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/SkyToken.sol\":4511:4739  function setMinterRole(address account, bool status) external onlyOwner {... */\n    tag_26:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_27:\n      tag_120\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/SkyToken.sol\":1391:1436  mapping(address => bool) public isBlacklisted */\n    tag_29:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_136\n      jump\t// in\n    tag_137:\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":5566:5678  function hasMinterRole(address account) public view returns (bool) {... */\n    tag_49:\n        /* \"contracts/SkyToken.sol\":5627:5631  bool */\n      0x00\n        /* \"contracts/SkyToken.sol\":5650:5662  isMinterRole */\n      0x35\n        /* \"contracts/SkyToken.sol\":5650:5671  isMinterRole[account] */\n      0x00\n        /* \"contracts/SkyToken.sol\":5663:5670  account */\n      dup4\n        /* \"contracts/SkyToken.sol\":5650:5671  isMinterRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SkyToken.sol\":5643:5671  return isMinterRole[account] */\n      swap1\n      pop\n        /* \"contracts/SkyToken.sol\":5566:5678  function hasMinterRole(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":1161:1220  uint256 public constant MINT_LIMIT_PER_TX = 1_000_000 ether */\n    tag_56:\n        /* \"contracts/SkyToken.sol\":1205:1220  1_000_000 ether */\n      0xd3c21bcecceda1000000\n        /* \"contracts/SkyToken.sol\":1161:1220  uint256 public constant MINT_LIMIT_PER_TX = 1_000_000 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":1264:1321  uint256 public constant BURN_LIMIT_PER_TX = 500_000 ether */\n    tag_59:\n        /* \"contracts/SkyToken.sol\":1308:1321  500_000 ether */\n      0x69e10de76676d0800000\n        /* \"contracts/SkyToken.sol\":1264:1321  uint256 public constant BURN_LIMIT_PER_TX = 500_000 ether */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6106  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6119  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6121  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6153:6160  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6214:6225  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":5346:5411  function unpause() external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/SkyToken.sol\":5394:5404  _unpause() */\n      tag_160\n        /* \"contracts/SkyToken.sol\":5394:5402  _unpause */\n      tag_161\n        /* \"contracts/SkyToken.sol\":5394:5404  _unpause() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/SkyToken.sol\":5346:5411  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":1442:1486  mapping(address => bool) public isMinterRole */\n    tag_74:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":3486:3987  function mint(address recipient, uint256 amount) external nonReentrant {... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/SkyToken.sol\":3572:3584  isMinterRole */\n      0x35\n        /* \"contracts/SkyToken.sol\":3572:3596  isMinterRole[msg.sender] */\n      0x00\n        /* \"contracts/SkyToken.sol\":3585:3595  msg.sender */\n      caller\n        /* \"contracts/SkyToken.sol\":3572:3596  isMinterRole[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SkyToken.sol\":3567:3626  if (!isMinterRole[msg.sender]) revert NotAuthorizedMinter() */\n      tag_166\n      jumpi\n        /* \"contracts/SkyToken.sol\":3605:3626  NotAuthorizedMinter() */\n      mload(0x40)\n      0xcd2e8e8000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":3567:3626  if (!isMinterRole[msg.sender]) revert NotAuthorizedMinter() */\n    tag_166:\n        /* \"contracts/SkyToken.sol\":3661:3662  0 */\n      0x00\n        /* \"contracts/SkyToken.sol\":3640:3663  recipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SkyToken.sol\":3640:3649  recipient */\n      dup3\n        /* \"contracts/SkyToken.sol\":3640:3663  recipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SkyToken.sol\":3636:3688  if (recipient == address(0)) revert InvalidAddress() */\n      tag_167\n      jumpi\n        /* \"contracts/SkyToken.sol\":3672:3688  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":3636:3688  if (recipient == address(0)) revert InvalidAddress() */\n    tag_167:\n        /* \"contracts/SkyToken.sol\":3712:3713  0 */\n      0x00\n        /* \"contracts/SkyToken.sol\":3702:3708  amount */\n      dup2\n        /* \"contracts/SkyToken.sol\":3702:3713  amount == 0 */\n      sub\n        /* \"contracts/SkyToken.sol\":3698:3742  if (amount == 0) revert InvalidTokenAmount() */\n      tag_168\n      jumpi\n        /* \"contracts/SkyToken.sol\":3722:3742  InvalidTokenAmount() */\n      mload(0x40)\n      0x2160733900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":3698:3742  if (amount == 0) revert InvalidTokenAmount() */\n    tag_168:\n        /* \"contracts/SkyToken.sol\":1205:1220  1_000_000 ether */\n      0xd3c21bcecceda1000000\n        /* \"contracts/SkyToken.sol\":3756:3762  amount */\n      dup2\n        /* \"contracts/SkyToken.sol\":3756:3782  amount > MINT_LIMIT_PER_TX */\n      gt\n        /* \"contracts/SkyToken.sol\":3752:3809  if (amount > MINT_LIMIT_PER_TX) revert ExceedsMintLimit() */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/SkyToken.sol\":3791:3809  ExceedsMintLimit() */\n      mload(0x40)\n      0xd5c0322600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":3752:3809  if (amount > MINT_LIMIT_PER_TX) revert ExceedsMintLimit() */\n    tag_169:\n        /* \"contracts/SkyToken.sol\":3848:3862  maxTokenSupply */\n      sload(0x33)\n        /* \"contracts/SkyToken.sol\":3839:3845  amount */\n      dup2\n        /* \"contracts/SkyToken.sol\":3823:3836  totalSupply() */\n      tag_170\n        /* \"contracts/SkyToken.sol\":3823:3834  totalSupply */\n      tag_52\n        /* \"contracts/SkyToken.sol\":3823:3836  totalSupply() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/SkyToken.sol\":3823:3845  totalSupply() + amount */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/SkyToken.sol\":3823:3862  totalSupply() + amount > maxTokenSupply */\n      gt\n        /* \"contracts/SkyToken.sol\":3819:3889  if (totalSupply() + amount > maxTokenSupply) revert SupplyExceedsMax() */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/SkyToken.sol\":3871:3889  SupplyExceedsMax() */\n      mload(0x40)\n      0xa2dda64700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":3819:3889  if (totalSupply() + amount > maxTokenSupply) revert SupplyExceedsMax() */\n    tag_173:\n        /* \"contracts/SkyToken.sol\":3908:3932  _mint(recipient, amount) */\n      tag_174\n        /* \"contracts/SkyToken.sol\":3914:3923  recipient */\n      dup3\n        /* \"contracts/SkyToken.sol\":3925:3931  amount */\n      dup3\n        /* \"contracts/SkyToken.sol\":3908:3913  _mint */\n      tag_175\n        /* \"contracts/SkyToken.sol\":3908:3932  _mint(recipient, amount) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/SkyToken.sol\":3962:3971  recipient */\n      dup2\n        /* \"contracts/SkyToken.sol\":3947:3980  TokensMintedTo(recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147\n        /* \"contracts/SkyToken.sol\":3973:3979  amount */\n      dup3\n        /* \"contracts/SkyToken.sol\":3947:3980  TokensMintedTo(recipient, amount) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/SkyToken.sol\":3486:3987  function mint(address recipient, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":4072:4355  function burn(uint256 amount) public virtual nonReentrant {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_180:\n        /* \"contracts/SkyToken.sol\":4154:4155  0 */\n      0x00\n        /* \"contracts/SkyToken.sol\":4144:4150  amount */\n      dup2\n        /* \"contracts/SkyToken.sol\":4144:4155  amount == 0 */\n      sub\n        /* \"contracts/SkyToken.sol\":4140:4184  if (amount == 0) revert InvalidTokenAmount() */\n      tag_182\n      jumpi\n        /* \"contracts/SkyToken.sol\":4164:4184  InvalidTokenAmount() */\n      mload(0x40)\n      0x2160733900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":4140:4184  if (amount == 0) revert InvalidTokenAmount() */\n    tag_182:\n        /* \"contracts/SkyToken.sol\":1308:1321  500_000 ether */\n      0x69e10de76676d0800000\n        /* \"contracts/SkyToken.sol\":4198:4204  amount */\n      dup2\n        /* \"contracts/SkyToken.sol\":4198:4224  amount > BURN_LIMIT_PER_TX */\n      gt\n        /* \"contracts/SkyToken.sol\":4194:4251  if (amount > BURN_LIMIT_PER_TX) revert ExceedsBurnLimit() */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/SkyToken.sol\":4233:4251  ExceedsBurnLimit() */\n      mload(0x40)\n      0xb8e7123600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":4194:4251  if (amount > BURN_LIMIT_PER_TX) revert ExceedsBurnLimit() */\n    tag_183:\n        /* \"contracts/SkyToken.sol\":4270:4297  _burn(_msgSender(), amount) */\n      tag_184\n        /* \"contracts/SkyToken.sol\":4276:4288  _msgSender() */\n      tag_185\n        /* \"contracts/SkyToken.sol\":4276:4286  _msgSender */\n      tag_143\n        /* \"contracts/SkyToken.sol\":4276:4288  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/SkyToken.sol\":4290:4296  amount */\n      dup3\n        /* \"contracts/SkyToken.sol\":4270:4275  _burn */\n      tag_186\n        /* \"contracts/SkyToken.sol\":4270:4297  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/SkyToken.sol\":4327:4339  _msgSender() */\n      tag_187\n        /* \"contracts/SkyToken.sol\":4327:4337  _msgSender */\n      tag_143\n        /* \"contracts/SkyToken.sol\":4327:4339  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/SkyToken.sol\":4312:4348  TokensBurnedBy(_msgSender(), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe510c8c53e4242bccd9841e6f1f5fe02545bdad7b524c54c8ff90ffda089e278\n        /* \"contracts/SkyToken.sol\":4341:4347  amount */\n      dup3\n        /* \"contracts/SkyToken.sol\":4312:4348  TokensBurnedBy(_msgSender(), amount) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/SkyToken.sol\":4072:4355  function burn(uint256 amount) public virtual nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":1095:1124  uint256 public maxTokenSupply */\n    tag_84:\n      sload(0x33)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2739:2743  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2780  PausableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2802  _getPausableStorage */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2804  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2822  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2814:2830  return $._paused */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":2266:2779  function initialize() public initializer {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_207:\n        /* \"contracts/SkyToken.sol\":2317:2349  __ERC20_init(\"Sky Token\", \"SKY\") */\n      tag_209\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x536b7920546f6b656e0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x534b590000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/SkyToken.sol\":2317:2329  __ERC20_init */\n      tag_210\n        /* \"contracts/SkyToken.sol\":2317:2349  __ERC20_init(\"Sky Token\", \"SKY\") */\n      jump\t// in\n    tag_209:\n        /* \"contracts/SkyToken.sol\":2359:2385  __Ownable_init(msg.sender) */\n      tag_211\n        /* \"contracts/SkyToken.sol\":2374:2384  msg.sender */\n      caller\n        /* \"contracts/SkyToken.sol\":2359:2373  __Ownable_init */\n      tag_212\n        /* \"contracts/SkyToken.sol\":2359:2385  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/SkyToken.sol\":2395:2417  __ERC20Pausable_init() */\n      tag_213\n        /* \"contracts/SkyToken.sol\":2395:2415  __ERC20Pausable_init */\n      tag_214\n        /* \"contracts/SkyToken.sol\":2395:2417  __ERC20Pausable_init() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/SkyToken.sol\":2427:2451  __ReentrancyGuard_init() */\n      tag_215\n        /* \"contracts/SkyToken.sol\":2427:2449  __ReentrancyGuard_init */\n      tag_216\n        /* \"contracts/SkyToken.sol\":2427:2451  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/SkyToken.sol\":953:972  1_000_000_000 ether */\n      0x033b2e3c9fd0803ce8000000\n        /* \"contracts/SkyToken.sol\":2470:2484  maxTokenSupply */\n      0x33\n        /* \"contracts/SkyToken.sol\":2470:2503  maxTokenSupply = MAX_TOTAL_SUPPLY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SkyToken.sol\":1048:1049  1 */\n      0x01\n        /* \"contracts/SkyToken.sol\":2513:2527  currentVersion */\n      0x32\n        /* \"contracts/SkyToken.sol\":2513:2545  currentVersion = CURRENT_VERSION */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SkyToken.sol\":2600:2633  _mint(msg.sender, INITIAL_SUPPLY) */\n      tag_217\n        /* \"contracts/SkyToken.sol\":2606:2616  msg.sender */\n      caller\n        /* \"contracts/SkyToken.sol\":862:879  100_000_000 ether */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/SkyToken.sol\":2600:2605  _mint */\n      tag_175\n        /* \"contracts/SkyToken.sol\":2600:2633  _mint(msg.sender, INITIAL_SUPPLY) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/SkyToken.sol\":2718:2722  true */\n      0x01\n        /* \"contracts/SkyToken.sol\":2691:2703  isMinterRole */\n      0x35\n        /* \"contracts/SkyToken.sol\":2691:2715  isMinterRole[msg.sender] */\n      0x00\n        /* \"contracts/SkyToken.sol\":2704:2714  msg.sender */\n      caller\n        /* \"contracts/SkyToken.sol\":2691:2715  isMinterRole[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SkyToken.sol\":2691:2722  isMinterRole[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SkyToken.sol\":2755:2765  msg.sender */\n      caller\n        /* \"contracts/SkyToken.sol\":2737:2772  MinterRoleUpdated(msg.sender, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0d0ce8757673482ba416ece0cb058dacd500bb9d737793d5f34ad5548dd4e2fb\n        /* \"contracts/SkyToken.sol\":2767:2771  true */\n      0x01\n        /* \"contracts/SkyToken.sol\":2737:2772  MinterRoleUpdated(msg.sender, true) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SkyToken.sol\":2266:2779  function initialize() public initializer {... */\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":5214:5275  function pause() external onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \"contracts/SkyToken.sol\":5260:5268  _pause() */\n      tag_225\n        /* \"contracts/SkyToken.sol\":5260:5266  _pause */\n      tag_226\n        /* \"contracts/SkyToken.sol\":5260:5268  _pause() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/SkyToken.sol\":5214:5275  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_232\n      swap1\n      tag_136\n      jump\t// in\n    tag_232:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_136\n      jump\t// in\n    tag_233:\n      dup1\n      iszero\n      tag_234\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_235\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_234)\n    tag_235:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_236:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_236\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":1060:1089  uint256 public currentVersion */\n    tag_107:\n      sload(0x32)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4570  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4583  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4585  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4605:4610  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4639:4643  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4632:4643  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":4895:5137  function updateBlacklistStatus(address account, bool status) external onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/SkyToken.sol\":5008:5009  0 */\n      0x00\n        /* \"contracts/SkyToken.sol\":4989:5010  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SkyToken.sol\":4989:4996  account */\n      dup3\n        /* \"contracts/SkyToken.sol\":4989:5010  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SkyToken.sol\":4985:5035  if (account == address(0)) revert InvalidAddress() */\n      tag_243\n      jumpi\n        /* \"contracts/SkyToken.sol\":5019:5035  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":4985:5035  if (account == address(0)) revert InvalidAddress() */\n    tag_243:\n        /* \"contracts/SkyToken.sol\":5070:5076  status */\n      dup1\n        /* \"contracts/SkyToken.sol\":5045:5058  isBlacklisted */\n      0x34\n        /* \"contracts/SkyToken.sol\":5045:5067  isBlacklisted[account] */\n      0x00\n        /* \"contracts/SkyToken.sol\":5059:5066  account */\n      dup5\n        /* \"contracts/SkyToken.sol\":5045:5067  isBlacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SkyToken.sol\":5045:5076  isBlacklisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SkyToken.sol\":5114:5121  account */\n      dup2\n        /* \"contracts/SkyToken.sol\":5091:5130  BlacklistStatusUpdated(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x92d364d140f902817e5eaa71cedfe20bae2a3c66a2725cee3d9a51d73f052fb6\n        /* \"contracts/SkyToken.sol\":5123:5129  status */\n      dup3\n        /* \"contracts/SkyToken.sol\":5091:5130  BlacklistStatusUpdated(account, status) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SkyToken.sol\":4895:5137  function updateBlacklistStatus(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":4511:4739  function setMinterRole(address account, bool status) external onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/SkyToken.sol\":4616:4617  0 */\n      0x00\n        /* \"contracts/SkyToken.sol\":4597:4618  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SkyToken.sol\":4597:4604  account */\n      dup3\n        /* \"contracts/SkyToken.sol\":4597:4618  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SkyToken.sol\":4593:4643  if (account == address(0)) revert InvalidAddress() */\n      tag_248\n      jumpi\n        /* \"contracts/SkyToken.sol\":4627:4643  InvalidAddress() */\n      mload(0x40)\n      0xe6c4247b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":4593:4643  if (account == address(0)) revert InvalidAddress() */\n    tag_248:\n        /* \"contracts/SkyToken.sol\":4677:4683  status */\n      dup1\n        /* \"contracts/SkyToken.sol\":4653:4665  isMinterRole */\n      0x35\n        /* \"contracts/SkyToken.sol\":4653:4674  isMinterRole[account] */\n      0x00\n        /* \"contracts/SkyToken.sol\":4666:4673  account */\n      dup5\n        /* \"contracts/SkyToken.sol\":4653:4674  isMinterRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SkyToken.sol\":4653:4683  isMinterRole[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SkyToken.sol\":4716:4723  account */\n      dup2\n        /* \"contracts/SkyToken.sol\":4698:4732  MinterRoleUpdated(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0d0ce8757673482ba416ece0cb058dacd500bb9d737793d5f34ad5548dd4e2fb\n        /* \"contracts/SkyToken.sol\":4725:4731  status */\n      dup3\n        /* \"contracts/SkyToken.sol\":4698:4732  MinterRoleUpdated(account, status) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SkyToken.sol\":4511:4739  function setMinterRole(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":1391:1436  mapping(address => bool) public isBlacklisted */\n    tag_130:\n      mstore(0x20, 0x34)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_261\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11868  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11881:11886  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11888:11895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11880  allowance */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11930:11947  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11926  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11947  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11986:11991  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11983  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11991  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12045:12052  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12054:12070  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12072:12077  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12143:12148  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12150:12157  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12183  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12175  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12183  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12185:12190  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12142  _approve */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:12222  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6704:6705  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6692  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6797:6798  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6785  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3757  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3779  _getPausableStorage */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3781  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3803:3808  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3792  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3800  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3842  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3722:3852  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8823  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9259:9465  function _burn(address account, uint256 value) internal {... */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9348:9349  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9350  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9336  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9329:9350  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9325:9414  if (account == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9400:9401  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9373:9403  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9325:9414  if (account == address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9458  _update(account, address(0), value) */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9431:9438  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:9449  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9452:9457  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9430  _update */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9423:9458  _update(account, address(0), value) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9259:9465  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1200:1225  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1270:1293  PausableStorageLocation */\n      0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1260:1293  $.slot := PausableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_305\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_311\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_312\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1149:1251  function __ERC20Pausable_init() internal onlyInitializing {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1217:1244  __Pausable_init_unchained() */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1217:1242  __Pausable_init_unchained */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1217:1244  __Pausable_init_unchained() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1149:1251  function __ERC20Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3450  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3472  _getPausableStorage */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3474  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3485  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3493  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3532  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      mload(0x40)\n      tag_334\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3415:3542  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11106  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      tag_337\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11125  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11127  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11158:11159  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11146  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11258:11259  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11246  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11371  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11335  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11348:11353  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11362  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11394  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_343\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SkyToken.sol\":2975:3337  function _update(... */\n    tag_276:\n        /* \"contracts/SkyToken.sol\":3174:3187  isBlacklisted */\n      0x34\n        /* \"contracts/SkyToken.sol\":3174:3193  isBlacklisted[from] */\n      0x00\n        /* \"contracts/SkyToken.sol\":3188:3192  from */\n      dup5\n        /* \"contracts/SkyToken.sol\":3174:3193  isBlacklisted[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SkyToken.sol\":3174:3214  isBlacklisted[from] || isBlacklisted[to] */\n      dup1\n      tag_345\n      jumpi\n      pop\n        /* \"contracts/SkyToken.sol\":3197:3210  isBlacklisted */\n      0x34\n        /* \"contracts/SkyToken.sol\":3197:3214  isBlacklisted[to] */\n      0x00\n        /* \"contracts/SkyToken.sol\":3211:3213  to */\n      dup4\n        /* \"contracts/SkyToken.sol\":3197:3214  isBlacklisted[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SkyToken.sol\":3174:3214  isBlacklisted[from] || isBlacklisted[to] */\n    tag_345:\n        /* \"contracts/SkyToken.sol\":3170:3245  if (isBlacklisted[from] || isBlacklisted[to]) revert AccountIsBlacklisted() */\n      iszero\n      tag_346\n      jumpi\n        /* \"contracts/SkyToken.sol\":3223:3245  AccountIsBlacklisted() */\n      mload(0x40)\n      0xab73372a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SkyToken.sol\":3170:3245  if (isBlacklisted[from] || isBlacklisted[to]) revert AccountIsBlacklisted() */\n    tag_346:\n        /* \"contracts/SkyToken.sol\":3300:3330  super._update(from, to, value) */\n      tag_347\n        /* \"contracts/SkyToken.sol\":3314:3318  from */\n      dup4\n        /* \"contracts/SkyToken.sol\":3320:3322  to */\n      dup4\n        /* \"contracts/SkyToken.sol\":3324:3329  value */\n      dup4\n        /* \"contracts/SkyToken.sol\":3300:3313  super._update */\n      tag_348\n        /* \"contracts/SkyToken.sol\":3300:3330  super._update(from, to, value) */\n      jump\t// in\n    tag_347:\n        /* \"contracts/SkyToken.sol\":2975:3337  function _update(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3174  paused */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_353\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_354\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_357\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_360\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_360:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_362\n      swap2\n      swap1\n      tag_361\n      jump\t// in\n    tag_362:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_368\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_370\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2037  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2059  _getPausableStorage */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2061  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2083:2088  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2072  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2080  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2002:2095  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2976  paused */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1463:1608  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1571:1601  super._update(from, to, value) */\n      tag_382\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1585:1589  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1591:1593  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1595:1600  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1571:1584  super._update */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1571:1601  super._update(from, to, value) */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":1463:1608  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7327  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7346  _getERC20Storage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7348  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7378:7379  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7366  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_389\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_389:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      jump(tag_390)\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7575  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7585  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7590  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7591  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:7628  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7620  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7684  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7686:7697  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7699:7704  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_392\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7879  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7871  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7841  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7852:7856  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7538:7904  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7920  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8099:8104  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8082  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_394)\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8313:8318  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8295  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8306:8308  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_395\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_396:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_397:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_398:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_399:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_400:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_449\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_396\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":711:782   */\n      tag_450\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_397\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_451\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_398\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":881:910   */\n      tag_452\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_399\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_454\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_400\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_402:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_404:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_405:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_460\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_404\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_406:\n        /* \"#utility.yul\":1876:1900   */\n      tag_462\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_405\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_463:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_407:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_465\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_406\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_408:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_409:\n        /* \"#utility.yul\":2232:2256   */\n      tag_468\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_408\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_469:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_410:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_471\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_409\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_42:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_474\n      tag_402\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2525:2644   */\n    tag_473:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_475\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_407\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_476\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_410\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_411:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_412:\n        /* \"#utility.yul\":3089:3110   */\n      tag_479\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_411\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_45:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_481\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_412\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_48:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_484\n      tag_402\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3415:3534   */\n    tag_483:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_485\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_407\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_413:\n        /* \"#utility.yul\":3761:3785   */\n      tag_487\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_408\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_54:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_489\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_413\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_63:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_492\n      tag_402\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":4136:4255   */\n    tag_491:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_493\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_407\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_494\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_407\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_495\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_410\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_414:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_415:\n        /* \"#utility.yul\":4826:4848   */\n      tag_498\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_414\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_69:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_500\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_415\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_81:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_503\n      tag_402\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":5157:5276   */\n    tag_502:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_504\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_410\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_416:\n        /* \"#utility.yul\":5503:5527   */\n      tag_506\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_405\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_102:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_508\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_416\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5884   */\n    tag_417:\n        /* \"#utility.yul\":5838:5859   */\n      tag_510\n        /* \"#utility.yul\":5853:5858   */\n      dup2\n        /* \"#utility.yul\":5838:5859   */\n      tag_411\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5831:5836   */\n      dup2\n        /* \"#utility.yul\":5828:5860   */\n      eq\n        /* \"#utility.yul\":5818:5878   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":5874:5875   */\n      0x00\n        /* \"#utility.yul\":5871:5872   */\n      dup1\n        /* \"#utility.yul\":5864:5876   */\n      revert\n        /* \"#utility.yul\":5818:5878   */\n    tag_511:\n        /* \"#utility.yul\":5768:5884   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5890:6023   */\n    tag_418:\n        /* \"#utility.yul\":5933:5938   */\n      0x00\n        /* \"#utility.yul\":5971:5977   */\n      dup2\n        /* \"#utility.yul\":5958:5978   */\n      calldataload\n        /* \"#utility.yul\":5949:5978   */\n      swap1\n      pop\n        /* \"#utility.yul\":5987:6017   */\n      tag_513\n        /* \"#utility.yul\":6011:6016   */\n      dup2\n        /* \"#utility.yul\":5987:6017   */\n      tag_417\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":5890:6023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6029:6497   */\n    tag_115:\n        /* \"#utility.yul\":6094:6100   */\n      0x00\n        /* \"#utility.yul\":6102:6108   */\n      dup1\n        /* \"#utility.yul\":6151:6153   */\n      0x40\n        /* \"#utility.yul\":6139:6148   */\n      dup4\n        /* \"#utility.yul\":6130:6137   */\n      dup6\n        /* \"#utility.yul\":6126:6149   */\n      sub\n        /* \"#utility.yul\":6122:6154   */\n      slt\n        /* \"#utility.yul\":6119:6238   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":6157:6236   */\n      tag_516\n      tag_402\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6119:6238   */\n    tag_515:\n        /* \"#utility.yul\":6277:6278   */\n      0x00\n        /* \"#utility.yul\":6302:6355   */\n      tag_517\n        /* \"#utility.yul\":6347:6354   */\n      dup6\n        /* \"#utility.yul\":6338:6344   */\n      dup3\n        /* \"#utility.yul\":6327:6336   */\n      dup7\n        /* \"#utility.yul\":6323:6345   */\n      add\n        /* \"#utility.yul\":6302:6355   */\n      tag_407\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":6292:6355   */\n      swap3\n      pop\n        /* \"#utility.yul\":6248:6365   */\n      pop\n        /* \"#utility.yul\":6404:6406   */\n      0x20\n        /* \"#utility.yul\":6430:6480   */\n      tag_518\n        /* \"#utility.yul\":6472:6479   */\n      dup6\n        /* \"#utility.yul\":6463:6469   */\n      dup3\n        /* \"#utility.yul\":6452:6461   */\n      dup7\n        /* \"#utility.yul\":6448:6470   */\n      add\n        /* \"#utility.yul\":6430:6480   */\n      tag_418\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":6420:6480   */\n      swap2\n      pop\n        /* \"#utility.yul\":6375:6490   */\n      pop\n        /* \"#utility.yul\":6029:6497   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6977   */\n    tag_122:\n        /* \"#utility.yul\":6571:6577   */\n      0x00\n        /* \"#utility.yul\":6579:6585   */\n      dup1\n        /* \"#utility.yul\":6628:6630   */\n      0x40\n        /* \"#utility.yul\":6616:6625   */\n      dup4\n        /* \"#utility.yul\":6607:6614   */\n      dup6\n        /* \"#utility.yul\":6603:6626   */\n      sub\n        /* \"#utility.yul\":6599:6631   */\n      slt\n        /* \"#utility.yul\":6596:6715   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":6634:6713   */\n      tag_521\n      tag_402\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6596:6715   */\n    tag_520:\n        /* \"#utility.yul\":6754:6755   */\n      0x00\n        /* \"#utility.yul\":6779:6832   */\n      tag_522\n        /* \"#utility.yul\":6824:6831   */\n      dup6\n        /* \"#utility.yul\":6815:6821   */\n      dup3\n        /* \"#utility.yul\":6804:6813   */\n      dup7\n        /* \"#utility.yul\":6800:6822   */\n      add\n        /* \"#utility.yul\":6779:6832   */\n      tag_407\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6769:6832   */\n      swap3\n      pop\n        /* \"#utility.yul\":6725:6842   */\n      pop\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6907:6960   */\n      tag_523\n        /* \"#utility.yul\":6952:6959   */\n      dup6\n        /* \"#utility.yul\":6943:6949   */\n      dup3\n        /* \"#utility.yul\":6932:6941   */\n      dup7\n        /* \"#utility.yul\":6928:6950   */\n      add\n        /* \"#utility.yul\":6907:6960   */\n      tag_407\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":6897:6960   */\n      swap2\n      pop\n        /* \"#utility.yul\":6852:6970   */\n      pop\n        /* \"#utility.yul\":6503:6977   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6983:7163   */\n    tag_419:\n        /* \"#utility.yul\":7031:7108   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7028:7029   */\n      0x00\n        /* \"#utility.yul\":7021:7109   */\n      mstore\n        /* \"#utility.yul\":7128:7132   */\n      0x22\n        /* \"#utility.yul\":7125:7126   */\n      0x04\n        /* \"#utility.yul\":7118:7133   */\n      mstore\n        /* \"#utility.yul\":7152:7156   */\n      0x24\n        /* \"#utility.yul\":7149:7150   */\n      0x00\n        /* \"#utility.yul\":7142:7157   */\n      revert\n        /* \"#utility.yul\":7169:7489   */\n    tag_136:\n        /* \"#utility.yul\":7213:7219   */\n      0x00\n        /* \"#utility.yul\":7250:7251   */\n      0x02\n        /* \"#utility.yul\":7244:7248   */\n      dup3\n        /* \"#utility.yul\":7240:7252   */\n      div\n        /* \"#utility.yul\":7230:7252   */\n      swap1\n      pop\n        /* \"#utility.yul\":7297:7298   */\n      0x01\n        /* \"#utility.yul\":7291:7295   */\n      dup3\n        /* \"#utility.yul\":7287:7299   */\n      and\n        /* \"#utility.yul\":7318:7336   */\n      dup1\n        /* \"#utility.yul\":7308:7389   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":7374:7378   */\n      0x7f\n        /* \"#utility.yul\":7366:7372   */\n      dup3\n        /* \"#utility.yul\":7362:7379   */\n      and\n        /* \"#utility.yul\":7352:7379   */\n      swap2\n      pop\n        /* \"#utility.yul\":7308:7389   */\n    tag_526:\n        /* \"#utility.yul\":7436:7438   */\n      0x20\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7425:7439   */\n      lt\n        /* \"#utility.yul\":7405:7423   */\n      dup2\n        /* \"#utility.yul\":7402:7440   */\n      sub\n        /* \"#utility.yul\":7399:7483   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":7455:7473   */\n      tag_528\n      tag_419\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":7399:7483   */\n    tag_527:\n        /* \"#utility.yul\":7220:7489   */\n      pop\n        /* \"#utility.yul\":7169:7489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7495:7675   */\n    tag_420:\n        /* \"#utility.yul\":7543:7620   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7540:7541   */\n      0x00\n        /* \"#utility.yul\":7533:7621   */\n      mstore\n        /* \"#utility.yul\":7640:7644   */\n      0x11\n        /* \"#utility.yul\":7637:7638   */\n      0x04\n        /* \"#utility.yul\":7630:7645   */\n      mstore\n        /* \"#utility.yul\":7664:7668   */\n      0x24\n        /* \"#utility.yul\":7661:7662   */\n      0x00\n        /* \"#utility.yul\":7654:7669   */\n      revert\n        /* \"#utility.yul\":7681:7872   */\n    tag_172:\n        /* \"#utility.yul\":7721:7724   */\n      0x00\n        /* \"#utility.yul\":7740:7760   */\n      tag_531\n        /* \"#utility.yul\":7758:7759   */\n      dup3\n        /* \"#utility.yul\":7740:7760   */\n      tag_408\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7735:7760   */\n      swap2\n      pop\n        /* \"#utility.yul\":7774:7794   */\n      tag_532\n        /* \"#utility.yul\":7792:7793   */\n      dup4\n        /* \"#utility.yul\":7774:7794   */\n      tag_408\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7769:7794   */\n      swap3\n      pop\n        /* \"#utility.yul\":7817:7818   */\n      dup3\n        /* \"#utility.yul\":7814:7815   */\n      dup3\n        /* \"#utility.yul\":7810:7819   */\n      add\n        /* \"#utility.yul\":7803:7819   */\n      swap1\n      pop\n        /* \"#utility.yul\":7838:7841   */\n      dup1\n        /* \"#utility.yul\":7835:7836   */\n      dup3\n        /* \"#utility.yul\":7832:7842   */\n      gt\n        /* \"#utility.yul\":7829:7865   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":7845:7863   */\n      tag_534\n      tag_420\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7829:7865   */\n    tag_533:\n        /* \"#utility.yul\":7681:7872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7878:7963   */\n    tag_421:\n        /* \"#utility.yul\":7923:7930   */\n      0x00\n        /* \"#utility.yul\":7952:7957   */\n      dup2\n        /* \"#utility.yul\":7941:7957   */\n      swap1\n      pop\n        /* \"#utility.yul\":7878:7963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7969:8070   */\n    tag_422:\n        /* \"#utility.yul\":8005:8012   */\n      0x00\n        /* \"#utility.yul\":8045:8063   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8038:8043   */\n      dup3\n        /* \"#utility.yul\":8034:8064   */\n      and\n        /* \"#utility.yul\":8023:8064   */\n      swap1\n      pop\n        /* \"#utility.yul\":7969:8070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8076:8136   */\n    tag_423:\n        /* \"#utility.yul\":8104:8107   */\n      0x00\n        /* \"#utility.yul\":8125:8130   */\n      dup2\n        /* \"#utility.yul\":8118:8130   */\n      swap1\n      pop\n        /* \"#utility.yul\":8076:8136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8142:8298   */\n    tag_424:\n        /* \"#utility.yul\":8199:8208   */\n      0x00\n        /* \"#utility.yul\":8232:8292   */\n      tag_539\n        /* \"#utility.yul\":8249:8291   */\n      tag_540\n        /* \"#utility.yul\":8258:8290   */\n      tag_541\n        /* \"#utility.yul\":8284:8289   */\n      dup5\n        /* \"#utility.yul\":8258:8290   */\n      tag_421\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8249:8291   */\n      tag_423\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8232:8292   */\n      tag_422\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":8219:8292   */\n      swap1\n      pop\n        /* \"#utility.yul\":8142:8298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8304:8449   */\n    tag_425:\n        /* \"#utility.yul\":8398:8442   */\n      tag_543\n        /* \"#utility.yul\":8436:8441   */\n      dup2\n        /* \"#utility.yul\":8398:8442   */\n      tag_424\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":8393:8396   */\n      dup3\n        /* \"#utility.yul\":8386:8443   */\n      mstore\n        /* \"#utility.yul\":8304:8449   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8455:8691   */\n    tag_221:\n        /* \"#utility.yul\":8555:8559   */\n      0x00\n        /* \"#utility.yul\":8593:8595   */\n      0x20\n        /* \"#utility.yul\":8582:8591   */\n      dup3\n        /* \"#utility.yul\":8578:8596   */\n      add\n        /* \"#utility.yul\":8570:8596   */\n      swap1\n      pop\n        /* \"#utility.yul\":8606:8684   */\n      tag_545\n        /* \"#utility.yul\":8681:8682   */\n      0x00\n        /* \"#utility.yul\":8670:8679   */\n      dup4\n        /* \"#utility.yul\":8666:8683   */\n      add\n        /* \"#utility.yul\":8657:8663   */\n      dup5\n        /* \"#utility.yul\":8606:8684   */\n      tag_425\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":8455:8691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8697:9139   */\n    tag_268:\n        /* \"#utility.yul\":8846:8850   */\n      0x00\n        /* \"#utility.yul\":8884:8886   */\n      0x60\n        /* \"#utility.yul\":8873:8882   */\n      dup3\n        /* \"#utility.yul\":8869:8887   */\n      add\n        /* \"#utility.yul\":8861:8887   */\n      swap1\n      pop\n        /* \"#utility.yul\":8897:8968   */\n      tag_547\n        /* \"#utility.yul\":8965:8966   */\n      0x00\n        /* \"#utility.yul\":8954:8963   */\n      dup4\n        /* \"#utility.yul\":8950:8967   */\n      add\n        /* \"#utility.yul\":8941:8947   */\n      dup7\n        /* \"#utility.yul\":8897:8968   */\n      tag_416\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8978:9050   */\n      tag_548\n        /* \"#utility.yul\":9046:9048   */\n      0x20\n        /* \"#utility.yul\":9035:9044   */\n      dup4\n        /* \"#utility.yul\":9031:9049   */\n      add\n        /* \"#utility.yul\":9022:9028   */\n      dup6\n        /* \"#utility.yul\":8978:9050   */\n      tag_413\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":9060:9132   */\n      tag_549\n        /* \"#utility.yul\":9128:9130   */\n      0x40\n        /* \"#utility.yul\":9117:9126   */\n      dup4\n        /* \"#utility.yul\":9113:9131   */\n      add\n        /* \"#utility.yul\":9104:9110   */\n      dup5\n        /* \"#utility.yul\":9060:9132   */\n      tag_413\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8697:9139   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9145:9326   */\n    tag_426:\n        /* \"#utility.yul\":9285:9318   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9281:9282   */\n      0x00\n        /* \"#utility.yul\":9273:9279   */\n      dup3\n        /* \"#utility.yul\":9269:9283   */\n      add\n        /* \"#utility.yul\":9262:9319   */\n      mstore\n        /* \"#utility.yul\":9145:9326   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9332:9698   */\n    tag_427:\n        /* \"#utility.yul\":9474:9477   */\n      0x00\n        /* \"#utility.yul\":9495:9562   */\n      tag_552\n        /* \"#utility.yul\":9559:9561   */\n      0x1f\n        /* \"#utility.yul\":9554:9557   */\n      dup4\n        /* \"#utility.yul\":9495:9562   */\n      tag_397\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":9488:9562   */\n      swap2\n      pop\n        /* \"#utility.yul\":9571:9664   */\n      tag_553\n        /* \"#utility.yul\":9660:9663   */\n      dup3\n        /* \"#utility.yul\":9571:9664   */\n      tag_426\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":9689:9691   */\n      0x20\n        /* \"#utility.yul\":9684:9687   */\n      dup3\n        /* \"#utility.yul\":9680:9692   */\n      add\n        /* \"#utility.yul\":9673:9692   */\n      swap1\n      pop\n        /* \"#utility.yul\":9332:9698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9704:10123   */\n    tag_293:\n        /* \"#utility.yul\":9870:9874   */\n      0x00\n        /* \"#utility.yul\":9908:9910   */\n      0x20\n        /* \"#utility.yul\":9897:9906   */\n      dup3\n        /* \"#utility.yul\":9893:9911   */\n      add\n        /* \"#utility.yul\":9885:9911   */\n      swap1\n      pop\n        /* \"#utility.yul\":9957:9966   */\n      dup2\n        /* \"#utility.yul\":9951:9955   */\n      dup2\n        /* \"#utility.yul\":9947:9967   */\n      sub\n        /* \"#utility.yul\":9943:9944   */\n      0x00\n        /* \"#utility.yul\":9932:9941   */\n      dup4\n        /* \"#utility.yul\":9928:9945   */\n      add\n        /* \"#utility.yul\":9921:9968   */\n      mstore\n        /* \"#utility.yul\":9985:10116   */\n      tag_555\n        /* \"#utility.yul\":10111:10115   */\n      dup2\n        /* \"#utility.yul\":9985:10116   */\n      tag_427\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":9977:10116   */\n      swap1\n      pop\n        /* \"#utility.yul\":9704:10123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10129:10309   */\n    tag_428:\n        /* \"#utility.yul\":10177:10254   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10174:10175   */\n      0x00\n        /* \"#utility.yul\":10167:10255   */\n      mstore\n        /* \"#utility.yul\":10274:10278   */\n      0x41\n        /* \"#utility.yul\":10271:10272   */\n      0x04\n        /* \"#utility.yul\":10264:10279   */\n      mstore\n        /* \"#utility.yul\":10298:10302   */\n      0x24\n        /* \"#utility.yul\":10295:10296   */\n      0x00\n        /* \"#utility.yul\":10288:10303   */\n      revert\n        /* \"#utility.yul\":10315:10456   */\n    tag_429:\n        /* \"#utility.yul\":10364:10368   */\n      0x00\n        /* \"#utility.yul\":10387:10390   */\n      dup2\n        /* \"#utility.yul\":10379:10390   */\n      swap1\n      pop\n        /* \"#utility.yul\":10410:10413   */\n      dup2\n        /* \"#utility.yul\":10407:10408   */\n      0x00\n        /* \"#utility.yul\":10400:10414   */\n      mstore\n        /* \"#utility.yul\":10444:10448   */\n      0x20\n        /* \"#utility.yul\":10441:10442   */\n      0x00\n        /* \"#utility.yul\":10431:10449   */\n      keccak256\n        /* \"#utility.yul\":10423:10449   */\n      swap1\n      pop\n        /* \"#utility.yul\":10315:10456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10462:10555   */\n    tag_430:\n        /* \"#utility.yul\":10499:10505   */\n      0x00\n        /* \"#utility.yul\":10546:10548   */\n      0x20\n        /* \"#utility.yul\":10541:10543   */\n      0x1f\n        /* \"#utility.yul\":10534:10539   */\n      dup4\n        /* \"#utility.yul\":10530:10544   */\n      add\n        /* \"#utility.yul\":10526:10549   */\n      div\n        /* \"#utility.yul\":10516:10549   */\n      swap1\n      pop\n        /* \"#utility.yul\":10462:10555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10561:10668   */\n    tag_431:\n        /* \"#utility.yul\":10605:10613   */\n      0x00\n        /* \"#utility.yul\":10655:10660   */\n      dup3\n        /* \"#utility.yul\":10649:10653   */\n      dup3\n        /* \"#utility.yul\":10645:10661   */\n      shl\n        /* \"#utility.yul\":10624:10661   */\n      swap1\n      pop\n        /* \"#utility.yul\":10561:10668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10674:11067   */\n    tag_432:\n        /* \"#utility.yul\":10743:10749   */\n      0x00\n        /* \"#utility.yul\":10793:10794   */\n      0x08\n        /* \"#utility.yul\":10781:10791   */\n      dup4\n        /* \"#utility.yul\":10777:10795   */\n      mul\n        /* \"#utility.yul\":10816:10913   */\n      tag_561\n        /* \"#utility.yul\":10846:10912   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10835:10844   */\n      dup3\n        /* \"#utility.yul\":10816:10913   */\n      tag_431\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":10934:10973   */\n      tag_562\n        /* \"#utility.yul\":10964:10972   */\n      dup7\n        /* \"#utility.yul\":10953:10962   */\n      dup4\n        /* \"#utility.yul\":10934:10973   */\n      tag_431\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":10922:10973   */\n      swap6\n      pop\n        /* \"#utility.yul\":11006:11010   */\n      dup1\n        /* \"#utility.yul\":11002:11011   */\n      not\n        /* \"#utility.yul\":10995:11000   */\n      dup5\n        /* \"#utility.yul\":10991:11012   */\n      and\n        /* \"#utility.yul\":10982:11012   */\n      swap4\n      pop\n        /* \"#utility.yul\":11055:11059   */\n      dup1\n        /* \"#utility.yul\":11045:11053   */\n      dup7\n        /* \"#utility.yul\":11041:11060   */\n      and\n        /* \"#utility.yul\":11034:11039   */\n      dup5\n        /* \"#utility.yul\":11031:11061   */\n      or\n        /* \"#utility.yul\":11021:11061   */\n      swap3\n      pop\n        /* \"#utility.yul\":10750:11067   */\n      pop\n      pop\n        /* \"#utility.yul\":10674:11067   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11073:11215   */\n    tag_433:\n        /* \"#utility.yul\":11123:11132   */\n      0x00\n        /* \"#utility.yul\":11156:11209   */\n      tag_564\n        /* \"#utility.yul\":11174:11208   */\n      tag_565\n        /* \"#utility.yul\":11183:11207   */\n      tag_566\n        /* \"#utility.yul\":11201:11206   */\n      dup5\n        /* \"#utility.yul\":11183:11207   */\n      tag_408\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":11174:11208   */\n      tag_423\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11156:11209   */\n      tag_408\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":11143:11209   */\n      swap1\n      pop\n        /* \"#utility.yul\":11073:11215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11221:11296   */\n    tag_434:\n        /* \"#utility.yul\":11264:11267   */\n      0x00\n        /* \"#utility.yul\":11285:11290   */\n      dup2\n        /* \"#utility.yul\":11278:11290   */\n      swap1\n      pop\n        /* \"#utility.yul\":11221:11296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11302:11571   */\n    tag_435:\n        /* \"#utility.yul\":11412:11451   */\n      tag_569\n        /* \"#utility.yul\":11443:11450   */\n      dup4\n        /* \"#utility.yul\":11412:11451   */\n      tag_433\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":11473:11564   */\n      tag_570\n        /* \"#utility.yul\":11522:11563   */\n      tag_571\n        /* \"#utility.yul\":11546:11562   */\n      dup3\n        /* \"#utility.yul\":11522:11563   */\n      tag_434\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11514:11520   */\n      dup5\n        /* \"#utility.yul\":11507:11511   */\n      dup5\n        /* \"#utility.yul\":11501:11512   */\n      sload\n        /* \"#utility.yul\":11473:11564   */\n      tag_432\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11467:11471   */\n      dup3\n        /* \"#utility.yul\":11460:11565   */\n      sstore\n        /* \"#utility.yul\":11378:11571   */\n      pop\n        /* \"#utility.yul\":11302:11571   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11577:11650   */\n    tag_436:\n        /* \"#utility.yul\":11622:11625   */\n      0x00\n        /* \"#utility.yul\":11577:11650   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11656:11845   */\n    tag_437:\n        /* \"#utility.yul\":11733:11765   */\n      tag_574\n      tag_436\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":11774:11839   */\n      tag_575\n        /* \"#utility.yul\":11832:11838   */\n      dup2\n        /* \"#utility.yul\":11824:11830   */\n      dup5\n        /* \"#utility.yul\":11818:11822   */\n      dup5\n        /* \"#utility.yul\":11774:11839   */\n      tag_435\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":11709:11845   */\n      pop\n        /* \"#utility.yul\":11656:11845   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11851:12037   */\n    tag_438:\n        /* \"#utility.yul\":11911:12031   */\n    tag_577:\n        /* \"#utility.yul\":11928:11931   */\n      dup2\n        /* \"#utility.yul\":11921:11926   */\n      dup2\n        /* \"#utility.yul\":11918:11932   */\n      lt\n        /* \"#utility.yul\":11911:12031   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":11982:12021   */\n      tag_580\n        /* \"#utility.yul\":12019:12020   */\n      0x00\n        /* \"#utility.yul\":12012:12017   */\n      dup3\n        /* \"#utility.yul\":11982:12021   */\n      tag_437\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":11955:11956   */\n      0x01\n        /* \"#utility.yul\":11948:11953   */\n      dup2\n        /* \"#utility.yul\":11944:11957   */\n      add\n        /* \"#utility.yul\":11935:11957   */\n      swap1\n      pop\n        /* \"#utility.yul\":11911:12031   */\n      jump(tag_577)\n    tag_579:\n        /* \"#utility.yul\":11851:12037   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12043:12586   */\n    tag_439:\n        /* \"#utility.yul\":12144:12146   */\n      0x1f\n        /* \"#utility.yul\":12139:12142   */\n      dup3\n        /* \"#utility.yul\":12136:12147   */\n      gt\n        /* \"#utility.yul\":12133:12579   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":12178:12216   */\n      tag_583\n        /* \"#utility.yul\":12210:12215   */\n      dup2\n        /* \"#utility.yul\":12178:12216   */\n      tag_429\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":12262:12291   */\n      tag_584\n        /* \"#utility.yul\":12280:12290   */\n      dup5\n        /* \"#utility.yul\":12262:12291   */\n      tag_430\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":12252:12260   */\n      dup2\n        /* \"#utility.yul\":12248:12292   */\n      add\n        /* \"#utility.yul\":12445:12447   */\n      0x20\n        /* \"#utility.yul\":12433:12443   */\n      dup6\n        /* \"#utility.yul\":12430:12448   */\n      lt\n        /* \"#utility.yul\":12427:12476   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":12466:12474   */\n      dup2\n        /* \"#utility.yul\":12451:12474   */\n      swap1\n      pop\n        /* \"#utility.yul\":12427:12476   */\n    tag_585:\n        /* \"#utility.yul\":12489:12569   */\n      tag_586\n        /* \"#utility.yul\":12545:12567   */\n      tag_587\n        /* \"#utility.yul\":12563:12566   */\n      dup6\n        /* \"#utility.yul\":12545:12567   */\n      tag_430\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":12535:12543   */\n      dup4\n        /* \"#utility.yul\":12531:12568   */\n      add\n        /* \"#utility.yul\":12518:12529   */\n      dup3\n        /* \"#utility.yul\":12489:12569   */\n      tag_438\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":12148:12579   */\n      pop\n      pop\n        /* \"#utility.yul\":12133:12579   */\n    tag_582:\n        /* \"#utility.yul\":12043:12586   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12592:12709   */\n    tag_440:\n        /* \"#utility.yul\":12646:12654   */\n      0x00\n        /* \"#utility.yul\":12696:12701   */\n      dup3\n        /* \"#utility.yul\":12690:12694   */\n      dup3\n        /* \"#utility.yul\":12686:12702   */\n      shr\n        /* \"#utility.yul\":12665:12702   */\n      swap1\n      pop\n        /* \"#utility.yul\":12592:12709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12715:12884   */\n    tag_441:\n        /* \"#utility.yul\":12759:12765   */\n      0x00\n        /* \"#utility.yul\":12792:12843   */\n      tag_590\n        /* \"#utility.yul\":12840:12841   */\n      0x00\n        /* \"#utility.yul\":12836:12842   */\n      not\n        /* \"#utility.yul\":12828:12833   */\n      dup5\n        /* \"#utility.yul\":12825:12826   */\n      0x08\n        /* \"#utility.yul\":12821:12834   */\n      mul\n        /* \"#utility.yul\":12792:12843   */\n      tag_440\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":12788:12844   */\n      not\n        /* \"#utility.yul\":12873:12877   */\n      dup1\n        /* \"#utility.yul\":12867:12871   */\n      dup4\n        /* \"#utility.yul\":12863:12878   */\n      and\n        /* \"#utility.yul\":12853:12878   */\n      swap2\n      pop\n        /* \"#utility.yul\":12766:12884   */\n      pop\n        /* \"#utility.yul\":12715:12884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12889:13184   */\n    tag_442:\n        /* \"#utility.yul\":12965:12969   */\n      0x00\n        /* \"#utility.yul\":13111:13140   */\n      tag_592\n        /* \"#utility.yul\":13136:13139   */\n      dup4\n        /* \"#utility.yul\":13130:13134   */\n      dup4\n        /* \"#utility.yul\":13111:13140   */\n      tag_441\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":13103:13140   */\n      swap2\n      pop\n        /* \"#utility.yul\":13173:13176   */\n      dup3\n        /* \"#utility.yul\":13170:13171   */\n      0x02\n        /* \"#utility.yul\":13166:13177   */\n      mul\n        /* \"#utility.yul\":13160:13164   */\n      dup3\n        /* \"#utility.yul\":13157:13178   */\n      or\n        /* \"#utility.yul\":13149:13178   */\n      swap1\n      pop\n        /* \"#utility.yul\":12889:13184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13189:14584   */\n    tag_361:\n        /* \"#utility.yul\":13306:13343   */\n      tag_594\n        /* \"#utility.yul\":13339:13342   */\n      dup3\n        /* \"#utility.yul\":13306:13343   */\n      tag_396\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":13408:13426   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13400:13406   */\n      dup2\n        /* \"#utility.yul\":13397:13427   */\n      gt\n        /* \"#utility.yul\":13394:13450   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":13430:13448   */\n      tag_596\n      tag_428\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":13394:13450   */\n    tag_595:\n        /* \"#utility.yul\":13474:13512   */\n      tag_597\n        /* \"#utility.yul\":13506:13510   */\n      dup3\n        /* \"#utility.yul\":13500:13511   */\n      sload\n        /* \"#utility.yul\":13474:13512   */\n      tag_136\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":13559:13626   */\n      tag_598\n        /* \"#utility.yul\":13619:13625   */\n      dup3\n        /* \"#utility.yul\":13611:13617   */\n      dup3\n        /* \"#utility.yul\":13605:13609   */\n      dup6\n        /* \"#utility.yul\":13559:13626   */\n      tag_439\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":13653:13654   */\n      0x00\n        /* \"#utility.yul\":13677:13681   */\n      0x20\n        /* \"#utility.yul\":13664:13681   */\n      swap1\n      pop\n        /* \"#utility.yul\":13709:13711   */\n      0x1f\n        /* \"#utility.yul\":13701:13707   */\n      dup4\n        /* \"#utility.yul\":13698:13712   */\n      gt\n        /* \"#utility.yul\":13726:13727   */\n      0x01\n        /* \"#utility.yul\":13721:14339   */\n      dup2\n      eq\n      tag_600\n      jumpi\n        /* \"#utility.yul\":14383:14384   */\n      0x00\n        /* \"#utility.yul\":14400:14406   */\n      dup5\n        /* \"#utility.yul\":14397:14474   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":14449:14458   */\n      dup3\n        /* \"#utility.yul\":14444:14447   */\n      dup8\n        /* \"#utility.yul\":14440:14459   */\n      add\n        /* \"#utility.yul\":14434:14460   */\n      mload\n        /* \"#utility.yul\":14425:14460   */\n      swap1\n      pop\n        /* \"#utility.yul\":14397:14474   */\n    tag_601:\n        /* \"#utility.yul\":14500:14567   */\n      tag_602\n        /* \"#utility.yul\":14560:14566   */\n      dup6\n        /* \"#utility.yul\":14553:14558   */\n      dup3\n        /* \"#utility.yul\":14500:14567   */\n      tag_442\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":14494:14498   */\n      dup7\n        /* \"#utility.yul\":14487:14568   */\n      sstore\n        /* \"#utility.yul\":14356:14578   */\n      pop\n        /* \"#utility.yul\":13691:14578   */\n      jump(tag_599)\n        /* \"#utility.yul\":13721:14339   */\n    tag_600:\n        /* \"#utility.yul\":13773:13777   */\n      0x1f\n        /* \"#utility.yul\":13769:13778   */\n      not\n        /* \"#utility.yul\":13761:13767   */\n      dup5\n        /* \"#utility.yul\":13757:13779   */\n      and\n        /* \"#utility.yul\":13807:13844   */\n      tag_603\n        /* \"#utility.yul\":13839:13843   */\n      dup7\n        /* \"#utility.yul\":13807:13844   */\n      tag_429\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":13866:13867   */\n      0x00\n        /* \"#utility.yul\":13880:14088   */\n    tag_604:\n        /* \"#utility.yul\":13894:13901   */\n      dup3\n        /* \"#utility.yul\":13891:13892   */\n      dup2\n        /* \"#utility.yul\":13888:13902   */\n      lt\n        /* \"#utility.yul\":13880:14088   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":13973:13982   */\n      dup5\n        /* \"#utility.yul\":13968:13971   */\n      dup10\n        /* \"#utility.yul\":13964:13983   */\n      add\n        /* \"#utility.yul\":13958:13984   */\n      mload\n        /* \"#utility.yul\":13950:13956   */\n      dup3\n        /* \"#utility.yul\":13943:13985   */\n      sstore\n        /* \"#utility.yul\":14024:14025   */\n      0x01\n        /* \"#utility.yul\":14016:14022   */\n      dup3\n        /* \"#utility.yul\":14012:14026   */\n      add\n        /* \"#utility.yul\":14002:14026   */\n      swap2\n      pop\n        /* \"#utility.yul\":14071:14073   */\n      0x20\n        /* \"#utility.yul\":14060:14069   */\n      dup6\n        /* \"#utility.yul\":14056:14074   */\n      add\n        /* \"#utility.yul\":14043:14074   */\n      swap5\n      pop\n        /* \"#utility.yul\":13917:13921   */\n      0x20\n        /* \"#utility.yul\":13914:13915   */\n      dup2\n        /* \"#utility.yul\":13910:13922   */\n      add\n        /* \"#utility.yul\":13905:13922   */\n      swap1\n      pop\n        /* \"#utility.yul\":13880:14088   */\n      jump(tag_604)\n    tag_606:\n        /* \"#utility.yul\":14116:14122   */\n      dup7\n        /* \"#utility.yul\":14107:14114   */\n      dup4\n        /* \"#utility.yul\":14104:14123   */\n      lt\n        /* \"#utility.yul\":14101:14280   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":14174:14183   */\n      dup5\n        /* \"#utility.yul\":14169:14172   */\n      dup10\n        /* \"#utility.yul\":14165:14184   */\n      add\n        /* \"#utility.yul\":14159:14185   */\n      mload\n        /* \"#utility.yul\":14217:14265   */\n      tag_608\n        /* \"#utility.yul\":14259:14263   */\n      0x1f\n        /* \"#utility.yul\":14251:14257   */\n      dup10\n        /* \"#utility.yul\":14247:14264   */\n      and\n        /* \"#utility.yul\":14236:14245   */\n      dup3\n        /* \"#utility.yul\":14217:14265   */\n      tag_441\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":14209:14215   */\n      dup4\n        /* \"#utility.yul\":14202:14266   */\n      sstore\n        /* \"#utility.yul\":14124:14280   */\n      pop\n        /* \"#utility.yul\":14101:14280   */\n    tag_607:\n        /* \"#utility.yul\":14326:14327   */\n      0x01\n        /* \"#utility.yul\":14322:14323   */\n      0x02\n        /* \"#utility.yul\":14314:14320   */\n      dup9\n        /* \"#utility.yul\":14310:14324   */\n      mul\n        /* \"#utility.yul\":14306:14328   */\n      add\n        /* \"#utility.yul\":14300:14304   */\n      dup9\n        /* \"#utility.yul\":14293:14329   */\n      sstore\n        /* \"#utility.yul\":13728:14339   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13691:14578   */\n    tag_599:\n      pop\n        /* \"#utility.yul\":13281:14584   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13189:14584   */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220884f0a867920f016f29324384ab73e058830436a3f73c2cb5749230dc567106864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1757": {
									"entryPoint": null,
									"id": 1757,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 35,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 289,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:11",
										"nodeType": "YulBlock",
										"src": "0:456:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:11",
													"nodeType": "YulBlock",
													"src": "51:57:11",
													"statements": [
														{
															"nativeSrc": "61:41:11",
															"nodeType": "YulAssignment",
															"src": "61:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:11",
																		"nodeType": "YulLiteral",
																		"src": "83:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:11"
																},
																"nativeSrc": "72:30:11",
																"nodeType": "YulFunctionCall",
																"src": "72:30:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:11",
														"nodeType": "YulTypedName",
														"src": "33:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:11",
														"nodeType": "YulTypedName",
														"src": "43:7:11",
														"type": ""
													}
												],
												"src": "7:101:11"
											},
											{
												"body": {
													"nativeSrc": "177:52:11",
													"nodeType": "YulBlock",
													"src": "177:52:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:11",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:11"
																		},
																		"nativeSrc": "199:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:36:11",
																"nodeType": "YulFunctionCall",
																"src": "187:36:11"
															},
															"nativeSrc": "187:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:11"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:11",
														"nodeType": "YulTypedName",
														"src": "165:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:11",
														"nodeType": "YulTypedName",
														"src": "172:3:11",
														"type": ""
													}
												],
												"src": "114:115:11"
											},
											{
												"body": {
													"nativeSrc": "331:122:11",
													"nodeType": "YulBlock",
													"src": "331:122:11",
													"statements": [
														{
															"nativeSrc": "341:26:11",
															"nodeType": "YulAssignment",
															"src": "341:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:11",
																		"nodeType": "YulLiteral",
																		"src": "364:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:11"
																},
																"nativeSrc": "349:18:11",
																"nodeType": "YulFunctionCall",
																"src": "349:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:11",
																				"nodeType": "YulLiteral",
																				"src": "443:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:11"
																		},
																		"nativeSrc": "428:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:11",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:11"
																},
																"nativeSrc": "377:69:11",
																"nodeType": "YulFunctionCall",
																"src": "377:69:11"
															},
															"nativeSrc": "377:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:11",
														"nodeType": "YulTypedName",
														"src": "303:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:11",
														"nodeType": "YulTypedName",
														"src": "315:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:11",
														"nodeType": "YulTypedName",
														"src": "326:4:11",
														"type": ""
													}
												],
												"src": "235:218:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061001e61002360201b60201c565b610183565b5f61003261012160201b60201c565b9050805f0160089054906101000a900460ff161561007c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff161461011e5767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051610115919061016a565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b61016481610148565b82525050565b5f60208201905061017d5f83018461015b565b92915050565b612675806101905f395ff3fe608060405234801561000f575f80fd5b50600436106101a7575f3560e01c80635c975abb116100f75780639d888e8611610095578063cb177b1e1161006f578063cb177b1e14610473578063dd62ed3e1461048f578063f2fde38b146104bf578063fe575a87146104db576101a7565b80639d888e8614610409578063a9059cbb14610427578063b836080614610457576101a7565b80638129fc1c116100d15780638129fc1c146103b95780638456cb59146103c35780638da5cb5b146103cd57806395d89b41146103eb576101a7565b80635c975abb1461036157806370a082311461037f578063715018a6146103af576101a7565b806323b872dd116101645780634004c7a21161013e5780634004c7a2146102db57806340c10f191461030b57806342966c681461032757806350f7c20414610343576101a7565b806323b872dd14610283578063313ce567146102b35780633f4ba83a146102d1576101a7565b806306fdde03146101ab578063095ea7b3146101c9578063099db017146101f957806318160ddd1461022957806318ab42c51461024757806320fc56a614610265575b5f80fd5b6101b361050b565b6040516101c09190611ef5565b60405180910390f35b6101e360048036038101906101de9190611fa6565b6105a9565b6040516101f09190611ffe565b60405180910390f35b610213600480360381019061020e9190612017565b6105cb565b6040516102209190611ffe565b60405180910390f35b61023161061d565b60405161023e9190612051565b60405180910390f35b61024f610634565b60405161025c9190612051565b60405180910390f35b61026d610642565b60405161027a9190612051565b60405180910390f35b61029d6004803603810190610298919061206a565b610650565b6040516102aa9190611ffe565b60405180910390f35b6102bb61067e565b6040516102c891906120d5565b60405180910390f35b6102d9610686565b005b6102f560048036038101906102f09190612017565b610698565b6040516103029190611ffe565b60405180910390f35b61032560048036038101906103209190611fa6565b6106b5565b005b610341600480360381019061033c91906120ee565b6108d1565b005b61034b6109c7565b6040516103589190612051565b60405180910390f35b6103696109cd565b6040516103769190611ffe565b60405180910390f35b61039960048036038101906103949190612017565b6109ef565b6040516103a69190612051565b60405180910390f35b6103b7610a42565b005b6103c1610a55565b005b6103cb610d2d565b005b6103d5610d3f565b6040516103e29190612128565b60405180910390f35b6103f3610d74565b6040516104009190611ef5565b60405180910390f35b610411610e12565b60405161041e9190612051565b60405180910390f35b610441600480360381019061043c9190611fa6565b610e18565b60405161044e9190611ffe565b60405180910390f35b610471600480360381019061046c919061216b565b610e3a565b005b61048d6004803603810190610488919061216b565b610f4d565b005b6104a960048036038101906104a491906121a9565b611060565b6040516104b69190612051565b60405180910390f35b6104d960048036038101906104d49190612017565b6110f0565b005b6104f560048036038101906104f09190612017565b611174565b6040516105029190611ffe565b60405180910390f35b60605f610516611191565b905080600301805461052790612214565b80601f016020809104026020016040519081016040528092919081815260200182805461055390612214565b801561059e5780601f106105755761010080835404028352916020019161059e565b820191905f5260205f20905b81548152906001019060200180831161058157829003601f168201915b505050505091505090565b5f806105b36111b8565b90506105c08185856111bf565b600191505092915050565b5f60355f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80610627611191565b9050806002015491505090565b69d3c21bcecceda100000081565b6969e10de76676d080000081565b5f8061065a6111b8565b90506106678582856111d1565b610672858585611263565b60019150509392505050565b5f6012905090565b61068e611353565b6106966113da565b565b6035602052805f5260405f205f915054906101000a900460ff1681565b6106bd611448565b60355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661073d576040517fcd2e8e8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a2576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81036107db576040517f2160733900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b69d3c21bcecceda100000081111561081f576040517fd5c0322600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6033548161082b61061d565b6108359190612271565b111561086d576040517fa2dda64700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108778282611495565b8173ffffffffffffffffffffffffffffffffffffffff167fe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147826040516108bd9190612051565b60405180910390a26108cd611514565b5050565b6108d9611448565b5f8103610912576040517f2160733900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6969e10de76676d0800000811115610956576040517fb8e7123600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109676109616111b8565b8261151d565b61096f6111b8565b73ffffffffffffffffffffffffffffffffffffffff167fe510c8c53e4242bccd9841e6f1f5fe02545bdad7b524c54c8ff90ffda089e278826040516109b49190612051565b60405180910390a26109c4611514565b50565b60335481565b5f806109d761159c565b9050805f015f9054906101000a900460ff1691505090565b5f806109f9611191565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610a4a611353565b610a535f6115c3565b565b5f610a5e611694565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610aa65750825b90505f60018367ffffffffffffffff16148015610ad957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610ae7575080155b15610b1e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610b6b576001855f0160086101000a81548160ff0219169083151502179055505b610bdf6040518060400160405280600981526020017f536b7920546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f534b5900000000000000000000000000000000000000000000000000000000008152506116bb565b610be8336116d1565b610bf06116e5565b610bf86116f7565b6b033b2e3c9fd0803ce80000006033819055506001603281905550610c28336a52b7d2dcc80cd2e4000000611495565b600160355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f0d0ce8757673482ba416ece0cb058dacd500bb9d737793d5f34ad5548dd4e2fb6001604051610cc49190611ffe565b60405180910390a28315610d26575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610d1d91906122f9565b60405180910390a15b5050505050565b610d35611353565b610d3d611709565b565b5f80610d49611778565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610d7f611191565b9050806004018054610d9090612214565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbc90612214565b8015610e075780601f10610dde57610100808354040283529160200191610e07565b820191905f5260205f20905b815481529060010190602001808311610dea57829003601f168201915b505050505091505090565b60325481565b5f80610e226111b8565b9050610e2f818585611263565b600191505092915050565b610e42611353565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea7576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f92d364d140f902817e5eaa71cedfe20bae2a3c66a2725cee3d9a51d73f052fb682604051610f419190611ffe565b60405180910390a25050565b610f55611353565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fba576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060355f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f0d0ce8757673482ba416ece0cb058dacd500bb9d737793d5f34ad5548dd4e2fb826040516110549190611ffe565b60405180910390a25050565b5f8061106a611191565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6110f8611353565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611168575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161115f9190612128565b60405180910390fd5b611171816115c3565b50565b6034602052805f5260405f205f915054906101000a900460ff1681565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6111cc838383600161179f565b505050565b5f6111dc8484611060565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461125d578181101561124e578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161124593929190612312565b60405180910390fd5b61125c84848484035f61179f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d3575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112ca9190612128565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611343575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161133a9190612128565b60405180910390fd5b61134e83838361197c565b505050565b61135b6111b8565b73ffffffffffffffffffffffffffffffffffffffff16611379610d3f565b73ffffffffffffffffffffffffffffffffffffffff16146113d85761139c6111b8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113cf9190612128565b60405180910390fd5b565b6113e2611a5e565b5f6113eb61159c565b90505f815f015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6114306111b8565b60405161143d9190612128565b60405180910390a150565b60025f540361148c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148390612391565b60405180910390fd5b60025f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611505575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114fc9190612128565b60405180910390fd5b6115105f838361197c565b5050565b60015f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361158d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115849190612128565b60405180910390fd5b611598825f8361197c565b5050565b5f7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b5f6115cc611778565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6116c3611a9e565b6116cd8282611ade565b5050565b6116d9611a9e565b6116e281611b1a565b50565b6116ed611a9e565b6116f5611b9e565b565b6116ff611a9e565b611707611bce565b565b611711611bdf565b5f61171a61159c565b90506001815f015f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117606111b8565b60405161176d9190612128565b60405180910390a150565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f6117a8611191565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361181a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118119190612128565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361188a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118819190612128565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611975578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161196c9190612051565b60405180910390a35b5050505050565b60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680611a17575060345f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15611a4e576040517fab73372a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a59838383611c20565b505050565b611a666109cd565b611a9c576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611aa6611c38565b611adc576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ae6611a9e565b5f611aef611191565b905082816003019081611b029190612570565b5081816004019081611b149190612570565b50505050565b611b22611a9e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b92575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611b899190612128565b60405180910390fd5b611b9b816115c3565b50565b611ba6611a9e565b5f611baf61159c565b90505f815f015f6101000a81548160ff02191690831515021790555050565b611bd6611a9e565b60015f81905550565b611be76109cd565b15611c1e576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c28611bdf565b611c33838383611c56565b505050565b5f611c41611694565b5f0160089054906101000a900460ff16905090565b5f611c5f611191565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611cb35781816002015f828254611ca79190612271565b92505081905550611d85565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611d3e578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3593929190612312565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611dce5781816002015f8282540392505081905550611e1a565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611e779190612051565b60405180910390a350505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611ec782611e85565b611ed18185611e8f565b9350611ee1818560208601611e9f565b611eea81611ead565b840191505092915050565b5f6020820190508181035f830152611f0d8184611ebd565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f4282611f19565b9050919050565b611f5281611f38565b8114611f5c575f80fd5b50565b5f81359050611f6d81611f49565b92915050565b5f819050919050565b611f8581611f73565b8114611f8f575f80fd5b50565b5f81359050611fa081611f7c565b92915050565b5f8060408385031215611fbc57611fbb611f15565b5b5f611fc985828601611f5f565b9250506020611fda85828601611f92565b9150509250929050565b5f8115159050919050565b611ff881611fe4565b82525050565b5f6020820190506120115f830184611fef565b92915050565b5f6020828403121561202c5761202b611f15565b5b5f61203984828501611f5f565b91505092915050565b61204b81611f73565b82525050565b5f6020820190506120645f830184612042565b92915050565b5f805f6060848603121561208157612080611f15565b5b5f61208e86828701611f5f565b935050602061209f86828701611f5f565b92505060406120b086828701611f92565b9150509250925092565b5f60ff82169050919050565b6120cf816120ba565b82525050565b5f6020820190506120e85f8301846120c6565b92915050565b5f6020828403121561210357612102611f15565b5b5f61211084828501611f92565b91505092915050565b61212281611f38565b82525050565b5f60208201905061213b5f830184612119565b92915050565b61214a81611fe4565b8114612154575f80fd5b50565b5f8135905061216581612141565b92915050565b5f806040838503121561218157612180611f15565b5b5f61218e85828601611f5f565b925050602061219f85828601612157565b9150509250929050565b5f80604083850312156121bf576121be611f15565b5b5f6121cc85828601611f5f565b92505060206121dd85828601611f5f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061222b57607f821691505b60208210810361223e5761223d6121e7565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61227b82611f73565b915061228683611f73565b925082820190508082111561229e5761229d612244565b5b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6122e36122de6122d9846122a4565b6122c0565b6122ad565b9050919050565b6122f3816122c9565b82525050565b5f60208201905061230c5f8301846122ea565b92915050565b5f6060820190506123255f830186612119565b6123326020830185612042565b61233f6040830184612042565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61237b601f83611e8f565b915061238682612347565b602082019050919050565b5f6020820190508181035f8301526123a88161236f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826123fd565b61244286836123fd565b95508019841693508086168417925050509392505050565b5f61247461246f61246a84611f73565b6122c0565b611f73565b9050919050565b5f819050919050565b61248d8361245a565b6124a16124998261247b565b848454612409565b825550505050565b5f90565b6124b56124a9565b6124c0818484612484565b505050565b5b818110156124e3576124d85f826124ad565b6001810190506124c6565b5050565b601f821115612528576124f9816123dc565b612502846123ee565b81016020851015612511578190505b61252561251d856123ee565b8301826124c5565b50505b505050565b5f82821c905092915050565b5f6125485f198460080261252d565b1980831691505092915050565b5f6125608383612539565b9150826002028217905092915050565b61257982611e85565b67ffffffffffffffff811115612592576125916123af565b5b61259c8254612214565b6125a78282856124e7565b5f60209050601f8311600181146125d8575f84156125c6578287015190505b6125d08582612555565b865550612637565b601f1984166125e6866123dc565b5f5b8281101561260d578489015182556001820191506020850194506020810190506125e8565b8683101561262a5784890151612626601f891682612539565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220884f0a867920f016f29324384ab73e058830436a3f73c2cb5749230dc567106864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E PUSH2 0x23 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH0 PUSH2 0x32 PUSH2 0x121 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164 DUP2 PUSH2 0x148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D PUSH0 DUP4 ADD DUP5 PUSH2 0x15B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2675 DUP1 PUSH2 0x190 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0x9D888E86 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCB177B1E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB177B1E EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x4DB JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x9D888E86 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB8360806 EQ PUSH2 0x457 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x8129FC1C GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3EB JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AF JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x4004C7A2 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x4004C7A2 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x50F7C204 EQ PUSH2 0x343 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2D1 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x99DB017 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x18AB42C5 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x20FC56A6 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0xA42 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xA55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH2 0xD2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xF4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x516 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x553 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x575 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x581 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B3 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C0 DUP2 DUP6 DUP6 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x35 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x627 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x65A PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x667 DUP6 DUP3 DUP6 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x672 DUP6 DUP6 DUP6 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x68E PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x696 PUSH2 0x13DA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x6BD PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD2E8E8000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x2160733900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 GT ISZERO PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD5C0322600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD DUP2 PUSH2 0x82B PUSH2 0x61D JUMP JUMPDEST PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST GT ISZERO PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2DDA64700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x877 DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x8CD PUSH2 0x1514 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0x1448 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2160733900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 GT ISZERO PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB8E7123600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x967 PUSH2 0x961 PUSH2 0x11B8 JUMP JUMPDEST DUP3 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x96F PUSH2 0x11B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE510C8C53E4242BCCD9841E6F1F5FE02545BDAD7B524C54C8FF90FFDA089E278 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9C4 PUSH2 0x1514 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D7 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9F9 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4A PUSH2 0x1353 JUMP JUMPDEST PUSH2 0xA53 PUSH0 PUSH2 0x15C3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA5E PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAA6 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAD9 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB6B JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBDF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536B7920546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534B590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x16BB JUMP JUMPDEST PUSH2 0xBE8 CALLER PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0xBF0 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x16F7 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x32 DUP2 SWAP1 SSTORE POP PUSH2 0xC28 CALLER PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD0CE8757673482BA416ECE0CB058DACD500BB9D737793D5F34AD5548DD4E2FB PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 ISZERO PUSH2 0xD26 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD35 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0xD3D PUSH2 0x1709 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD49 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xD7F PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xD90 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDBC SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDDE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE22 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0xE2F DUP2 DUP6 DUP6 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE42 PUSH2 0x1353 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92D364D140F902817E5EAA71CEDFE20BAE2A3C66A2725CEE3D9A51D73F052FB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xF55 PUSH2 0x1353 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD0CE8757673482BA416ECE0CB058DACD500BB9D737793D5F34AD5548DD4E2FB DUP3 PUSH1 0x40 MLOAD PUSH2 0x1054 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x106A PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F8 PUSH2 0x1353 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1168 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1171 DUP2 PUSH2 0x15C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11CC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x179F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11DC DUP5 DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x125D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x124E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x125C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x179F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1343 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x134E DUP4 DUP4 DUP4 PUSH2 0x197C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x135B PUSH2 0x11B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1379 PUSH2 0xD3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13D8 JUMPI PUSH2 0x139C PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x13E2 PUSH2 0x1A5E JUMP JUMPDEST PUSH0 PUSH2 0x13EB PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1430 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1505 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1510 PUSH0 DUP4 DUP4 PUSH2 0x197C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x158D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1598 DUP3 PUSH0 DUP4 PUSH2 0x197C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x15CC PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16C3 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x16CD DUP3 DUP3 PUSH2 0x1ADE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x16D9 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1B1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16ED PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x16F5 PUSH2 0x1B9E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x16FF PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1707 PUSH2 0x1BCE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1711 PUSH2 0x1BDF JUMP JUMPDEST PUSH0 PUSH2 0x171A PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1760 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x17A8 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1881 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1975 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1A17 JUMPI POP PUSH1 0x34 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB73372A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A59 DUP4 DUP4 DUP4 PUSH2 0x1C20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A66 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1AA6 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x1ADC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1AE6 PUSH2 0x1A9E JUMP JUMPDEST PUSH0 PUSH2 0x1AEF PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B02 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1B14 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B22 PUSH2 0x1A9E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B89 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B9B DUP2 PUSH2 0x15C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BA6 PUSH2 0x1A9E JUMP JUMPDEST PUSH0 PUSH2 0x1BAF PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1BD6 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BE7 PUSH2 0x9CD JUMP JUMPDEST ISZERO PUSH2 0x1C1E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C28 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1C33 DUP4 DUP4 DUP4 PUSH2 0x1C56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 PUSH2 0x1694 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1C5F PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB3 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CA7 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D85 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1D3E JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DCE JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E1A JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E77 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC7 DUP3 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x1ED1 DUP2 DUP6 PUSH2 0x1E8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1EAD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0D DUP2 DUP5 PUSH2 0x1EBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F42 DUP3 PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F52 DUP2 PUSH2 0x1F38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6D DUP2 PUSH2 0x1F49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F85 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA0 DUP2 PUSH2 0x1F7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBC JUMPI PUSH2 0x1FBB PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FDA DUP6 DUP3 DUP7 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2011 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202C JUMPI PUSH2 0x202B PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2039 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x204B DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2064 PUSH0 DUP4 ADD DUP5 PUSH2 0x2042 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208E DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209F DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20B0 DUP7 DUP3 DUP8 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CF DUP2 PUSH2 0x20BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2103 JUMPI PUSH2 0x2102 PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2110 DUP5 DUP3 DUP6 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2122 DUP2 PUSH2 0x1F38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213B PUSH0 DUP4 ADD DUP5 PUSH2 0x2119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x214A DUP2 PUSH2 0x1FE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2165 DUP2 PUSH2 0x2141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2181 JUMPI PUSH2 0x2180 PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x218E DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x219F DUP6 DUP3 DUP7 ADD PUSH2 0x2157 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21BF JUMPI PUSH2 0x21BE PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21CC DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21DD DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x222B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x223E JUMPI PUSH2 0x223D PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x227B DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x2286 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x229E JUMPI PUSH2 0x229D PUSH2 0x2244 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22E3 PUSH2 0x22DE PUSH2 0x22D9 DUP5 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F3 DUP2 PUSH2 0x22C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230C PUSH0 DUP4 ADD DUP5 PUSH2 0x22EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2325 PUSH0 DUP4 ADD DUP7 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x2332 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2042 JUMP JUMPDEST PUSH2 0x233F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2042 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x237B PUSH1 0x1F DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2386 DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A8 DUP2 PUSH2 0x236F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2438 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2442 DUP7 DUP4 PUSH2 0x23FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2474 PUSH2 0x246F PUSH2 0x246A DUP5 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x1F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x248D DUP4 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x24A1 PUSH2 0x2499 DUP3 PUSH2 0x247B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2409 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x24B5 PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x24C0 DUP2 DUP5 DUP5 PUSH2 0x2484 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E3 JUMPI PUSH2 0x24D8 PUSH0 DUP3 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x24F9 DUP2 PUSH2 0x23DC JUMP JUMPDEST PUSH2 0x2502 DUP5 PUSH2 0x23EE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2511 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2525 PUSH2 0x251D DUP6 PUSH2 0x23EE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24C5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2548 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x252D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2560 DUP4 DUP4 PUSH2 0x2539 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2579 DUP3 PUSH2 0x1E85 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2592 JUMPI PUSH2 0x2591 PUSH2 0x23AF JUMP JUMPDEST JUMPDEST PUSH2 0x259C DUP3 SLOAD PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x25A7 DUP3 DUP3 DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25D8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25C6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25D0 DUP6 DUP3 PUSH2 0x2555 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2637 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x25E6 DUP7 PUSH2 0x23DC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x260D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25E8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x262A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2626 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2539 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x4F EXP DUP7 PUSH26 0x20F016F29324384AB73E058830436A3F73C2CB5749230DC56710 PUSH9 0x64736F6C634300081A STOP CALLER ",
							"sourceMap": "636:5044:10:-:0;;;2090:53;;;;;;;;;;2114:22;:20;;;:22;;:::i;:::-;636:5044;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:11:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;636:5044:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURN_LIMIT_PER_TX_1703": {
									"entryPoint": 1602,
									"id": 1703,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINT_LIMIT_PER_TX_1700": {
									"entryPoint": 1588,
									"id": 1700,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20Pausable_init_1174": {
									"entryPoint": 5861,
									"id": 1174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_601": {
									"entryPoint": 5819,
									"id": 601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_629": {
									"entryPoint": 6878,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 5841,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 6938,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_1319": {
									"entryPoint": 7070,
									"id": 1319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_472": {
									"entryPoint": 5879,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_482": {
									"entryPoint": 7118,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1033": {
									"entryPoint": 4543,
									"id": 1033,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1101": {
									"entryPoint": 6047,
									"id": 1101,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1015": {
									"entryPoint": 5405,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 6814,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 4947,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_585": {
									"entryPoint": 4497,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 5780,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 6008,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_1275": {
									"entryPoint": 5532,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 7224,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_982": {
									"entryPoint": 5269,
									"id": 982,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1231": {
									"entryPoint": 4536,
									"id": 1231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_516": {
									"entryPoint": 5396,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_508": {
									"entryPoint": 5192,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_1400": {
									"entryPoint": 5897,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1363": {
									"entryPoint": 7135,
									"id": 1363,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1376": {
									"entryPoint": 6750,
									"id": 1376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1149": {
									"entryPoint": 4561,
									"id": 1149,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 5571,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_857": {
									"entryPoint": 4707,
									"id": 857,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1424": {
									"entryPoint": 5082,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1202": {
									"entryPoint": 7200,
									"id": 1202,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1840": {
									"entryPoint": 6524,
									"id": 1840,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_949": {
									"entryPoint": 7254,
									"id": 949,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_754": {
									"entryPoint": 4192,
									"id": 754,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_778": {
									"entryPoint": 1449,
									"id": 778,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_706": {
									"entryPoint": 2543,
									"id": 706,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1939": {
									"entryPoint": 2257,
									"id": 1939,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentVersion_1695": {
									"entryPoint": 3602,
									"id": 1695,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_670": {
									"entryPoint": 1662,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasMinterRole_2036": {
									"entryPoint": 1483,
									"id": 2036,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1807": {
									"entryPoint": 2645,
									"id": 1807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBlacklisted_1707": {
									"entryPoint": 4468,
									"id": 1707,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isMinterRole_1711": {
									"entryPoint": 1688,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTokenSupply_1697": {
									"entryPoint": 2503,
									"id": 1697,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1904": {
									"entryPoint": 1717,
									"id": 1904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_645": {
									"entryPoint": 1291,
									"id": 645,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 3391,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2013": {
									"entryPoint": 3373,
									"id": 2013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1351": {
									"entryPoint": 2509,
									"id": 1351,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 2626,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMinterRole_1971": {
									"entryPoint": 3917,
									"id": 1971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_661": {
									"entryPoint": 3444,
									"id": 661,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_686": {
									"entryPoint": 1565,
									"id": 686,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_810": {
									"entryPoint": 1616,
									"id": 810,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 4336,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_730": {
									"entryPoint": 3608,
									"id": 730,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2023": {
									"entryPoint": 1670,
									"id": 2023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateBlacklistStatus_2003": {
									"entryPoint": 3642,
									"id": 2003,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 8938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 8953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9447,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 8868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 8905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9348,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14587:11",
										"nodeType": "YulBlock",
										"src": "0:14587:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "208:73:11",
													"nodeType": "YulBlock",
													"src": "208:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:11"
																},
																"nativeSrc": "218:19:11",
																"nodeType": "YulFunctionCall",
																"src": "218:19:11"
															},
															"nativeSrc": "218:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:11"
														},
														{
															"nativeSrc": "246:29:11",
															"nodeType": "YulAssignment",
															"src": "246:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:11",
																		"nodeType": "YulLiteral",
																		"src": "270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:11"
																},
																"nativeSrc": "261:14:11",
																"nodeType": "YulFunctionCall",
																"src": "261:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:11",
														"nodeType": "YulTypedName",
														"src": "180:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:11",
														"nodeType": "YulTypedName",
														"src": "185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:11",
														"nodeType": "YulTypedName",
														"src": "196:11:11",
														"type": ""
													}
												],
												"src": "112:169:11"
											},
											{
												"body": {
													"nativeSrc": "349:77:11",
													"nodeType": "YulBlock",
													"src": "349:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:11"
																},
																"nativeSrc": "360:23:11",
																"nodeType": "YulFunctionCall",
																"src": "360:23:11"
															},
															"nativeSrc": "360:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:11"
																		},
																		"nativeSrc": "399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:11",
																		"nodeType": "YulLiteral",
																		"src": "417:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:11"
																},
																"nativeSrc": "392:27:11",
																"nodeType": "YulFunctionCall",
																"src": "392:27:11"
															},
															"nativeSrc": "392:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:11",
														"nodeType": "YulTypedName",
														"src": "331:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:11",
														"nodeType": "YulTypedName",
														"src": "336:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:11",
														"nodeType": "YulTypedName",
														"src": "341:6:11",
														"type": ""
													}
												],
												"src": "287:139:11"
											},
											{
												"body": {
													"nativeSrc": "480:54:11",
													"nodeType": "YulBlock",
													"src": "480:54:11",
													"statements": [
														{
															"nativeSrc": "490:38:11",
															"nodeType": "YulAssignment",
															"src": "490:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "515:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:11"
																		},
																		"nativeSrc": "504:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "524:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:11"
																		},
																		"nativeSrc": "520:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:11"
																},
																"nativeSrc": "500:28:11",
																"nodeType": "YulFunctionCall",
																"src": "500:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:11",
														"nodeType": "YulTypedName",
														"src": "463:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:11",
														"nodeType": "YulTypedName",
														"src": "473:6:11",
														"type": ""
													}
												],
												"src": "432:102:11"
											},
											{
												"body": {
													"nativeSrc": "632:285:11",
													"nodeType": "YulBlock",
													"src": "632:285:11",
													"statements": [
														{
															"nativeSrc": "642:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:11"
																},
																"nativeSrc": "656:39:11",
																"nodeType": "YulFunctionCall",
																"src": "656:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:11",
																	"nodeType": "YulTypedName",
																	"src": "646:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:11",
															"nodeType": "YulAssignment",
															"src": "704:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:11"
																},
																"nativeSrc": "711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "711:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:11",
																				"nodeType": "YulLiteral",
																				"src": "837:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:11"
																		},
																		"nativeSrc": "826:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:11"
																},
																"nativeSrc": "791:65:11",
																"nodeType": "YulFunctionCall",
																"src": "791:65:11"
															},
															"nativeSrc": "791:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:11"
														},
														{
															"nativeSrc": "865:46:11",
															"nodeType": "YulAssignment",
															"src": "865:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:11"
																		},
																		"nativeSrc": "881:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:11"
																},
																"nativeSrc": "872:39:11",
																"nodeType": "YulFunctionCall",
																"src": "872:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:11",
														"nodeType": "YulTypedName",
														"src": "613:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:11",
														"nodeType": "YulTypedName",
														"src": "620:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:11",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													}
												],
												"src": "540:377:11"
											},
											{
												"body": {
													"nativeSrc": "1041:195:11",
													"nodeType": "YulBlock",
													"src": "1041:195:11",
													"statements": [
														{
															"nativeSrc": "1051:26:11",
															"nodeType": "YulAssignment",
															"src": "1051:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nativeSrc": "1059:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:11"
																		},
																		"nativeSrc": "1094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:11"
																		},
																		"nativeSrc": "1113:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:11"
																},
																"nativeSrc": "1087:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:11"
															},
															"nativeSrc": "1087:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:11"
														},
														{
															"nativeSrc": "1143:86:11",
															"nodeType": "YulAssignment",
															"src": "1143:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:11"
																},
																"nativeSrc": "1151:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:11",
														"nodeType": "YulTypedName",
														"src": "1013:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:11",
														"nodeType": "YulTypedName",
														"src": "1025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:11",
														"nodeType": "YulTypedName",
														"src": "1036:4:11",
														"type": ""
													}
												],
												"src": "923:313:11"
											},
											{
												"body": {
													"nativeSrc": "1282:35:11",
													"nodeType": "YulBlock",
													"src": "1282:35:11",
													"statements": [
														{
															"nativeSrc": "1292:19:11",
															"nodeType": "YulAssignment",
															"src": "1292:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:11"
																},
																"nativeSrc": "1302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:11",
														"nodeType": "YulTypedName",
														"src": "1275:6:11",
														"type": ""
													}
												],
												"src": "1242:75:11"
											},
											{
												"body": {
													"nativeSrc": "1412:28:11",
													"nodeType": "YulBlock",
													"src": "1412:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:11"
																},
																"nativeSrc": "1422:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:11"
															},
															"nativeSrc": "1422:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:11"
											},
											{
												"body": {
													"nativeSrc": "1535:28:11",
													"nodeType": "YulBlock",
													"src": "1535:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																},
																"nativeSrc": "1545:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:11"
															},
															"nativeSrc": "1545:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:11"
											},
											{
												"body": {
													"nativeSrc": "1614:81:11",
													"nodeType": "YulBlock",
													"src": "1614:81:11",
													"statements": [
														{
															"nativeSrc": "1624:65:11",
															"nodeType": "YulAssignment",
															"src": "1624:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:11"
																},
																"nativeSrc": "1635:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:11",
														"nodeType": "YulTypedName",
														"src": "1596:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:11",
														"nodeType": "YulTypedName",
														"src": "1606:7:11",
														"type": ""
													}
												],
												"src": "1569:126:11"
											},
											{
												"body": {
													"nativeSrc": "1746:51:11",
													"nodeType": "YulBlock",
													"src": "1746:51:11",
													"statements": [
														{
															"nativeSrc": "1756:35:11",
															"nodeType": "YulAssignment",
															"src": "1756:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:11"
																},
																"nativeSrc": "1767:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:11",
														"nodeType": "YulTypedName",
														"src": "1728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:11",
														"nodeType": "YulTypedName",
														"src": "1738:7:11",
														"type": ""
													}
												],
												"src": "1701:96:11"
											},
											{
												"body": {
													"nativeSrc": "1846:79:11",
													"nodeType": "YulBlock",
													"src": "1846:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:11",
																"nodeType": "YulBlock",
																"src": "1903:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:11"
																			},
																			"nativeSrc": "1905:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:11"
																		},
																		"nativeSrc": "1905:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:11"
																				},
																				"nativeSrc": "1876:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:11"
																		},
																		"nativeSrc": "1866:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:11"
																},
																"nativeSrc": "1859:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:11"
															},
															"nativeSrc": "1856:63:11",
															"nodeType": "YulIf",
															"src": "1856:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:11",
														"nodeType": "YulTypedName",
														"src": "1839:5:11",
														"type": ""
													}
												],
												"src": "1803:122:11"
											},
											{
												"body": {
													"nativeSrc": "1983:87:11",
													"nodeType": "YulBlock",
													"src": "1983:87:11",
													"statements": [
														{
															"nativeSrc": "1993:29:11",
															"nodeType": "YulAssignment",
															"src": "1993:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:11"
																},
																"nativeSrc": "2002:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:11"
																},
																"nativeSrc": "2031:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:11"
															},
															"nativeSrc": "2031:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:11",
														"nodeType": "YulTypedName",
														"src": "1961:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:11",
														"nodeType": "YulTypedName",
														"src": "1969:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:11",
														"nodeType": "YulTypedName",
														"src": "1977:5:11",
														"type": ""
													}
												],
												"src": "1931:139:11"
											},
											{
												"body": {
													"nativeSrc": "2121:32:11",
													"nodeType": "YulBlock",
													"src": "2121:32:11",
													"statements": [
														{
															"nativeSrc": "2131:16:11",
															"nodeType": "YulAssignment",
															"src": "2131:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:11",
																"nodeType": "YulIdentifier",
																"src": "2142:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:11",
														"nodeType": "YulTypedName",
														"src": "2103:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:11",
														"nodeType": "YulTypedName",
														"src": "2113:7:11",
														"type": ""
													}
												],
												"src": "2076:77:11"
											},
											{
												"body": {
													"nativeSrc": "2202:79:11",
													"nodeType": "YulBlock",
													"src": "2202:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:11",
																"nodeType": "YulBlock",
																"src": "2259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:11"
																			},
																			"nativeSrc": "2261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:11"
																		},
																		"nativeSrc": "2261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:11"
																				},
																				"nativeSrc": "2232:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:11"
																		},
																		"nativeSrc": "2222:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:11"
																},
																"nativeSrc": "2215:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:11"
															},
															"nativeSrc": "2212:63:11",
															"nodeType": "YulIf",
															"src": "2212:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:11",
														"nodeType": "YulTypedName",
														"src": "2195:5:11",
														"type": ""
													}
												],
												"src": "2159:122:11"
											},
											{
												"body": {
													"nativeSrc": "2339:87:11",
													"nodeType": "YulBlock",
													"src": "2339:87:11",
													"statements": [
														{
															"nativeSrc": "2349:29:11",
															"nodeType": "YulAssignment",
															"src": "2349:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:11"
																},
																"nativeSrc": "2358:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:11"
																},
																"nativeSrc": "2387:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:11"
															},
															"nativeSrc": "2387:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:11",
														"nodeType": "YulTypedName",
														"src": "2317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:11",
														"nodeType": "YulTypedName",
														"src": "2325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:11",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2287:139:11"
											},
											{
												"body": {
													"nativeSrc": "2515:391:11",
													"nodeType": "YulBlock",
													"src": "2515:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:11",
																"nodeType": "YulBlock",
																"src": "2561:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:11"
																			},
																			"nativeSrc": "2563:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:11"
																		},
																		"nativeSrc": "2563:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:11"
															},
															"nativeSrc": "2525:119:11",
															"nodeType": "YulIf",
															"src": "2525:119:11"
														},
														{
															"nativeSrc": "2654:117:11",
															"nodeType": "YulBlock",
															"src": "2654:117:11",
															"statements": [
																{
																	"nativeSrc": "2669:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:11"
																				},
																				"nativeSrc": "2729:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:11"
																		},
																		"nativeSrc": "2708:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:11",
															"nodeType": "YulBlock",
															"src": "2781:118:11",
															"statements": [
																{
																	"nativeSrc": "2796:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:11"
																				},
																				"nativeSrc": "2857:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:11"
																		},
																		"nativeSrc": "2836:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:11",
														"nodeType": "YulTypedName",
														"src": "2477:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:11",
														"nodeType": "YulTypedName",
														"src": "2488:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:11",
														"nodeType": "YulTypedName",
														"src": "2500:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:11",
														"nodeType": "YulTypedName",
														"src": "2508:6:11",
														"type": ""
													}
												],
												"src": "2432:474:11"
											},
											{
												"body": {
													"nativeSrc": "2954:48:11",
													"nodeType": "YulBlock",
													"src": "2954:48:11",
													"statements": [
														{
															"nativeSrc": "2964:32:11",
															"nodeType": "YulAssignment",
															"src": "2964:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:11"
																		},
																		"nativeSrc": "2982:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:11"
																},
																"nativeSrc": "2975:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:11",
														"nodeType": "YulTypedName",
														"src": "2936:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:11",
														"nodeType": "YulTypedName",
														"src": "2946:7:11",
														"type": ""
													}
												],
												"src": "2912:90:11"
											},
											{
												"body": {
													"nativeSrc": "3067:50:11",
													"nodeType": "YulBlock",
													"src": "3067:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:11"
																		},
																		"nativeSrc": "3089:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:11"
																},
																"nativeSrc": "3077:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:11"
															},
															"nativeSrc": "3077:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:11",
														"nodeType": "YulTypedName",
														"src": "3055:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:11",
														"nodeType": "YulTypedName",
														"src": "3062:3:11",
														"type": ""
													}
												],
												"src": "3008:109:11"
											},
											{
												"body": {
													"nativeSrc": "3215:118:11",
													"nodeType": "YulBlock",
													"src": "3215:118:11",
													"statements": [
														{
															"nativeSrc": "3225:26:11",
															"nodeType": "YulAssignment",
															"src": "3225:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:11"
																},
																"nativeSrc": "3233:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:11"
																},
																"nativeSrc": "3261:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:11"
															},
															"nativeSrc": "3261:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:11",
														"nodeType": "YulTypedName",
														"src": "3187:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:11",
														"nodeType": "YulTypedName",
														"src": "3199:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:11",
														"nodeType": "YulTypedName",
														"src": "3210:4:11",
														"type": ""
													}
												],
												"src": "3123:210:11"
											},
											{
												"body": {
													"nativeSrc": "3405:263:11",
													"nodeType": "YulBlock",
													"src": "3405:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:11",
																"nodeType": "YulBlock",
																"src": "3451:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:11"
																			},
																			"nativeSrc": "3453:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:11"
																		},
																		"nativeSrc": "3453:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:11"
																		},
																		"nativeSrc": "3422:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:11"
																},
																"nativeSrc": "3418:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:11"
															},
															"nativeSrc": "3415:119:11",
															"nodeType": "YulIf",
															"src": "3415:119:11"
														},
														{
															"nativeSrc": "3544:117:11",
															"nodeType": "YulBlock",
															"src": "3544:117:11",
															"statements": [
																{
																	"nativeSrc": "3559:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:11"
																				},
																				"nativeSrc": "3619:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:11"
																		},
																		"nativeSrc": "3598:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:11",
														"nodeType": "YulTypedName",
														"src": "3375:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:11",
														"nodeType": "YulTypedName",
														"src": "3386:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:11",
														"nodeType": "YulTypedName",
														"src": "3398:6:11",
														"type": ""
													}
												],
												"src": "3339:329:11"
											},
											{
												"body": {
													"nativeSrc": "3739:53:11",
													"nodeType": "YulBlock",
													"src": "3739:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:11"
																		},
																		"nativeSrc": "3761:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:11"
																},
																"nativeSrc": "3749:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:11"
															},
															"nativeSrc": "3749:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:11",
														"nodeType": "YulTypedName",
														"src": "3727:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:11",
														"nodeType": "YulTypedName",
														"src": "3734:3:11",
														"type": ""
													}
												],
												"src": "3674:118:11"
											},
											{
												"body": {
													"nativeSrc": "3896:124:11",
													"nodeType": "YulBlock",
													"src": "3896:124:11",
													"statements": [
														{
															"nativeSrc": "3906:26:11",
															"nodeType": "YulAssignment",
															"src": "3906:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:11"
																},
																"nativeSrc": "3914:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:11"
																		},
																		"nativeSrc": "3995:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:11"
																},
																"nativeSrc": "3942:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:11"
															},
															"nativeSrc": "3942:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:11",
														"nodeType": "YulTypedName",
														"src": "3868:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:11",
														"nodeType": "YulTypedName",
														"src": "3880:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:11",
														"nodeType": "YulTypedName",
														"src": "3891:4:11",
														"type": ""
													}
												],
												"src": "3798:222:11"
											},
											{
												"body": {
													"nativeSrc": "4126:519:11",
													"nodeType": "YulBlock",
													"src": "4126:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:11",
																"nodeType": "YulBlock",
																"src": "4172:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:11"
																			},
																			"nativeSrc": "4174:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:11"
																		},
																		"nativeSrc": "4174:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:11"
																		},
																		"nativeSrc": "4143:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:11"
																},
																"nativeSrc": "4139:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:11"
															},
															"nativeSrc": "4136:119:11",
															"nodeType": "YulIf",
															"src": "4136:119:11"
														},
														{
															"nativeSrc": "4265:117:11",
															"nodeType": "YulBlock",
															"src": "4265:117:11",
															"statements": [
																{
																	"nativeSrc": "4280:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:11"
																				},
																				"nativeSrc": "4340:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:11"
																		},
																		"nativeSrc": "4319:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:11",
															"nodeType": "YulBlock",
															"src": "4392:118:11",
															"statements": [
																{
																	"nativeSrc": "4407:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:11"
																				},
																				"nativeSrc": "4468:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:11"
																		},
																		"nativeSrc": "4447:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:11",
															"nodeType": "YulBlock",
															"src": "4520:118:11",
															"statements": [
																{
																	"nativeSrc": "4535:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:11"
																				},
																				"nativeSrc": "4596:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:11"
																		},
																		"nativeSrc": "4575:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:11",
														"nodeType": "YulTypedName",
														"src": "4080:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:11",
														"nodeType": "YulTypedName",
														"src": "4091:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:11",
														"nodeType": "YulTypedName",
														"src": "4103:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:11",
														"nodeType": "YulTypedName",
														"src": "4111:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:11",
														"nodeType": "YulTypedName",
														"src": "4119:6:11",
														"type": ""
													}
												],
												"src": "4026:619:11"
											},
											{
												"body": {
													"nativeSrc": "4694:43:11",
													"nodeType": "YulBlock",
													"src": "4694:43:11",
													"statements": [
														{
															"nativeSrc": "4704:27:11",
															"nodeType": "YulAssignment",
															"src": "4704:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:11"
																},
																"nativeSrc": "4715:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:11",
														"nodeType": "YulTypedName",
														"src": "4676:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:11",
														"nodeType": "YulTypedName",
														"src": "4686:7:11",
														"type": ""
													}
												],
												"src": "4651:86:11"
											},
											{
												"body": {
													"nativeSrc": "4804:51:11",
													"nodeType": "YulBlock",
													"src": "4804:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:11"
																		},
																		"nativeSrc": "4826:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:11"
																},
																"nativeSrc": "4814:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:11"
															},
															"nativeSrc": "4814:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:11",
														"nodeType": "YulTypedName",
														"src": "4792:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:11",
														"nodeType": "YulTypedName",
														"src": "4799:3:11",
														"type": ""
													}
												],
												"src": "4743:112:11"
											},
											{
												"body": {
													"nativeSrc": "4955:120:11",
													"nodeType": "YulBlock",
													"src": "4955:120:11",
													"statements": [
														{
															"nativeSrc": "4965:26:11",
															"nodeType": "YulAssignment",
															"src": "4965:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:11"
																},
																"nativeSrc": "4973:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:11"
																		},
																		"nativeSrc": "5050:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:11"
																},
																"nativeSrc": "5001:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:11"
															},
															"nativeSrc": "5001:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:11",
														"nodeType": "YulTypedName",
														"src": "4927:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:11",
														"nodeType": "YulTypedName",
														"src": "4939:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:11",
														"nodeType": "YulTypedName",
														"src": "4950:4:11",
														"type": ""
													}
												],
												"src": "4861:214:11"
											},
											{
												"body": {
													"nativeSrc": "5147:263:11",
													"nodeType": "YulBlock",
													"src": "5147:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:11",
																"nodeType": "YulBlock",
																"src": "5193:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:11"
																			},
																			"nativeSrc": "5195:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:11"
																		},
																		"nativeSrc": "5195:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:11"
																		},
																		"nativeSrc": "5164:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:11"
																},
																"nativeSrc": "5160:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:11"
															},
															"nativeSrc": "5157:119:11",
															"nodeType": "YulIf",
															"src": "5157:119:11"
														},
														{
															"nativeSrc": "5286:117:11",
															"nodeType": "YulBlock",
															"src": "5286:117:11",
															"statements": [
																{
																	"nativeSrc": "5301:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:11"
																				},
																				"nativeSrc": "5361:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:11"
																		},
																		"nativeSrc": "5340:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:11",
														"nodeType": "YulTypedName",
														"src": "5117:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:11",
														"nodeType": "YulTypedName",
														"src": "5128:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:11",
														"nodeType": "YulTypedName",
														"src": "5140:6:11",
														"type": ""
													}
												],
												"src": "5081:329:11"
											},
											{
												"body": {
													"nativeSrc": "5481:53:11",
													"nodeType": "YulBlock",
													"src": "5481:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:11"
																		},
																		"nativeSrc": "5503:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:11"
																},
																"nativeSrc": "5491:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:11"
															},
															"nativeSrc": "5491:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:11",
														"nodeType": "YulTypedName",
														"src": "5469:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:11",
														"nodeType": "YulTypedName",
														"src": "5476:3:11",
														"type": ""
													}
												],
												"src": "5416:118:11"
											},
											{
												"body": {
													"nativeSrc": "5638:124:11",
													"nodeType": "YulBlock",
													"src": "5638:124:11",
													"statements": [
														{
															"nativeSrc": "5648:26:11",
															"nodeType": "YulAssignment",
															"src": "5648:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:11"
																},
																"nativeSrc": "5656:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:11"
																		},
																		"nativeSrc": "5737:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:11"
																},
																"nativeSrc": "5684:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:11"
															},
															"nativeSrc": "5684:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:11",
														"nodeType": "YulTypedName",
														"src": "5610:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:11",
														"nodeType": "YulTypedName",
														"src": "5622:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:11",
														"nodeType": "YulTypedName",
														"src": "5633:4:11",
														"type": ""
													}
												],
												"src": "5540:222:11"
											},
											{
												"body": {
													"nativeSrc": "5808:76:11",
													"nodeType": "YulBlock",
													"src": "5808:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5862:16:11",
																"nodeType": "YulBlock",
																"src": "5862:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5871:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5871:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5874:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5874:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5864:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5864:6:11"
																			},
																			"nativeSrc": "5864:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5864:12:11"
																		},
																		"nativeSrc": "5864:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5864:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5831:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5831:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5853:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5853:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5838:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "5838:14:11"
																				},
																				"nativeSrc": "5838:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5838:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5828:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5828:2:11"
																		},
																		"nativeSrc": "5828:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5821:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5821:6:11"
																},
																"nativeSrc": "5821:40:11",
																"nodeType": "YulFunctionCall",
																"src": "5821:40:11"
															},
															"nativeSrc": "5818:60:11",
															"nodeType": "YulIf",
															"src": "5818:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5768:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:11",
														"nodeType": "YulTypedName",
														"src": "5801:5:11",
														"type": ""
													}
												],
												"src": "5768:116:11"
											},
											{
												"body": {
													"nativeSrc": "5939:84:11",
													"nodeType": "YulBlock",
													"src": "5939:84:11",
													"statements": [
														{
															"nativeSrc": "5949:29:11",
															"nodeType": "YulAssignment",
															"src": "5949:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5971:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5971:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5958:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5958:12:11"
																},
																"nativeSrc": "5958:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5958:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5949:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5949:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6011:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6011:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5987:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "5987:23:11"
																},
																"nativeSrc": "5987:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5987:30:11"
															},
															"nativeSrc": "5987:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5987:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5890:133:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5917:6:11",
														"nodeType": "YulTypedName",
														"src": "5917:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5925:3:11",
														"nodeType": "YulTypedName",
														"src": "5925:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5933:5:11",
														"nodeType": "YulTypedName",
														"src": "5933:5:11",
														"type": ""
													}
												],
												"src": "5890:133:11"
											},
											{
												"body": {
													"nativeSrc": "6109:388:11",
													"nodeType": "YulBlock",
													"src": "6109:388:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6155:83:11",
																"nodeType": "YulBlock",
																"src": "6155:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6157:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6157:77:11"
																			},
																			"nativeSrc": "6157:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6157:79:11"
																		},
																		"nativeSrc": "6157:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6157:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6130:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6130:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6139:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6139:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6126:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6126:3:11"
																		},
																		"nativeSrc": "6126:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6126:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6151:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6151:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6122:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6122:3:11"
																},
																"nativeSrc": "6122:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6122:32:11"
															},
															"nativeSrc": "6119:119:11",
															"nodeType": "YulIf",
															"src": "6119:119:11"
														},
														{
															"nativeSrc": "6248:117:11",
															"nodeType": "YulBlock",
															"src": "6248:117:11",
															"statements": [
																{
																	"nativeSrc": "6263:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6263:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6277:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6277:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6267:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6267:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6292:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6292:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6327:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6327:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6338:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6338:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6323:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6323:3:11"
																				},
																				"nativeSrc": "6323:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6323:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6347:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6347:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6302:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6302:20:11"
																		},
																		"nativeSrc": "6302:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6292:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6292:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6375:115:11",
															"nodeType": "YulBlock",
															"src": "6375:115:11",
															"statements": [
																{
																	"nativeSrc": "6390:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6390:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6404:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6404:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6394:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6394:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6420:60:11",
																	"nodeType": "YulAssignment",
																	"src": "6420:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6452:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6452:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6463:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6463:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6448:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6448:3:11"
																				},
																				"nativeSrc": "6448:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6448:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6472:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6472:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6430:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6430:17:11"
																		},
																		"nativeSrc": "6430:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6430:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6420:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6029:468:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6071:9:11",
														"nodeType": "YulTypedName",
														"src": "6071:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6082:7:11",
														"nodeType": "YulTypedName",
														"src": "6082:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6094:6:11",
														"nodeType": "YulTypedName",
														"src": "6094:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6102:6:11",
														"nodeType": "YulTypedName",
														"src": "6102:6:11",
														"type": ""
													}
												],
												"src": "6029:468:11"
											},
											{
												"body": {
													"nativeSrc": "6586:391:11",
													"nodeType": "YulBlock",
													"src": "6586:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6632:83:11",
																"nodeType": "YulBlock",
																"src": "6632:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6634:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6634:77:11"
																			},
																			"nativeSrc": "6634:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6634:79:11"
																		},
																		"nativeSrc": "6634:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6634:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6607:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6607:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6616:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6616:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6603:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:11"
																		},
																		"nativeSrc": "6603:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6603:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6628:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6628:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6599:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6599:3:11"
																},
																"nativeSrc": "6599:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6599:32:11"
															},
															"nativeSrc": "6596:119:11",
															"nodeType": "YulIf",
															"src": "6596:119:11"
														},
														{
															"nativeSrc": "6725:117:11",
															"nodeType": "YulBlock",
															"src": "6725:117:11",
															"statements": [
																{
																	"nativeSrc": "6740:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6740:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6754:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6754:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6744:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6744:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6769:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6769:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6804:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6804:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6815:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6815:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6800:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6800:3:11"
																				},
																				"nativeSrc": "6800:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6800:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6824:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6824:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6779:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6779:20:11"
																		},
																		"nativeSrc": "6779:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6769:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6769:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6852:118:11",
															"nodeType": "YulBlock",
															"src": "6852:118:11",
															"statements": [
																{
																	"nativeSrc": "6867:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6867:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6881:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6881:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6871:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6871:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6897:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6897:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6932:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6932:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6943:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6943:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6928:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6928:3:11"
																				},
																				"nativeSrc": "6928:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6928:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6952:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6952:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6907:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6907:20:11"
																		},
																		"nativeSrc": "6907:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6907:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6897:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6897:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6503:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6548:9:11",
														"nodeType": "YulTypedName",
														"src": "6548:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6559:7:11",
														"nodeType": "YulTypedName",
														"src": "6559:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6571:6:11",
														"nodeType": "YulTypedName",
														"src": "6571:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6579:6:11",
														"nodeType": "YulTypedName",
														"src": "6579:6:11",
														"type": ""
													}
												],
												"src": "6503:474:11"
											},
											{
												"body": {
													"nativeSrc": "7011:152:11",
													"nodeType": "YulBlock",
													"src": "7011:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7028:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7028:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7031:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7031:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7021:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7021:6:11"
																},
																"nativeSrc": "7021:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7021:88:11"
															},
															"nativeSrc": "7021:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7021:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7125:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7125:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7128:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7128:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7118:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:11"
																},
																"nativeSrc": "7118:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7118:15:11"
															},
															"nativeSrc": "7118:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7118:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7149:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7152:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7152:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7142:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7142:6:11"
																},
																"nativeSrc": "7142:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7142:15:11"
															},
															"nativeSrc": "7142:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7142:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6983:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6983:180:11"
											},
											{
												"body": {
													"nativeSrc": "7220:269:11",
													"nodeType": "YulBlock",
													"src": "7220:269:11",
													"statements": [
														{
															"nativeSrc": "7230:22:11",
															"nodeType": "YulAssignment",
															"src": "7230:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7244:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7244:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7250:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7250:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7240:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7240:3:11"
																},
																"nativeSrc": "7240:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7240:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7230:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:11"
																}
															]
														},
														{
															"nativeSrc": "7261:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7261:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7291:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7291:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7297:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7297:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7287:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7287:3:11"
																},
																"nativeSrc": "7287:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7287:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7265:18:11",
																	"nodeType": "YulTypedName",
																	"src": "7265:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7338:51:11",
																"nodeType": "YulBlock",
																"src": "7338:51:11",
																"statements": [
																	{
																		"nativeSrc": "7352:27:11",
																		"nodeType": "YulAssignment",
																		"src": "7352:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7366:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "7366:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7374:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7374:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7362:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7362:3:11"
																			},
																			"nativeSrc": "7362:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7362:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7352:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7352:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7318:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "7318:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7311:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:11"
																},
																"nativeSrc": "7311:26:11",
																"nodeType": "YulFunctionCall",
																"src": "7311:26:11"
															},
															"nativeSrc": "7308:81:11",
															"nodeType": "YulIf",
															"src": "7308:81:11"
														},
														{
															"body": {
																"nativeSrc": "7441:42:11",
																"nodeType": "YulBlock",
																"src": "7441:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7455:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7455:16:11"
																			},
																			"nativeSrc": "7455:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7455:18:11"
																		},
																		"nativeSrc": "7455:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7455:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7405:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "7405:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7428:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7428:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7436:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7436:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7425:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7425:2:11"
																		},
																		"nativeSrc": "7425:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7425:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7402:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7402:2:11"
																},
																"nativeSrc": "7402:38:11",
																"nodeType": "YulFunctionCall",
																"src": "7402:38:11"
															},
															"nativeSrc": "7399:84:11",
															"nodeType": "YulIf",
															"src": "7399:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7169:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7204:4:11",
														"nodeType": "YulTypedName",
														"src": "7204:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7213:6:11",
														"nodeType": "YulTypedName",
														"src": "7213:6:11",
														"type": ""
													}
												],
												"src": "7169:320:11"
											},
											{
												"body": {
													"nativeSrc": "7523:152:11",
													"nodeType": "YulBlock",
													"src": "7523:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7540:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7540:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7543:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7543:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7533:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:11"
																},
																"nativeSrc": "7533:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7533:88:11"
															},
															"nativeSrc": "7533:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7533:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7637:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7637:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7640:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7640:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7630:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:11"
																},
																"nativeSrc": "7630:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7630:15:11"
															},
															"nativeSrc": "7630:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7630:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7661:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7661:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7664:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7664:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7654:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7654:6:11"
																},
																"nativeSrc": "7654:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7654:15:11"
															},
															"nativeSrc": "7654:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7654:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7495:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7495:180:11"
											},
											{
												"body": {
													"nativeSrc": "7725:147:11",
													"nodeType": "YulBlock",
													"src": "7725:147:11",
													"statements": [
														{
															"nativeSrc": "7735:25:11",
															"nodeType": "YulAssignment",
															"src": "7735:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7758:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7758:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7740:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7740:17:11"
																},
																"nativeSrc": "7740:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7740:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7735:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7735:1:11"
																}
															]
														},
														{
															"nativeSrc": "7769:25:11",
															"nodeType": "YulAssignment",
															"src": "7769:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7792:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7792:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7774:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7774:17:11"
																},
																"nativeSrc": "7774:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7774:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7769:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7769:1:11"
																}
															]
														},
														{
															"nativeSrc": "7803:16:11",
															"nodeType": "YulAssignment",
															"src": "7803:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7814:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7814:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7817:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7817:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7810:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7810:3:11"
																},
																"nativeSrc": "7810:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7810:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7803:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7803:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7843:22:11",
																"nodeType": "YulBlock",
																"src": "7843:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7845:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7845:16:11"
																			},
																			"nativeSrc": "7845:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7845:18:11"
																		},
																		"nativeSrc": "7845:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7845:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7835:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7835:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7838:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7838:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7832:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7832:2:11"
																},
																"nativeSrc": "7832:10:11",
																"nodeType": "YulFunctionCall",
																"src": "7832:10:11"
															},
															"nativeSrc": "7829:36:11",
															"nodeType": "YulIf",
															"src": "7829:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7681:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7712:1:11",
														"nodeType": "YulTypedName",
														"src": "7712:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7715:1:11",
														"nodeType": "YulTypedName",
														"src": "7715:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7721:3:11",
														"nodeType": "YulTypedName",
														"src": "7721:3:11",
														"type": ""
													}
												],
												"src": "7681:191:11"
											},
											{
												"body": {
													"nativeSrc": "7931:32:11",
													"nodeType": "YulBlock",
													"src": "7931:32:11",
													"statements": [
														{
															"nativeSrc": "7941:16:11",
															"nodeType": "YulAssignment",
															"src": "7941:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "7952:5:11",
																"nodeType": "YulIdentifier",
																"src": "7952:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7941:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7941:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "7878:85:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7913:5:11",
														"nodeType": "YulTypedName",
														"src": "7913:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7923:7:11",
														"nodeType": "YulTypedName",
														"src": "7923:7:11",
														"type": ""
													}
												],
												"src": "7878:85:11"
											},
											{
												"body": {
													"nativeSrc": "8013:57:11",
													"nodeType": "YulBlock",
													"src": "8013:57:11",
													"statements": [
														{
															"nativeSrc": "8023:41:11",
															"nodeType": "YulAssignment",
															"src": "8023:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8038:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8038:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8045:18:11",
																		"nodeType": "YulLiteral",
																		"src": "8045:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8034:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8034:3:11"
																},
																"nativeSrc": "8034:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8034:30:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8023:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "8023:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7969:101:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7995:5:11",
														"nodeType": "YulTypedName",
														"src": "7995:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8005:7:11",
														"nodeType": "YulTypedName",
														"src": "8005:7:11",
														"type": ""
													}
												],
												"src": "7969:101:11"
											},
											{
												"body": {
													"nativeSrc": "8108:28:11",
													"nodeType": "YulBlock",
													"src": "8108:28:11",
													"statements": [
														{
															"nativeSrc": "8118:12:11",
															"nodeType": "YulAssignment",
															"src": "8118:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "8125:5:11",
																"nodeType": "YulIdentifier",
																"src": "8125:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8118:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8118:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "8076:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8094:5:11",
														"nodeType": "YulTypedName",
														"src": "8094:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8104:3:11",
														"nodeType": "YulTypedName",
														"src": "8104:3:11",
														"type": ""
													}
												],
												"src": "8076:60:11"
											},
											{
												"body": {
													"nativeSrc": "8209:89:11",
													"nodeType": "YulBlock",
													"src": "8209:89:11",
													"statements": [
														{
															"nativeSrc": "8219:73:11",
															"nodeType": "YulAssignment",
															"src": "8219:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8284:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8284:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "8258:25:11",
																					"nodeType": "YulIdentifier",
																					"src": "8258:25:11"
																				},
																				"nativeSrc": "8258:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8258:32:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "8249:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "8249:8:11"
																		},
																		"nativeSrc": "8249:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8249:42:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "8232:16:11",
																	"nodeType": "YulIdentifier",
																	"src": "8232:16:11"
																},
																"nativeSrc": "8232:60:11",
																"nodeType": "YulFunctionCall",
																"src": "8232:60:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8219:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "8219:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "8142:156:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8189:5:11",
														"nodeType": "YulTypedName",
														"src": "8189:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8199:9:11",
														"nodeType": "YulTypedName",
														"src": "8199:9:11",
														"type": ""
													}
												],
												"src": "8142:156:11"
											},
											{
												"body": {
													"nativeSrc": "8376:73:11",
													"nodeType": "YulBlock",
													"src": "8376:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8393:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8393:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8436:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8436:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "8398:37:11",
																			"nodeType": "YulIdentifier",
																			"src": "8398:37:11"
																		},
																		"nativeSrc": "8398:44:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8398:44:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8386:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8386:6:11"
																},
																"nativeSrc": "8386:57:11",
																"nodeType": "YulFunctionCall",
																"src": "8386:57:11"
															},
															"nativeSrc": "8386:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "8386:57:11"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "8304:145:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8364:5:11",
														"nodeType": "YulTypedName",
														"src": "8364:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8371:3:11",
														"nodeType": "YulTypedName",
														"src": "8371:3:11",
														"type": ""
													}
												],
												"src": "8304:145:11"
											},
											{
												"body": {
													"nativeSrc": "8560:131:11",
													"nodeType": "YulBlock",
													"src": "8560:131:11",
													"statements": [
														{
															"nativeSrc": "8570:26:11",
															"nodeType": "YulAssignment",
															"src": "8570:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8582:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8582:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8593:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8593:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8578:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8578:3:11"
																},
																"nativeSrc": "8578:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8578:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8570:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8570:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8657:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8657:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8670:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8670:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8681:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8681:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8666:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8666:3:11"
																		},
																		"nativeSrc": "8666:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8666:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "8606:50:11",
																	"nodeType": "YulIdentifier",
																	"src": "8606:50:11"
																},
																"nativeSrc": "8606:78:11",
																"nodeType": "YulFunctionCall",
																"src": "8606:78:11"
															},
															"nativeSrc": "8606:78:11",
															"nodeType": "YulExpressionStatement",
															"src": "8606:78:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8455:236:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8532:9:11",
														"nodeType": "YulTypedName",
														"src": "8532:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8544:6:11",
														"nodeType": "YulTypedName",
														"src": "8544:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8555:4:11",
														"nodeType": "YulTypedName",
														"src": "8555:4:11",
														"type": ""
													}
												],
												"src": "8455:236:11"
											},
											{
												"body": {
													"nativeSrc": "8851:288:11",
													"nodeType": "YulBlock",
													"src": "8851:288:11",
													"statements": [
														{
															"nativeSrc": "8861:26:11",
															"nodeType": "YulAssignment",
															"src": "8861:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8873:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8873:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8884:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8884:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8869:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8869:3:11"
																},
																"nativeSrc": "8869:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8869:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8861:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8861:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8941:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8941:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8954:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8954:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8965:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8965:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8950:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8950:3:11"
																		},
																		"nativeSrc": "8950:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8950:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8897:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8897:43:11"
																},
																"nativeSrc": "8897:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8897:71:11"
															},
															"nativeSrc": "8897:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8897:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9022:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9022:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9035:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9035:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9046:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9046:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9031:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9031:3:11"
																		},
																		"nativeSrc": "9031:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9031:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8978:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8978:43:11"
																},
																"nativeSrc": "8978:72:11",
																"nodeType": "YulFunctionCall",
																"src": "8978:72:11"
															},
															"nativeSrc": "8978:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "8978:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9104:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9104:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9117:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9128:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9128:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:11"
																		},
																		"nativeSrc": "9113:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9113:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9060:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9060:43:11"
																},
																"nativeSrc": "9060:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9060:72:11"
															},
															"nativeSrc": "9060:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9060:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8697:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8807:9:11",
														"nodeType": "YulTypedName",
														"src": "8807:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8819:6:11",
														"nodeType": "YulTypedName",
														"src": "8819:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8827:6:11",
														"nodeType": "YulTypedName",
														"src": "8827:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8835:6:11",
														"nodeType": "YulTypedName",
														"src": "8835:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8846:4:11",
														"nodeType": "YulTypedName",
														"src": "8846:4:11",
														"type": ""
													}
												],
												"src": "8697:442:11"
											},
											{
												"body": {
													"nativeSrc": "9251:75:11",
													"nodeType": "YulBlock",
													"src": "9251:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9273:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9273:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9281:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9281:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9269:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9269:3:11"
																		},
																		"nativeSrc": "9269:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9269:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9285:33:11",
																		"nodeType": "YulLiteral",
																		"src": "9285:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9262:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9262:6:11"
																},
																"nativeSrc": "9262:57:11",
																"nodeType": "YulFunctionCall",
																"src": "9262:57:11"
															},
															"nativeSrc": "9262:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "9262:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "9145:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9243:6:11",
														"nodeType": "YulTypedName",
														"src": "9243:6:11",
														"type": ""
													}
												],
												"src": "9145:181:11"
											},
											{
												"body": {
													"nativeSrc": "9478:220:11",
													"nodeType": "YulBlock",
													"src": "9478:220:11",
													"statements": [
														{
															"nativeSrc": "9488:74:11",
															"nodeType": "YulAssignment",
															"src": "9488:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9554:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9554:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9559:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9559:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9495:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9495:58:11"
																},
																"nativeSrc": "9495:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9495:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9488:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9488:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9660:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9660:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "9571:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9571:88:11"
																},
																"nativeSrc": "9571:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9571:93:11"
															},
															"nativeSrc": "9571:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9571:93:11"
														},
														{
															"nativeSrc": "9673:19:11",
															"nodeType": "YulAssignment",
															"src": "9673:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9684:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9684:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9689:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9689:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9680:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:11"
																},
																"nativeSrc": "9680:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9680:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9673:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9673:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9332:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9466:3:11",
														"nodeType": "YulTypedName",
														"src": "9466:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9474:3:11",
														"nodeType": "YulTypedName",
														"src": "9474:3:11",
														"type": ""
													}
												],
												"src": "9332:366:11"
											},
											{
												"body": {
													"nativeSrc": "9875:248:11",
													"nodeType": "YulBlock",
													"src": "9875:248:11",
													"statements": [
														{
															"nativeSrc": "9885:26:11",
															"nodeType": "YulAssignment",
															"src": "9885:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9897:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9897:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9908:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9908:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9893:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9893:3:11"
																},
																"nativeSrc": "9893:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9893:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9885:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9885:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9932:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9932:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9943:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9943:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9928:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9928:3:11"
																		},
																		"nativeSrc": "9928:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9928:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9951:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9951:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9957:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9957:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9947:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9947:3:11"
																		},
																		"nativeSrc": "9947:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9947:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9921:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9921:6:11"
																},
																"nativeSrc": "9921:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9921:47:11"
															},
															"nativeSrc": "9921:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9921:47:11"
														},
														{
															"nativeSrc": "9977:139:11",
															"nodeType": "YulAssignment",
															"src": "9977:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10111:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10111:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9985:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9985:124:11"
																},
																"nativeSrc": "9985:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9985:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9977:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9977:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9704:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9855:9:11",
														"nodeType": "YulTypedName",
														"src": "9855:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9870:4:11",
														"nodeType": "YulTypedName",
														"src": "9870:4:11",
														"type": ""
													}
												],
												"src": "9704:419:11"
											},
											{
												"body": {
													"nativeSrc": "10157:152:11",
													"nodeType": "YulBlock",
													"src": "10157:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10174:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10174:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10177:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10177:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10167:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10167:6:11"
																},
																"nativeSrc": "10167:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10167:88:11"
															},
															"nativeSrc": "10167:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10167:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10271:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10271:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10274:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10274:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10264:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10264:6:11"
																},
																"nativeSrc": "10264:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10264:15:11"
															},
															"nativeSrc": "10264:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10264:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10295:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10295:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10298:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10298:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10288:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10288:6:11"
																},
																"nativeSrc": "10288:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10288:15:11"
															},
															"nativeSrc": "10288:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10288:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "10129:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10129:180:11"
											},
											{
												"body": {
													"nativeSrc": "10369:87:11",
													"nodeType": "YulBlock",
													"src": "10369:87:11",
													"statements": [
														{
															"nativeSrc": "10379:11:11",
															"nodeType": "YulAssignment",
															"src": "10379:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "10387:3:11",
																"nodeType": "YulIdentifier",
																"src": "10387:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10379:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10379:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10407:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10407:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "10410:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10410:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10400:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10400:6:11"
																},
																"nativeSrc": "10400:14:11",
																"nodeType": "YulFunctionCall",
																"src": "10400:14:11"
															},
															"nativeSrc": "10400:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "10400:14:11"
														},
														{
															"nativeSrc": "10423:26:11",
															"nodeType": "YulAssignment",
															"src": "10423:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10441:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10441:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10444:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10444:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10431:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "10431:9:11"
																},
																"nativeSrc": "10431:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10431:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10423:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10423:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "10315:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10356:3:11",
														"nodeType": "YulTypedName",
														"src": "10356:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "10364:4:11",
														"nodeType": "YulTypedName",
														"src": "10364:4:11",
														"type": ""
													}
												],
												"src": "10315:141:11"
											},
											{
												"body": {
													"nativeSrc": "10506:49:11",
													"nodeType": "YulBlock",
													"src": "10506:49:11",
													"statements": [
														{
															"nativeSrc": "10516:33:11",
															"nodeType": "YulAssignment",
															"src": "10516:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10534:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10534:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10541:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10541:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10530:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10530:3:11"
																		},
																		"nativeSrc": "10530:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10530:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10546:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10546:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10526:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10526:3:11"
																},
																"nativeSrc": "10526:23:11",
																"nodeType": "YulFunctionCall",
																"src": "10526:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10516:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10516:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "10462:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10489:5:11",
														"nodeType": "YulTypedName",
														"src": "10489:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10499:6:11",
														"nodeType": "YulTypedName",
														"src": "10499:6:11",
														"type": ""
													}
												],
												"src": "10462:93:11"
											},
											{
												"body": {
													"nativeSrc": "10614:54:11",
													"nodeType": "YulBlock",
													"src": "10614:54:11",
													"statements": [
														{
															"nativeSrc": "10624:37:11",
															"nodeType": "YulAssignment",
															"src": "10624:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "10649:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10649:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10655:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10655:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "10645:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10645:3:11"
																},
																"nativeSrc": "10645:16:11",
																"nodeType": "YulFunctionCall",
																"src": "10645:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10624:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "10624:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "10561:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "10589:4:11",
														"nodeType": "YulTypedName",
														"src": "10589:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "10595:5:11",
														"nodeType": "YulTypedName",
														"src": "10595:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10605:8:11",
														"nodeType": "YulTypedName",
														"src": "10605:8:11",
														"type": ""
													}
												],
												"src": "10561:107:11"
											},
											{
												"body": {
													"nativeSrc": "10750:317:11",
													"nodeType": "YulBlock",
													"src": "10750:317:11",
													"statements": [
														{
															"nativeSrc": "10760:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10760:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "10781:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "10781:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10793:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10793:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10777:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10777:3:11"
																},
																"nativeSrc": "10777:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10777:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "10764:9:11",
																	"nodeType": "YulTypedName",
																	"src": "10764:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10804:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10804:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10835:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10835:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10846:66:11",
																		"nodeType": "YulLiteral",
																		"src": "10846:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10816:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "10816:18:11"
																},
																"nativeSrc": "10816:97:11",
																"nodeType": "YulFunctionCall",
																"src": "10816:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "10808:4:11",
																	"nodeType": "YulTypedName",
																	"src": "10808:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10922:51:11",
															"nodeType": "YulAssignment",
															"src": "10922:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10953:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10953:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "10964:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "10964:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10934:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "10934:18:11"
																},
																"nativeSrc": "10934:39:11",
																"nodeType": "YulFunctionCall",
																"src": "10934:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "10922:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "10922:8:11"
																}
															]
														},
														{
															"nativeSrc": "10982:30:11",
															"nodeType": "YulAssignment",
															"src": "10982:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10995:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10995:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "11006:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11006:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11002:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11002:3:11"
																		},
																		"nativeSrc": "11002:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11002:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10991:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10991:3:11"
																},
																"nativeSrc": "10991:21:11",
																"nodeType": "YulFunctionCall",
																"src": "10991:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10982:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10982:5:11"
																}
															]
														},
														{
															"nativeSrc": "11021:40:11",
															"nodeType": "YulAssignment",
															"src": "11021:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11034:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "11034:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "11045:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "11045:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "11055:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11055:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11041:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:11"
																		},
																		"nativeSrc": "11041:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11041:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11031:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11031:2:11"
																},
																"nativeSrc": "11031:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11031:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11021:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11021:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "10674:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10711:5:11",
														"nodeType": "YulTypedName",
														"src": "10711:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "10718:10:11",
														"nodeType": "YulTypedName",
														"src": "10718:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "10730:8:11",
														"nodeType": "YulTypedName",
														"src": "10730:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10743:6:11",
														"nodeType": "YulTypedName",
														"src": "10743:6:11",
														"type": ""
													}
												],
												"src": "10674:393:11"
											},
											{
												"body": {
													"nativeSrc": "11133:82:11",
													"nodeType": "YulBlock",
													"src": "11133:82:11",
													"statements": [
														{
															"nativeSrc": "11143:66:11",
															"nodeType": "YulAssignment",
															"src": "11143:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11201:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "11201:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "11183:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "11183:17:11"
																				},
																				"nativeSrc": "11183:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11183:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11174:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "11174:8:11"
																		},
																		"nativeSrc": "11174:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11174:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11156:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11156:17:11"
																},
																"nativeSrc": "11156:53:11",
																"nodeType": "YulFunctionCall",
																"src": "11156:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11143:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "11143:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "11073:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11113:5:11",
														"nodeType": "YulTypedName",
														"src": "11113:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11123:9:11",
														"nodeType": "YulTypedName",
														"src": "11123:9:11",
														"type": ""
													}
												],
												"src": "11073:142:11"
											},
											{
												"body": {
													"nativeSrc": "11268:28:11",
													"nodeType": "YulBlock",
													"src": "11268:28:11",
													"statements": [
														{
															"nativeSrc": "11278:12:11",
															"nodeType": "YulAssignment",
															"src": "11278:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "11285:5:11",
																"nodeType": "YulIdentifier",
																"src": "11285:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11278:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11278:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "11221:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11254:5:11",
														"nodeType": "YulTypedName",
														"src": "11254:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11264:3:11",
														"nodeType": "YulTypedName",
														"src": "11264:3:11",
														"type": ""
													}
												],
												"src": "11221:75:11"
											},
											{
												"body": {
													"nativeSrc": "11378:193:11",
													"nodeType": "YulBlock",
													"src": "11378:193:11",
													"statements": [
														{
															"nativeSrc": "11388:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "11388:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "11443:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "11443:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "11412:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "11412:30:11"
																},
																"nativeSrc": "11412:39:11",
																"nodeType": "YulFunctionCall",
																"src": "11412:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "11392:16:11",
																	"nodeType": "YulTypedName",
																	"src": "11392:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11467:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11467:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11507:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "11507:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11501:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "11501:5:11"
																				},
																				"nativeSrc": "11501:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11501:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "11514:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11514:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "11546:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "11546:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "11522:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "11522:23:11"
																				},
																				"nativeSrc": "11522:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11522:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "11473:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "11473:27:11"
																		},
																		"nativeSrc": "11473:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11473:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "11460:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11460:6:11"
																},
																"nativeSrc": "11460:105:11",
																"nodeType": "YulFunctionCall",
																"src": "11460:105:11"
															},
															"nativeSrc": "11460:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "11460:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "11302:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11355:4:11",
														"nodeType": "YulTypedName",
														"src": "11355:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "11361:6:11",
														"nodeType": "YulTypedName",
														"src": "11361:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "11369:7:11",
														"nodeType": "YulTypedName",
														"src": "11369:7:11",
														"type": ""
													}
												],
												"src": "11302:269:11"
											},
											{
												"body": {
													"nativeSrc": "11626:24:11",
													"nodeType": "YulBlock",
													"src": "11626:24:11",
													"statements": [
														{
															"nativeSrc": "11636:8:11",
															"nodeType": "YulAssignment",
															"src": "11636:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "11643:1:11",
																"nodeType": "YulLiteral",
																"src": "11643:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11636:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "11577:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11622:3:11",
														"nodeType": "YulTypedName",
														"src": "11622:3:11",
														"type": ""
													}
												],
												"src": "11577:73:11"
											},
											{
												"body": {
													"nativeSrc": "11709:136:11",
													"nodeType": "YulBlock",
													"src": "11709:136:11",
													"statements": [
														{
															"nativeSrc": "11719:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "11719:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "11733:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "11733:30:11"
																},
																"nativeSrc": "11733:32:11",
																"nodeType": "YulFunctionCall",
																"src": "11733:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "11723:6:11",
																	"nodeType": "YulTypedName",
																	"src": "11723:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11818:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11818:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "11824:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11824:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "11832:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11832:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "11774:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11774:43:11"
																},
																"nativeSrc": "11774:65:11",
																"nodeType": "YulFunctionCall",
																"src": "11774:65:11"
															},
															"nativeSrc": "11774:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "11774:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "11656:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11695:4:11",
														"nodeType": "YulTypedName",
														"src": "11695:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "11701:6:11",
														"nodeType": "YulTypedName",
														"src": "11701:6:11",
														"type": ""
													}
												],
												"src": "11656:189:11"
											},
											{
												"body": {
													"nativeSrc": "11901:136:11",
													"nodeType": "YulBlock",
													"src": "11901:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11968:63:11",
																"nodeType": "YulBlock",
																"src": "11968:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12012:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "12012:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12019:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12019:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "11982:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "11982:29:11"
																			},
																			"nativeSrc": "11982:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11982:39:11"
																		},
																		"nativeSrc": "11982:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11982:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "11921:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "11921:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11928:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11928:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11918:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11918:2:11"
																},
																"nativeSrc": "11918:14:11",
																"nodeType": "YulFunctionCall",
																"src": "11918:14:11"
															},
															"nativeSrc": "11911:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11933:26:11",
																"nodeType": "YulBlock",
																"src": "11933:26:11",
																"statements": [
																	{
																		"nativeSrc": "11935:22:11",
																		"nodeType": "YulAssignment",
																		"src": "11935:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11948:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "11948:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11955:1:11",
																					"nodeType": "YulLiteral",
																					"src": "11955:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11944:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "11944:3:11"
																			},
																			"nativeSrc": "11944:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11944:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "11935:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "11935:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11915:2:11",
																"nodeType": "YulBlock",
																"src": "11915:2:11",
																"statements": []
															},
															"src": "11911:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "11851:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "11889:5:11",
														"nodeType": "YulTypedName",
														"src": "11889:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11896:3:11",
														"nodeType": "YulTypedName",
														"src": "11896:3:11",
														"type": ""
													}
												],
												"src": "11851:186:11"
											},
											{
												"body": {
													"nativeSrc": "12122:464:11",
													"nodeType": "YulBlock",
													"src": "12122:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12148:431:11",
																"nodeType": "YulBlock",
																"src": "12148:431:11",
																"statements": [
																	{
																		"nativeSrc": "12162:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12162:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "12210:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "12210:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "12178:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "12178:31:11"
																			},
																			"nativeSrc": "12178:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12178:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "12166:8:11",
																				"nodeType": "YulTypedName",
																				"src": "12166:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12229:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12229:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "12252:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "12252:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "12280:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "12280:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "12262:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "12262:17:11"
																					},
																					"nativeSrc": "12262:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "12262:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12248:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "12248:3:11"
																			},
																			"nativeSrc": "12248:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12248:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12233:11:11",
																				"nodeType": "YulTypedName",
																				"src": "12233:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12449:27:11",
																			"nodeType": "YulBlock",
																			"src": "12449:27:11",
																			"statements": [
																				{
																					"nativeSrc": "12451:23:11",
																					"nodeType": "YulAssignment",
																					"src": "12451:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "12466:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "12466:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "12451:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "12451:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "12433:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "12433:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12445:2:11",
																					"nodeType": "YulLiteral",
																					"src": "12445:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12430:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "12430:2:11"
																			},
																			"nativeSrc": "12430:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12430:18:11"
																		},
																		"nativeSrc": "12427:49:11",
																		"nodeType": "YulIf",
																		"src": "12427:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "12518:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "12518:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "12535:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "12535:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "12563:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "12563:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "12545:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "12545:17:11"
																							},
																							"nativeSrc": "12545:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "12545:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12531:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "12531:3:11"
																					},
																					"nativeSrc": "12531:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "12531:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "12489:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "12489:28:11"
																			},
																			"nativeSrc": "12489:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12489:80:11"
																		},
																		"nativeSrc": "12489:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12489:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "12139:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12139:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12144:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12144:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12136:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12136:2:11"
																},
																"nativeSrc": "12136:11:11",
																"nodeType": "YulFunctionCall",
																"src": "12136:11:11"
															},
															"nativeSrc": "12133:446:11",
															"nodeType": "YulIf",
															"src": "12133:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "12043:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12098:5:11",
														"nodeType": "YulTypedName",
														"src": "12098:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12105:3:11",
														"nodeType": "YulTypedName",
														"src": "12105:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "12110:10:11",
														"nodeType": "YulTypedName",
														"src": "12110:10:11",
														"type": ""
													}
												],
												"src": "12043:543:11"
											},
											{
												"body": {
													"nativeSrc": "12655:54:11",
													"nodeType": "YulBlock",
													"src": "12655:54:11",
													"statements": [
														{
															"nativeSrc": "12665:37:11",
															"nodeType": "YulAssignment",
															"src": "12665:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "12690:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12690:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12696:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "12696:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "12686:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12686:3:11"
																},
																"nativeSrc": "12686:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12686:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12665:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "12665:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "12592:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "12630:4:11",
														"nodeType": "YulTypedName",
														"src": "12630:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "12636:5:11",
														"nodeType": "YulTypedName",
														"src": "12636:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12646:8:11",
														"nodeType": "YulTypedName",
														"src": "12646:8:11",
														"type": ""
													}
												],
												"src": "12592:117:11"
											},
											{
												"body": {
													"nativeSrc": "12766:118:11",
													"nodeType": "YulBlock",
													"src": "12766:118:11",
													"statements": [
														{
															"nativeSrc": "12776:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12776:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12825:1:11",
																						"nodeType": "YulLiteral",
																						"src": "12825:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "12828:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "12828:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "12821:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12821:3:11"
																				},
																				"nativeSrc": "12821:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12821:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12840:1:11",
																						"nodeType": "YulLiteral",
																						"src": "12840:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12836:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12836:3:11"
																				},
																				"nativeSrc": "12836:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12836:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "12792:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "12792:28:11"
																		},
																		"nativeSrc": "12792:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12792:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "12788:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12788:3:11"
																},
																"nativeSrc": "12788:56:11",
																"nodeType": "YulFunctionCall",
																"src": "12788:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "12780:4:11",
																	"nodeType": "YulTypedName",
																	"src": "12780:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12853:25:11",
															"nodeType": "YulAssignment",
															"src": "12853:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12867:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12867:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "12873:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12873:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12863:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12863:3:11"
																},
																"nativeSrc": "12863:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12863:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12853:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12853:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "12715:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12743:4:11",
														"nodeType": "YulTypedName",
														"src": "12743:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "12749:5:11",
														"nodeType": "YulTypedName",
														"src": "12749:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12759:6:11",
														"nodeType": "YulTypedName",
														"src": "12759:6:11",
														"type": ""
													}
												],
												"src": "12715:169:11"
											},
											{
												"body": {
													"nativeSrc": "12970:214:11",
													"nodeType": "YulBlock",
													"src": "12970:214:11",
													"statements": [
														{
															"nativeSrc": "13103:37:11",
															"nodeType": "YulAssignment",
															"src": "13103:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13130:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13130:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "13136:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13136:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "13111:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "13111:18:11"
																},
																"nativeSrc": "13111:29:11",
																"nodeType": "YulFunctionCall",
																"src": "13111:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13103:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13103:4:11"
																}
															]
														},
														{
															"nativeSrc": "13149:29:11",
															"nodeType": "YulAssignment",
															"src": "13149:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13160:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13160:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13170:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13170:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "13173:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "13173:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "13166:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:11"
																		},
																		"nativeSrc": "13166:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13166:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13157:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13157:2:11"
																},
																"nativeSrc": "13157:21:11",
																"nodeType": "YulFunctionCall",
																"src": "13157:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "13149:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13149:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12889:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12951:4:11",
														"nodeType": "YulTypedName",
														"src": "12951:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12957:3:11",
														"nodeType": "YulTypedName",
														"src": "12957:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12965:4:11",
														"nodeType": "YulTypedName",
														"src": "12965:4:11",
														"type": ""
													}
												],
												"src": "12889:295:11"
											},
											{
												"body": {
													"nativeSrc": "13281:1303:11",
													"nodeType": "YulBlock",
													"src": "13281:1303:11",
													"statements": [
														{
															"nativeSrc": "13292:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13292:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13339:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13339:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13306:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "13306:32:11"
																},
																"nativeSrc": "13306:37:11",
																"nodeType": "YulFunctionCall",
																"src": "13306:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "13296:6:11",
																	"nodeType": "YulTypedName",
																	"src": "13296:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13428:22:11",
																"nodeType": "YulBlock",
																"src": "13428:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "13430:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13430:16:11"
																			},
																			"nativeSrc": "13430:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13430:18:11"
																		},
																		"nativeSrc": "13430:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13430:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13400:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13400:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13408:18:11",
																		"nodeType": "YulLiteral",
																		"src": "13408:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13397:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13397:2:11"
																},
																"nativeSrc": "13397:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13397:30:11"
															},
															"nativeSrc": "13394:56:11",
															"nodeType": "YulIf",
															"src": "13394:56:11"
														},
														{
															"nativeSrc": "13460:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13460:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "13506:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13506:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "13500:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "13500:5:11"
																		},
																		"nativeSrc": "13500:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13500:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "13474:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "13474:25:11"
																},
																"nativeSrc": "13474:38:11",
																"nodeType": "YulFunctionCall",
																"src": "13474:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "13464:6:11",
																	"nodeType": "YulTypedName",
																	"src": "13464:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13605:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13605:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "13611:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13611:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "13619:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13619:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "13559:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "13559:45:11"
																},
																"nativeSrc": "13559:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13559:67:11"
															},
															"nativeSrc": "13559:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "13559:67:11"
														},
														{
															"nativeSrc": "13636:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13636:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "13653:1:11",
																"nodeType": "YulLiteral",
																"src": "13653:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13640:9:11",
																	"nodeType": "YulTypedName",
																	"src": "13640:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13664:17:11",
															"nodeType": "YulAssignment",
															"src": "13664:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "13677:4:11",
																"nodeType": "YulLiteral",
																"src": "13677:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13664:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "13664:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13728:611:11",
																		"nodeType": "YulBlock",
																		"src": "13728:611:11",
																		"statements": [
																			{
																				"nativeSrc": "13742:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13742:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "13761:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "13761:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13773:4:11",
																									"nodeType": "YulLiteral",
																									"src": "13773:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13769:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "13769:3:11"
																							},
																							"nativeSrc": "13769:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "13769:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13757:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "13757:3:11"
																					},
																					"nativeSrc": "13757:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "13757:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "13746:7:11",
																						"nodeType": "YulTypedName",
																						"src": "13746:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13793:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13793:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13839:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "13839:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "13807:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "13807:31:11"
																					},
																					"nativeSrc": "13807:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "13807:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13797:6:11",
																						"nodeType": "YulTypedName",
																						"src": "13797:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13857:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13857:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13866:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13866:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13861:1:11",
																						"nodeType": "YulTypedName",
																						"src": "13861:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13925:163:11",
																					"nodeType": "YulBlock",
																					"src": "13925:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13950:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "13950:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13968:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "13968:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13973:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "13973:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13964:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "13964:3:11"
																												},
																												"nativeSrc": "13964:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "13964:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13958:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "13958:5:11"
																										},
																										"nativeSrc": "13958:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "13958:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13943:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "13943:6:11"
																								},
																								"nativeSrc": "13943:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "13943:42:11"
																							},
																							"nativeSrc": "13943:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "13943:42:11"
																						},
																						{
																							"nativeSrc": "14002:24:11",
																							"nodeType": "YulAssignment",
																							"src": "14002:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14016:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "14016:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14024:1:11",
																										"nodeType": "YulLiteral",
																										"src": "14024:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14012:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "14012:3:11"
																								},
																								"nativeSrc": "14012:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "14012:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "14002:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "14002:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "14043:31:11",
																							"nodeType": "YulAssignment",
																							"src": "14043:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "14060:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "14060:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14071:2:11",
																										"nodeType": "YulLiteral",
																										"src": "14071:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14056:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "14056:3:11"
																								},
																								"nativeSrc": "14056:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "14056:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "14043:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "14043:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13891:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "13891:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13894:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "13894:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13888:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "13888:2:11"
																					},
																					"nativeSrc": "13888:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "13888:14:11"
																				},
																				"nativeSrc": "13880:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13903:21:11",
																					"nodeType": "YulBlock",
																					"src": "13903:21:11",
																					"statements": [
																						{
																							"nativeSrc": "13905:17:11",
																							"nodeType": "YulAssignment",
																							"src": "13905:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13914:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "13914:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13917:4:11",
																										"nodeType": "YulLiteral",
																										"src": "13917:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13910:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "13910:3:11"
																								},
																								"nativeSrc": "13910:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "13910:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13905:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "13905:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13884:3:11",
																					"nodeType": "YulBlock",
																					"src": "13884:3:11",
																					"statements": []
																				},
																				"src": "13880:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "14124:156:11",
																					"nodeType": "YulBlock",
																					"src": "14124:156:11",
																					"statements": [
																						{
																							"nativeSrc": "14142:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "14142:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14169:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "14169:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14174:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "14174:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14165:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "14165:3:11"
																										},
																										"nativeSrc": "14165:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "14165:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14159:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "14159:5:11"
																								},
																								"nativeSrc": "14159:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "14159:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "14146:9:11",
																									"nodeType": "YulTypedName",
																									"src": "14146:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14209:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "14209:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "14236:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "14236:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "14251:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "14251:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "14259:4:11",
																														"nodeType": "YulLiteral",
																														"src": "14259:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "14247:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "14247:3:11"
																												},
																												"nativeSrc": "14247:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "14247:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "14217:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "14217:18:11"
																										},
																										"nativeSrc": "14217:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "14217:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14202:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "14202:6:11"
																								},
																								"nativeSrc": "14202:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "14202:64:11"
																							},
																							"nativeSrc": "14202:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "14202:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14107:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "14107:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "14116:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "14116:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14104:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "14104:2:11"
																					},
																					"nativeSrc": "14104:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "14104:19:11"
																				},
																				"nativeSrc": "14101:179:11",
																				"nodeType": "YulIf",
																				"src": "14101:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14300:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "14300:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "14314:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "14314:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "14322:1:11",
																											"nodeType": "YulLiteral",
																											"src": "14322:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "14310:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "14310:3:11"
																									},
																									"nativeSrc": "14310:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "14310:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "14326:1:11",
																									"nodeType": "YulLiteral",
																									"src": "14326:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "14306:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "14306:3:11"
																							},
																							"nativeSrc": "14306:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "14306:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14293:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "14293:6:11"
																					},
																					"nativeSrc": "14293:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "14293:36:11"
																				},
																				"nativeSrc": "14293:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "14293:36:11"
																			}
																		]
																	},
																	"nativeSrc": "13721:618:11",
																	"nodeType": "YulCase",
																	"src": "13721:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13726:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13726:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14356:222:11",
																		"nodeType": "YulBlock",
																		"src": "14356:222:11",
																		"statements": [
																			{
																				"nativeSrc": "14370:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14370:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14383:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14383:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "14374:5:11",
																						"nodeType": "YulTypedName",
																						"src": "14374:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14407:67:11",
																					"nodeType": "YulBlock",
																					"src": "14407:67:11",
																					"statements": [
																						{
																							"nativeSrc": "14425:35:11",
																							"nodeType": "YulAssignment",
																							"src": "14425:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14444:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "14444:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14449:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "14449:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14440:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "14440:3:11"
																										},
																										"nativeSrc": "14440:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "14440:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14434:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "14434:5:11"
																								},
																								"nativeSrc": "14434:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "14434:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "14425:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "14425:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "14400:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "14400:6:11"
																				},
																				"nativeSrc": "14397:77:11",
																				"nodeType": "YulIf",
																				"src": "14397:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14494:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "14494:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "14553:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "14553:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "14560:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "14560:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "14500:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "14500:52:11"
																							},
																							"nativeSrc": "14500:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "14500:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14487:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "14487:6:11"
																					},
																					"nativeSrc": "14487:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "14487:81:11"
																				},
																				"nativeSrc": "14487:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "14487:81:11"
																			}
																		]
																	},
																	"nativeSrc": "14348:230:11",
																	"nodeType": "YulCase",
																	"src": "14348:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13701:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13701:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13709:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13709:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13698:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "13698:2:11"
																},
																"nativeSrc": "13698:14:11",
																"nodeType": "YulFunctionCall",
																"src": "13698:14:11"
															},
															"nativeSrc": "13691:887:11",
															"nodeType": "YulSwitch",
															"src": "13691:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "13189:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13270:4:11",
														"nodeType": "YulTypedName",
														"src": "13270:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "13276:3:11",
														"nodeType": "YulTypedName",
														"src": "13276:3:11",
														"type": ""
													}
												],
												"src": "13189:1395:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101a7575f3560e01c80635c975abb116100f75780639d888e8611610095578063cb177b1e1161006f578063cb177b1e14610473578063dd62ed3e1461048f578063f2fde38b146104bf578063fe575a87146104db576101a7565b80639d888e8614610409578063a9059cbb14610427578063b836080614610457576101a7565b80638129fc1c116100d15780638129fc1c146103b95780638456cb59146103c35780638da5cb5b146103cd57806395d89b41146103eb576101a7565b80635c975abb1461036157806370a082311461037f578063715018a6146103af576101a7565b806323b872dd116101645780634004c7a21161013e5780634004c7a2146102db57806340c10f191461030b57806342966c681461032757806350f7c20414610343576101a7565b806323b872dd14610283578063313ce567146102b35780633f4ba83a146102d1576101a7565b806306fdde03146101ab578063095ea7b3146101c9578063099db017146101f957806318160ddd1461022957806318ab42c51461024757806320fc56a614610265575b5f80fd5b6101b361050b565b6040516101c09190611ef5565b60405180910390f35b6101e360048036038101906101de9190611fa6565b6105a9565b6040516101f09190611ffe565b60405180910390f35b610213600480360381019061020e9190612017565b6105cb565b6040516102209190611ffe565b60405180910390f35b61023161061d565b60405161023e9190612051565b60405180910390f35b61024f610634565b60405161025c9190612051565b60405180910390f35b61026d610642565b60405161027a9190612051565b60405180910390f35b61029d6004803603810190610298919061206a565b610650565b6040516102aa9190611ffe565b60405180910390f35b6102bb61067e565b6040516102c891906120d5565b60405180910390f35b6102d9610686565b005b6102f560048036038101906102f09190612017565b610698565b6040516103029190611ffe565b60405180910390f35b61032560048036038101906103209190611fa6565b6106b5565b005b610341600480360381019061033c91906120ee565b6108d1565b005b61034b6109c7565b6040516103589190612051565b60405180910390f35b6103696109cd565b6040516103769190611ffe565b60405180910390f35b61039960048036038101906103949190612017565b6109ef565b6040516103a69190612051565b60405180910390f35b6103b7610a42565b005b6103c1610a55565b005b6103cb610d2d565b005b6103d5610d3f565b6040516103e29190612128565b60405180910390f35b6103f3610d74565b6040516104009190611ef5565b60405180910390f35b610411610e12565b60405161041e9190612051565b60405180910390f35b610441600480360381019061043c9190611fa6565b610e18565b60405161044e9190611ffe565b60405180910390f35b610471600480360381019061046c919061216b565b610e3a565b005b61048d6004803603810190610488919061216b565b610f4d565b005b6104a960048036038101906104a491906121a9565b611060565b6040516104b69190612051565b60405180910390f35b6104d960048036038101906104d49190612017565b6110f0565b005b6104f560048036038101906104f09190612017565b611174565b6040516105029190611ffe565b60405180910390f35b60605f610516611191565b905080600301805461052790612214565b80601f016020809104026020016040519081016040528092919081815260200182805461055390612214565b801561059e5780601f106105755761010080835404028352916020019161059e565b820191905f5260205f20905b81548152906001019060200180831161058157829003601f168201915b505050505091505090565b5f806105b36111b8565b90506105c08185856111bf565b600191505092915050565b5f60355f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80610627611191565b9050806002015491505090565b69d3c21bcecceda100000081565b6969e10de76676d080000081565b5f8061065a6111b8565b90506106678582856111d1565b610672858585611263565b60019150509392505050565b5f6012905090565b61068e611353565b6106966113da565b565b6035602052805f5260405f205f915054906101000a900460ff1681565b6106bd611448565b60355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661073d576040517fcd2e8e8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a2576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81036107db576040517f2160733900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b69d3c21bcecceda100000081111561081f576040517fd5c0322600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6033548161082b61061d565b6108359190612271565b111561086d576040517fa2dda64700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108778282611495565b8173ffffffffffffffffffffffffffffffffffffffff167fe98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147826040516108bd9190612051565b60405180910390a26108cd611514565b5050565b6108d9611448565b5f8103610912576040517f2160733900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6969e10de76676d0800000811115610956576040517fb8e7123600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109676109616111b8565b8261151d565b61096f6111b8565b73ffffffffffffffffffffffffffffffffffffffff167fe510c8c53e4242bccd9841e6f1f5fe02545bdad7b524c54c8ff90ffda089e278826040516109b49190612051565b60405180910390a26109c4611514565b50565b60335481565b5f806109d761159c565b9050805f015f9054906101000a900460ff1691505090565b5f806109f9611191565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610a4a611353565b610a535f6115c3565b565b5f610a5e611694565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610aa65750825b90505f60018367ffffffffffffffff16148015610ad957505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610ae7575080155b15610b1e576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610b6b576001855f0160086101000a81548160ff0219169083151502179055505b610bdf6040518060400160405280600981526020017f536b7920546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f534b5900000000000000000000000000000000000000000000000000000000008152506116bb565b610be8336116d1565b610bf06116e5565b610bf86116f7565b6b033b2e3c9fd0803ce80000006033819055506001603281905550610c28336a52b7d2dcc80cd2e4000000611495565b600160355f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f0d0ce8757673482ba416ece0cb058dacd500bb9d737793d5f34ad5548dd4e2fb6001604051610cc49190611ffe565b60405180910390a28315610d26575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610d1d91906122f9565b60405180910390a15b5050505050565b610d35611353565b610d3d611709565b565b5f80610d49611778565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610d7f611191565b9050806004018054610d9090612214565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbc90612214565b8015610e075780601f10610dde57610100808354040283529160200191610e07565b820191905f5260205f20905b815481529060010190602001808311610dea57829003601f168201915b505050505091505090565b60325481565b5f80610e226111b8565b9050610e2f818585611263565b600191505092915050565b610e42611353565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea7576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f92d364d140f902817e5eaa71cedfe20bae2a3c66a2725cee3d9a51d73f052fb682604051610f419190611ffe565b60405180910390a25050565b610f55611353565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fba576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060355f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f0d0ce8757673482ba416ece0cb058dacd500bb9d737793d5f34ad5548dd4e2fb826040516110549190611ffe565b60405180910390a25050565b5f8061106a611191565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6110f8611353565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611168575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161115f9190612128565b60405180910390fd5b611171816115c3565b50565b6034602052805f5260405f205f915054906101000a900460ff1681565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6111cc838383600161179f565b505050565b5f6111dc8484611060565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461125d578181101561124e578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161124593929190612312565b60405180910390fd5b61125c84848484035f61179f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d3575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112ca9190612128565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611343575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161133a9190612128565b60405180910390fd5b61134e83838361197c565b505050565b61135b6111b8565b73ffffffffffffffffffffffffffffffffffffffff16611379610d3f565b73ffffffffffffffffffffffffffffffffffffffff16146113d85761139c6111b8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016113cf9190612128565b60405180910390fd5b565b6113e2611a5e565b5f6113eb61159c565b90505f815f015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6114306111b8565b60405161143d9190612128565b60405180910390a150565b60025f540361148c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148390612391565b60405180910390fd5b60025f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611505575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114fc9190612128565b60405180910390fd5b6115105f838361197c565b5050565b60015f81905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361158d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115849190612128565b60405180910390fd5b611598825f8361197c565b5050565b5f7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b5f6115cc611778565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6116c3611a9e565b6116cd8282611ade565b5050565b6116d9611a9e565b6116e281611b1a565b50565b6116ed611a9e565b6116f5611b9e565b565b6116ff611a9e565b611707611bce565b565b611711611bdf565b5f61171a61159c565b90506001815f015f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117606111b8565b60405161176d9190612128565b60405180910390a150565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f6117a8611191565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361181a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118119190612128565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361188a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118819190612128565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611975578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161196c9190612051565b60405180910390a35b5050505050565b60345f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680611a17575060345f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15611a4e576040517fab73372a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a59838383611c20565b505050565b611a666109cd565b611a9c576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611aa6611c38565b611adc576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ae6611a9e565b5f611aef611191565b905082816003019081611b029190612570565b5081816004019081611b149190612570565b50505050565b611b22611a9e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b92575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611b899190612128565b60405180910390fd5b611b9b816115c3565b50565b611ba6611a9e565b5f611baf61159c565b90505f815f015f6101000a81548160ff02191690831515021790555050565b611bd6611a9e565b60015f81905550565b611be76109cd565b15611c1e576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c28611bdf565b611c33838383611c56565b505050565b5f611c41611694565b5f0160089054906101000a900460ff16905090565b5f611c5f611191565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611cb35781816002015f828254611ca79190612271565b92505081905550611d85565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611d3e578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611d3593929190612312565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611dce5781816002015f8282540392505081905550611e1a565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611e779190612051565b60405180910390a350505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611ec782611e85565b611ed18185611e8f565b9350611ee1818560208601611e9f565b611eea81611ead565b840191505092915050565b5f6020820190508181035f830152611f0d8184611ebd565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f4282611f19565b9050919050565b611f5281611f38565b8114611f5c575f80fd5b50565b5f81359050611f6d81611f49565b92915050565b5f819050919050565b611f8581611f73565b8114611f8f575f80fd5b50565b5f81359050611fa081611f7c565b92915050565b5f8060408385031215611fbc57611fbb611f15565b5b5f611fc985828601611f5f565b9250506020611fda85828601611f92565b9150509250929050565b5f8115159050919050565b611ff881611fe4565b82525050565b5f6020820190506120115f830184611fef565b92915050565b5f6020828403121561202c5761202b611f15565b5b5f61203984828501611f5f565b91505092915050565b61204b81611f73565b82525050565b5f6020820190506120645f830184612042565b92915050565b5f805f6060848603121561208157612080611f15565b5b5f61208e86828701611f5f565b935050602061209f86828701611f5f565b92505060406120b086828701611f92565b9150509250925092565b5f60ff82169050919050565b6120cf816120ba565b82525050565b5f6020820190506120e85f8301846120c6565b92915050565b5f6020828403121561210357612102611f15565b5b5f61211084828501611f92565b91505092915050565b61212281611f38565b82525050565b5f60208201905061213b5f830184612119565b92915050565b61214a81611fe4565b8114612154575f80fd5b50565b5f8135905061216581612141565b92915050565b5f806040838503121561218157612180611f15565b5b5f61218e85828601611f5f565b925050602061219f85828601612157565b9150509250929050565b5f80604083850312156121bf576121be611f15565b5b5f6121cc85828601611f5f565b92505060206121dd85828601611f5f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061222b57607f821691505b60208210810361223e5761223d6121e7565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61227b82611f73565b915061228683611f73565b925082820190508082111561229e5761229d612244565b5b92915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6122e36122de6122d9846122a4565b6122c0565b6122ad565b9050919050565b6122f3816122c9565b82525050565b5f60208201905061230c5f8301846122ea565b92915050565b5f6060820190506123255f830186612119565b6123326020830185612042565b61233f6040830184612042565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61237b601f83611e8f565b915061238682612347565b602082019050919050565b5f6020820190508181035f8301526123a88161236f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826123fd565b61244286836123fd565b95508019841693508086168417925050509392505050565b5f61247461246f61246a84611f73565b6122c0565b611f73565b9050919050565b5f819050919050565b61248d8361245a565b6124a16124998261247b565b848454612409565b825550505050565b5f90565b6124b56124a9565b6124c0818484612484565b505050565b5b818110156124e3576124d85f826124ad565b6001810190506124c6565b5050565b601f821115612528576124f9816123dc565b612502846123ee565b81016020851015612511578190505b61252561251d856123ee565b8301826124c5565b50505b505050565b5f82821c905092915050565b5f6125485f198460080261252d565b1980831691505092915050565b5f6125608383612539565b9150826002028217905092915050565b61257982611e85565b67ffffffffffffffff811115612592576125916123af565b5b61259c8254612214565b6125a78282856124e7565b5f60209050601f8311600181146125d8575f84156125c6578287015190505b6125d08582612555565b865550612637565b601f1984166125e6866123dc565b5f5b8281101561260d578489015182556001820191506020850194506020810190506125e8565b8683101561262a5784890151612626601f891682612539565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220884f0a867920f016f29324384ab73e058830436a3f73c2cb5749230dc567106864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0x9D888E86 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCB177B1E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCB177B1E EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BF JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x4DB JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x9D888E86 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB8360806 EQ PUSH2 0x457 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x8129FC1C GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3EB JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AF JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x4004C7A2 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x4004C7A2 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x50F7C204 EQ PUSH2 0x343 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2D1 JUMPI PUSH2 0x1A7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x99DB017 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x18AB42C5 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x20FC56A6 EQ PUSH2 0x265 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B3 PUSH2 0x50B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0xA42 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xA55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH2 0xD2D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x216B JUMP JUMPDEST PUSH2 0xF4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x2017 JUMP JUMPDEST PUSH2 0x1174 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x516 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x527 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x553 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x575 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x581 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5B3 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C0 DUP2 DUP6 DUP6 PUSH2 0x11BF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x35 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x627 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x65A PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0x667 DUP6 DUP3 DUP6 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x672 DUP6 DUP6 DUP6 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x68E PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x696 PUSH2 0x13DA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x6BD PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD2E8E8000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x2160733900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 GT ISZERO PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD5C0322600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD DUP2 PUSH2 0x82B PUSH2 0x61D JUMP JUMPDEST PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST GT ISZERO PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2DDA64700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x877 DUP3 DUP3 PUSH2 0x1495 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8BD SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x8CD PUSH2 0x1514 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0x1448 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2160733900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 GT ISZERO PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB8E7123600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x967 PUSH2 0x961 PUSH2 0x11B8 JUMP JUMPDEST DUP3 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x96F PUSH2 0x11B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE510C8C53E4242BCCD9841E6F1F5FE02545BDAD7B524C54C8FF90FFDA089E278 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9B4 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9C4 PUSH2 0x1514 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D7 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9F9 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4A PUSH2 0x1353 JUMP JUMPDEST PUSH2 0xA53 PUSH0 PUSH2 0x15C3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA5E PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAA6 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAD9 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB6B JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBDF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536B7920546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534B590000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x16BB JUMP JUMPDEST PUSH2 0xBE8 CALLER PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0xBF0 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0xBF8 PUSH2 0x16F7 JUMP JUMPDEST PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x32 DUP2 SWAP1 SSTORE POP PUSH2 0xC28 CALLER PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x35 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD0CE8757673482BA416ECE0CB058DACD500BB9D737793D5F34AD5548DD4E2FB PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xCC4 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 ISZERO PUSH2 0xD26 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD1D SWAP2 SWAP1 PUSH2 0x22F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD35 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0xD3D PUSH2 0x1709 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD49 PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xD7F PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xD90 SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDBC SWAP1 PUSH2 0x2214 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDDE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE22 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP PUSH2 0xE2F DUP2 DUP6 DUP6 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE42 PUSH2 0x1353 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x92D364D140F902817E5EAA71CEDFE20BAE2A3C66A2725CEE3D9A51D73F052FB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0xF41 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xF55 PUSH2 0x1353 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD0CE8757673482BA416ECE0CB058DACD500BB9D737793D5F34AD5548DD4E2FB DUP3 PUSH1 0x40 MLOAD PUSH2 0x1054 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x106A PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10F8 PUSH2 0x1353 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1168 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1171 DUP2 PUSH2 0x15C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11CC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x179F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11DC DUP5 DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x125D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x124E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1245 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x125C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x179F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1343 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133A SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x134E DUP4 DUP4 DUP4 PUSH2 0x197C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x135B PUSH2 0x11B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1379 PUSH2 0xD3F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13D8 JUMPI PUSH2 0x139C PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x13E2 PUSH2 0x1A5E JUMP JUMPDEST PUSH0 PUSH2 0x13EB PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1430 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1505 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FC SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1510 PUSH0 DUP4 DUP4 PUSH2 0x197C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x158D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1584 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1598 DUP3 PUSH0 DUP4 PUSH2 0x197C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x15CC PUSH2 0x1778 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16C3 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x16CD DUP3 DUP3 PUSH2 0x1ADE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x16D9 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x16E2 DUP2 PUSH2 0x1B1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x16ED PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x16F5 PUSH2 0x1B9E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x16FF PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x1707 PUSH2 0x1BCE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1711 PUSH2 0x1BDF JUMP JUMPDEST PUSH0 PUSH2 0x171A PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1760 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176D SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x17A8 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x181A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1881 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1975 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x196C SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x34 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1A17 JUMPI POP PUSH1 0x34 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1A4E JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB73372A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A59 DUP4 DUP4 DUP4 PUSH2 0x1C20 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A66 PUSH2 0x9CD JUMP JUMPDEST PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1AA6 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x1ADC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1AE6 PUSH2 0x1A9E JUMP JUMPDEST PUSH0 PUSH2 0x1AEF PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1B02 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1B14 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B22 PUSH2 0x1A9E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B92 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B89 SWAP2 SWAP1 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B9B DUP2 PUSH2 0x15C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1BA6 PUSH2 0x1A9E JUMP JUMPDEST PUSH0 PUSH2 0x1BAF PUSH2 0x159C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1BD6 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BE7 PUSH2 0x9CD JUMP JUMPDEST ISZERO PUSH2 0x1C1E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C28 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x1C33 DUP4 DUP4 DUP4 PUSH2 0x1C56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C41 PUSH2 0x1694 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1C5F PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB3 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CA7 SWAP2 SWAP1 PUSH2 0x2271 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D85 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1D3E JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D35 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DCE JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1E1A JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E77 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC7 DUP3 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x1ED1 DUP2 DUP6 PUSH2 0x1E8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1EAD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0D DUP2 DUP5 PUSH2 0x1EBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F42 DUP3 PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F52 DUP2 PUSH2 0x1F38 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F6D DUP2 PUSH2 0x1F49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F85 DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA0 DUP2 PUSH2 0x1F7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBC JUMPI PUSH2 0x1FBB PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FDA DUP6 DUP3 DUP7 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2011 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202C JUMPI PUSH2 0x202B PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2039 DUP5 DUP3 DUP6 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x204B DUP2 PUSH2 0x1F73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2064 PUSH0 DUP4 ADD DUP5 PUSH2 0x2042 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208E DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209F DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20B0 DUP7 DUP3 DUP8 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CF DUP2 PUSH2 0x20BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x20C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2103 JUMPI PUSH2 0x2102 PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2110 DUP5 DUP3 DUP6 ADD PUSH2 0x1F92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2122 DUP2 PUSH2 0x1F38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213B PUSH0 DUP4 ADD DUP5 PUSH2 0x2119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x214A DUP2 PUSH2 0x1FE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2165 DUP2 PUSH2 0x2141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2181 JUMPI PUSH2 0x2180 PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x218E DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x219F DUP6 DUP3 DUP7 ADD PUSH2 0x2157 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21BF JUMPI PUSH2 0x21BE PUSH2 0x1F15 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21CC DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21DD DUP6 DUP3 DUP7 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x222B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x223E JUMPI PUSH2 0x223D PUSH2 0x21E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x227B DUP3 PUSH2 0x1F73 JUMP JUMPDEST SWAP2 POP PUSH2 0x2286 DUP4 PUSH2 0x1F73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x229E JUMPI PUSH2 0x229D PUSH2 0x2244 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22E3 PUSH2 0x22DE PUSH2 0x22D9 DUP5 PUSH2 0x22A4 JUMP JUMPDEST PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F3 DUP2 PUSH2 0x22C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x230C PUSH0 DUP4 ADD DUP5 PUSH2 0x22EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2325 PUSH0 DUP4 ADD DUP7 PUSH2 0x2119 JUMP JUMPDEST PUSH2 0x2332 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2042 JUMP JUMPDEST PUSH2 0x233F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2042 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x237B PUSH1 0x1F DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2386 DUP3 PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A8 DUP2 PUSH2 0x236F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2438 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x2442 DUP7 DUP4 PUSH2 0x23FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2474 PUSH2 0x246F PUSH2 0x246A DUP5 PUSH2 0x1F73 JUMP JUMPDEST PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x1F73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x248D DUP4 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x24A1 PUSH2 0x2499 DUP3 PUSH2 0x247B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2409 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x24B5 PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x24C0 DUP2 DUP5 DUP5 PUSH2 0x2484 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24E3 JUMPI PUSH2 0x24D8 PUSH0 DUP3 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x24F9 DUP2 PUSH2 0x23DC JUMP JUMPDEST PUSH2 0x2502 DUP5 PUSH2 0x23EE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2511 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2525 PUSH2 0x251D DUP6 PUSH2 0x23EE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24C5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2548 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x252D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2560 DUP4 DUP4 PUSH2 0x2539 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2579 DUP3 PUSH2 0x1E85 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2592 JUMPI PUSH2 0x2591 PUSH2 0x23AF JUMP JUMPDEST JUMPDEST PUSH2 0x259C DUP3 SLOAD PUSH2 0x2214 JUMP JUMPDEST PUSH2 0x25A7 DUP3 DUP3 DUP6 PUSH2 0x24E7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25D8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x25C6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25D0 DUP6 DUP3 PUSH2 0x2555 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2637 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x25E6 DUP7 PUSH2 0x23DC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x260D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25E8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x262A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2626 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2539 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x4F EXP DUP7 PUSH26 0x20F016F29324384AB73E058830436A3F73C2CB5749230DC56710 PUSH9 0x64736F6C634300081A STOP CALLER ",
							"sourceMap": "636:5044:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5566:112:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3896:152:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1161:59:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1264:57;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5988:244:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3754:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5346:65:10;;;:::i;:::-;;1442:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3486:501;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4072:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1095:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2692:145:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;2266:513:10;;;:::i;:::-;;5214:61;;;:::i;:::-;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:29:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4472:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4895:242:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4511:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4708:195:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1391:45:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2716:144:3;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;5566:112:10:-;5627:4;5650:12;:21;5663:7;5650:21;;;;;;;;;;;;;;;;;;;;;;;;;5643:28;;5566:112;;;:::o;3896:152:3:-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;1161:59:10:-;1205:15;1161:59;:::o;1264:57::-;1308:13;1264:57;:::o;5988:244:3:-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;3754:82::-;3803:5;3827:2;3820:9;;3754:82;:::o;5346:65:10:-;2334:13:0;:11;:13::i;:::-;5394:10:10::1;:8;:10::i;:::-;5346:65::o:0;1442:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;3486:501::-;2526:21:2;:19;:21::i;:::-;3572:12:10::1;:24;3585:10;3572:24;;;;;;;;;;;;;;;;;;;;;;;;;3567:59;;3605:21;;;;;;;;;;;;;;3567:59;3661:1;3640:23;;:9;:23;;::::0;3636:52:::1;;3672:16;;;;;;;;;;;;;;3636:52;3712:1;3702:6;:11:::0;3698:44:::1;;3722:20;;;;;;;;;;;;;;3698:44;1205:15;3756:6;:26;3752:57;;;3791:18;;;;;;;;;;;;;;3752:57;3848:14;;3839:6;3823:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:39;3819:70;;;3871:18;;;;;;;;;;;;;;3819:70;3908:24;3914:9;3925:6;3908:5;:24::i;:::-;3962:9;3947:33;;;3973:6;3947:33;;;;;;:::i;:::-;;;;;;;;2568:20:2::0;:18;:20::i;:::-;3486:501:10;;:::o;4072:283::-;2526:21:2;:19;:21::i;:::-;4154:1:10::1;4144:6;:11:::0;4140:44:::1;;4164:20;;;;;;;;;;;;;;4140:44;1308:13;4198:6;:26;4194:57;;;4233:18;;;;;;;;;;;;;;4194:57;4270:27;4276:12;:10;:12::i;:::-;4290:6;4270:5;:27::i;:::-;4327:12;:10;:12::i;:::-;4312:36;;;4341:6;4312:36;;;;;;:::i;:::-;;;;;;;;2568:20:2::0;:18;:20::i;:::-;4072:283:10;:::o;1095:29::-;;;;:::o;2692:145:6:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;4106:171:3:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2266:513:10:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2317:32:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:32::i;:::-;2359:26;2374:10;2359:14;:26::i;:::-;2395:22;:20;:22::i;:::-;2427:24;:22;:24::i;:::-;953:19;2470:14;:33;;;;1048:1;2513:14;:32;;;;2600:33;2606:10;862:17;2600:5;:33::i;:::-;2718:4;2691:12;:24;2704:10;2691:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2755:10;2737:35;;;2767:4;2737:35;;;;;;:::i;:::-;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;2266:513:10:o;5214:61::-;2334:13:0;:11;:13::i;:::-;5260:8:10::1;:6;:8::i;:::-;5214:61::o:0;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:3:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;1060:29:10:-;;;;:::o;4472:178:3:-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;4895:242:10:-;2334:13:0;:11;:13::i;:::-;5008:1:10::1;4989:21;;:7;:21;;::::0;4985:50:::1;;5019:16;;;;;;;;;;;;;;4985:50;5070:6;5045:13;:22;5059:7;5045:22;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;5114:7;5091:39;;;5123:6;5091:39;;;;;;:::i;:::-;;;;;;;;4895:242:::0;;:::o;4511:228::-;2334:13:0;:11;:13::i;:::-;4616:1:10::1;4597:21;;:7;:21;;::::0;4593:50:::1;;4627:16;;;;;;;;;;;;;;4593:50;4677:6;4653:12;:21;4666:7;4653:21;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4716:7;4698:34;;;4725:6;4698:34;;;;;;:::i;:::-;;;;;;;;4511:228:::0;;:::o;4708:195:3:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1391:45:10:-;;;;;;;;;;;;;;;;;;;;;;:::o;1947:153:3:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;10001:128:3:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;11745:477::-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;11930:17;11910:16;:37;11906:310;;11986:5;11967:16;:24;11963:130;;;12045:7;12054:16;12072:5;12018:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11963:130;12134:57;12143:5;12150:7;12178:5;12159:16;:24;12185:5;12134:8;:57::i;:::-;11906:310;11834:388;11745:477;;;:::o;6605:300::-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3674:178:6:-;2563:16;:14;:16::i;:::-;3732:25:::1;3760:21;:19;:21::i;:::-;3732:49;;3803:5;3791:1;:9;;;:17;;;;;;;;;;;;;;;;;;3823:22;3832:12;:10;:12::i;:::-;3823:22;;;;;;:::i;:::-;;;;;;;;3722:130;3674:178::o:0;2601:287:2:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;8733:208:3:-;8822:1;8803:21;;:7;:21;;;8799:91;;8876:1;8847:32;;;;;;;;;;;:::i;:::-;;;;;;;;8799:91;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;:::-;8733:208;;:::o;2894:209:2:-;1808:1;3074:7;:22;;;;2894:209::o;9259:206:3:-;9348:1;9329:21;;:7;:21;;;9325:89;;9400:1;9373:30;;;;;;;;;;;:::i;:::-;;;;;;;;9325:89;9423:35;9431:7;9448:1;9452:5;9423:7;:35::i;:::-;9259:206;;:::o;1147:162:6:-;1200:25;1270:23;1260:33;;1147:162;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:3:-;6931:20:1;:18;:20::i;:::-;2384:38:3::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1149:102:4:-;6931:20:1;:18;:20::i;:::-;1217:27:4::1;:25;:27::i;:::-;1149:102::o:0;1889:111:2:-;6931:20:1;:18;:20::i;:::-;1959:34:2::1;:32;:34::i;:::-;1889:111::o:0;3366:176:6:-;2316:19;:17;:19::i;:::-;3425:25:::1;3453:21;:19;:21::i;:::-;3425:49;;3496:4;3484:1;:9;;;:16;;;;;;;;;;;;;;;;;;3515:20;3522:12;:10;:12::i;:::-;3515:20;;;;;;:::i;:::-;;;;;;;;3415:127;3366:176::o:0;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;10976:487:3:-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;2975:362:10:-;3174:13;:19;3188:4;3174:19;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;3197:13;:17;3211:2;3197:17;;;;;;;;;;;;;;;;;;;;;;;;;3174:40;3170:75;;;3223:22;;;;;;;;;;;;;;3170:75;3300:30;3314:4;3320:2;3324:5;3300:13;:30::i;:::-;2975:362;;;:::o;3105:126:6:-;3168:8;:6;:8::i;:::-;3163:62;;3199:15;;;;;;;;;;;;;;3163:62;3105:126::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:3:-;6931:20:1;:18;:20::i;:::-;2547:22:3::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1939:156:6:-;6931:20:1;:18;:20::i;:::-;2012:25:6::1;2040:21;:19;:21::i;:::-;2012:49;;2083:5;2071:1;:9;;;:17;;;;;;;;;;;;;;;;;;2002:93;1939:156::o:0;2006:109:2:-;6931:20:1;:18;:20::i;:::-;1808:1:2::1;2086:7;:22;;;;2006:109::o:0;2905:128:6:-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;1463:145:4:-;2316:19:6;:17;:19::i;:::-;1571:30:4::1;1585:4;1591:2;1595:5;1571:13;:30::i;:::-;1463:145:::0;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7220:1170:3:-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:116::-;5838:21;5853:5;5838:21;:::i;:::-;5831:5;5828:32;5818:60;;5874:1;5871;5864:12;5818:60;5768:116;:::o;5890:133::-;5933:5;5971:6;5958:20;5949:29;;5987:30;6011:5;5987:30;:::i;:::-;5890:133;;;;:::o;6029:468::-;6094:6;6102;6151:2;6139:9;6130:7;6126:23;6122:32;6119:119;;;6157:79;;:::i;:::-;6119:119;6277:1;6302:53;6347:7;6338:6;6327:9;6323:22;6302:53;:::i;:::-;6292:63;;6248:117;6404:2;6430:50;6472:7;6463:6;6452:9;6448:22;6430:50;:::i;:::-;6420:60;;6375:115;6029:468;;;;;:::o;6503:474::-;6571:6;6579;6628:2;6616:9;6607:7;6603:23;6599:32;6596:119;;;6634:79;;:::i;:::-;6596:119;6754:1;6779:53;6824:7;6815:6;6804:9;6800:22;6779:53;:::i;:::-;6769:63;;6725:117;6881:2;6907:53;6952:7;6943:6;6932:9;6928:22;6907:53;:::i;:::-;6897:63;;6852:118;6503:474;;;;;:::o;6983:180::-;7031:77;7028:1;7021:88;7128:4;7125:1;7118:15;7152:4;7149:1;7142:15;7169:320;7213:6;7250:1;7244:4;7240:12;7230:22;;7297:1;7291:4;7287:12;7318:18;7308:81;;7374:4;7366:6;7362:17;7352:27;;7308:81;7436:2;7428:6;7425:14;7405:18;7402:38;7399:84;;7455:18;;:::i;:::-;7399:84;7220:269;7169:320;;;:::o;7495:180::-;7543:77;7540:1;7533:88;7640:4;7637:1;7630:15;7664:4;7661:1;7654:15;7681:191;7721:3;7740:20;7758:1;7740:20;:::i;:::-;7735:25;;7774:20;7792:1;7774:20;:::i;:::-;7769:25;;7817:1;7814;7810:9;7803:16;;7838:3;7835:1;7832:10;7829:36;;;7845:18;;:::i;:::-;7829:36;7681:191;;;;:::o;7878:85::-;7923:7;7952:5;7941:16;;7878:85;;;:::o;7969:101::-;8005:7;8045:18;8038:5;8034:30;8023:41;;7969:101;;;:::o;8076:60::-;8104:3;8125:5;8118:12;;8076:60;;;:::o;8142:156::-;8199:9;8232:60;8249:42;8258:32;8284:5;8258:32;:::i;:::-;8249:42;:::i;:::-;8232:60;:::i;:::-;8219:73;;8142:156;;;:::o;8304:145::-;8398:44;8436:5;8398:44;:::i;:::-;8393:3;8386:57;8304:145;;:::o;8455:236::-;8555:4;8593:2;8582:9;8578:18;8570:26;;8606:78;8681:1;8670:9;8666:17;8657:6;8606:78;:::i;:::-;8455:236;;;;:::o;8697:442::-;8846:4;8884:2;8873:9;8869:18;8861:26;;8897:71;8965:1;8954:9;8950:17;8941:6;8897:71;:::i;:::-;8978:72;9046:2;9035:9;9031:18;9022:6;8978:72;:::i;:::-;9060;9128:2;9117:9;9113:18;9104:6;9060:72;:::i;:::-;8697:442;;;;;;:::o;9145:181::-;9285:33;9281:1;9273:6;9269:14;9262:57;9145:181;:::o;9332:366::-;9474:3;9495:67;9559:2;9554:3;9495:67;:::i;:::-;9488:74;;9571:93;9660:3;9571:93;:::i;:::-;9689:2;9684:3;9680:12;9673:19;;9332:366;;;:::o;9704:419::-;9870:4;9908:2;9897:9;9893:18;9885:26;;9957:9;9951:4;9947:20;9943:1;9932:9;9928:17;9921:47;9985:131;10111:4;9985:131;:::i;:::-;9977:139;;9704:419;;;:::o;10129:180::-;10177:77;10174:1;10167:88;10274:4;10271:1;10264:15;10298:4;10295:1;10288:15;10315:141;10364:4;10387:3;10379:11;;10410:3;10407:1;10400:14;10444:4;10441:1;10431:18;10423:26;;10315:141;;;:::o;10462:93::-;10499:6;10546:2;10541;10534:5;10530:14;10526:23;10516:33;;10462:93;;;:::o;10561:107::-;10605:8;10655:5;10649:4;10645:16;10624:37;;10561:107;;;;:::o;10674:393::-;10743:6;10793:1;10781:10;10777:18;10816:97;10846:66;10835:9;10816:97;:::i;:::-;10934:39;10964:8;10953:9;10934:39;:::i;:::-;10922:51;;11006:4;11002:9;10995:5;10991:21;10982:30;;11055:4;11045:8;11041:19;11034:5;11031:30;11021:40;;10750:317;;10674:393;;;;;:::o;11073:142::-;11123:9;11156:53;11174:34;11183:24;11201:5;11183:24;:::i;:::-;11174:34;:::i;:::-;11156:53;:::i;:::-;11143:66;;11073:142;;;:::o;11221:75::-;11264:3;11285:5;11278:12;;11221:75;;;:::o;11302:269::-;11412:39;11443:7;11412:39;:::i;:::-;11473:91;11522:41;11546:16;11522:41;:::i;:::-;11514:6;11507:4;11501:11;11473:91;:::i;:::-;11467:4;11460:105;11378:193;11302:269;;;:::o;11577:73::-;11622:3;11577:73;:::o;11656:189::-;11733:32;;:::i;:::-;11774:65;11832:6;11824;11818:4;11774:65;:::i;:::-;11709:136;11656:189;;:::o;11851:186::-;11911:120;11928:3;11921:5;11918:14;11911:120;;;11982:39;12019:1;12012:5;11982:39;:::i;:::-;11955:1;11948:5;11944:13;11935:22;;11911:120;;;11851:186;;:::o;12043:543::-;12144:2;12139:3;12136:11;12133:446;;;12178:38;12210:5;12178:38;:::i;:::-;12262:29;12280:10;12262:29;:::i;:::-;12252:8;12248:44;12445:2;12433:10;12430:18;12427:49;;;12466:8;12451:23;;12427:49;12489:80;12545:22;12563:3;12545:22;:::i;:::-;12535:8;12531:37;12518:11;12489:80;:::i;:::-;12148:431;;12133:446;12043:543;;;:::o;12592:117::-;12646:8;12696:5;12690:4;12686:16;12665:37;;12592:117;;;;:::o;12715:169::-;12759:6;12792:51;12840:1;12836:6;12828:5;12825:1;12821:13;12792:51;:::i;:::-;12788:56;12873:4;12867;12863:15;12853:25;;12766:118;12715:169;;;;:::o;12889:295::-;12965:4;13111:29;13136:3;13130:4;13111:29;:::i;:::-;13103:37;;13173:3;13170:1;13166:11;13160:4;13157:21;13149:29;;12889:295;;;;:::o;13189:1395::-;13306:37;13339:3;13306:37;:::i;:::-;13408:18;13400:6;13397:30;13394:56;;;13430:18;;:::i;:::-;13394:56;13474:38;13506:4;13500:11;13474:38;:::i;:::-;13559:67;13619:6;13611;13605:4;13559:67;:::i;:::-;13653:1;13677:4;13664:17;;13709:2;13701:6;13698:14;13726:1;13721:618;;;;14383:1;14400:6;14397:77;;;14449:9;14444:3;14440:19;14434:26;14425:35;;14397:77;14500:67;14560:6;14553:5;14500:67;:::i;:::-;14494:4;14487:81;14356:222;13691:887;;13721:618;13773:4;13769:9;13761:6;13757:22;13807:37;13839:4;13807:37;:::i;:::-;13866:1;13880:208;13894:7;13891:1;13888:14;13880:208;;;13973:9;13968:3;13964:19;13958:26;13950:6;13943:42;14024:1;14016:6;14012:14;14002:24;;14071:2;14060:9;14056:18;14043:31;;13917:4;13914:1;13910:12;13905:17;;13880:208;;;14116:6;14107:7;14104:19;14101:179;;;14174:9;14169:3;14165:19;14159:26;14217:48;14259:4;14251:6;14247:17;14236:9;14217:48;:::i;:::-;14209:6;14202:64;14124:156;14101:179;14326:1;14322;14314:6;14310:14;14306:22;14300:4;14293:36;13728:611;;;13691:887;;13281:1303;;;13189:1395;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1969000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURN_LIMIT_PER_TX()": "459",
								"MINT_LIMIT_PER_TX()": "437",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2949",
								"burn(uint256)": "infinite",
								"currentVersion()": "2470",
								"decimals()": "406",
								"hasMinterRole(address)": "2938",
								"initialize()": "infinite",
								"isBlacklisted(address)": "2943",
								"isMinterRole(address)": "2878",
								"maxTokenSupply()": "2536",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2656",
								"pause()": "infinite",
								"paused()": "2571",
								"renounceOwnership()": "infinite",
								"setMinterRole(address,bool)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2575",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateBlacklistStatus(address,bool)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 636,
									"end": 5680,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2090,
									"end": 2143,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2114,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2114,
									"end": 2134,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2114,
									"end": 2134,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2136,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2114,
									"end": 2136,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2114,
									"end": 2136,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2114,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 636,
									"end": 5680,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220884f0a867920f016f29324384ab73e058830436a3f73c2cb5749230dc567106864736f6c634300081a0033",
									".code": [
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "9D888E86"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "CB177B1E"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "CB177B1E"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "FE575A87"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "9D888E86"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "B8360806"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "8129FC1C"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "8129FC1C"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "4004C7A2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "4004C7A2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "50F7C204"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "99DB017"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "18AB42C5"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "20FC56A6"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 636,
											"end": 5680,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 5566,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 5566,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5566,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1161,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1161,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1264,
											"end": 1321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1264,
											"end": 1321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 5346,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1442,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1442,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1442,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3486,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3486,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 4072,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4072,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1095,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1095,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2266,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 5214,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1060,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1060,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 4895,
											"end": 5137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4895,
											"end": 5137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 4511,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4511,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1391,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1391,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1391,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5662,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5650,
											"end": 5671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 1161,
											"end": 1220,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH",
											"source": 10,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 1264,
											"end": 1321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6109,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 6109,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 5346,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5394,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 5394,
											"end": 5404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5394,
											"end": 5404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 5394,
											"end": 5404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1442,
											"end": 1486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3595,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3572,
											"end": 3596,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3567,
											"end": 3626,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CD2E8E8000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3626,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3567,
											"end": 3626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3567,
											"end": 3626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3640,
											"end": 3663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3649,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3640,
											"end": 3663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3663,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3636,
											"end": 3688,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3672,
											"end": 3688,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 3636,
											"end": 3688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3712,
											"end": 3713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3713,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3698,
											"end": 3742,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2160733900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3742,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 3698,
											"end": 3742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 3756,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3782,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3752,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D5C0322600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3809,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3752,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3848,
											"end": 3862,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3823,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3823,
											"end": 3836,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3823,
											"end": 3836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3823,
											"end": 3845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3862,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3819,
											"end": 3889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A2DDA64700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3889,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3819,
											"end": 3889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3914,
											"end": 3923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3908,
											"end": 3932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3908,
											"end": 3932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3962,
											"end": 3971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E98063832B4FF0356868961B75F7F49B096B14EA066C9725301AD197F2F63147"
										},
										{
											"begin": 3973,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 3947,
											"end": 3980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3947,
											"end": 3980,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4155,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4140,
											"end": 4184,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2160733900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4184,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4140,
											"end": 4184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 4198,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4224,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4251,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4194,
											"end": 4251,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B8E7123600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4251,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4194,
											"end": 4251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4194,
											"end": 4251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4276,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4276,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4276,
											"end": 4288,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4276,
											"end": 4288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4290,
											"end": 4296,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4270,
											"end": 4297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4270,
											"end": 4297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4327,
											"end": 4337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 4327,
											"end": 4339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4327,
											"end": 4339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E510C8C53E4242BCCD9841E6F1F5FE02545BDAD7B524C54C8FF90FFDA089E278"
										},
										{
											"begin": 4341,
											"end": 4347,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4312,
											"end": 4348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4348,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4072,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1095,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2780,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2783,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2266,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "536B7920546F6B656E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "534B590000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 2317,
											"end": 2349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 2317,
											"end": 2349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 2359,
											"end": 2385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2359,
											"end": 2385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2395,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 2395,
											"end": 2417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2395,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2427,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2427,
											"end": 2451,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2427,
											"end": 2451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2427,
											"end": 2451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 953,
											"end": 972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "33B2E3C9FD0803CE8000000"
										},
										{
											"begin": 2470,
											"end": 2484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2470,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2513,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2513,
											"end": 2545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2606,
											"end": 2616,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 862,
											"end": 879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 2600,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 2600,
											"end": 2633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2600,
											"end": 2633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2691,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2714,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2691,
											"end": 2722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 2765,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D0CE8757673482BA416ECE0CB058DACD500BB9D737793D5F34AD5548DD4E2FB"
										},
										{
											"begin": 2767,
											"end": 2771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2737,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2772,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 5214,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5260,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5260,
											"end": 5266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 5260,
											"end": 5268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5260,
											"end": 5268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5260,
											"end": 5268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5214,
											"end": 5275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4573,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4989,
											"end": 5010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4989,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4989,
											"end": 5010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4989,
											"end": 5010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4989,
											"end": 5010,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4985,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5019,
											"end": 5035,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4985,
											"end": 5035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4985,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5070,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5066,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "92D364D140F902817E5EAA71CEDFE20BAE2A3C66A2725CEE3D9A51D73F052FB6"
										},
										{
											"begin": 5123,
											"end": 5129,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5091,
											"end": 5130,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5130,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4895,
											"end": 5137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4616,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4597,
											"end": 4618,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4597,
											"end": 4604,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4597,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4597,
											"end": 4618,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4593,
											"end": 4643,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4643,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4593,
											"end": 4643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4677,
											"end": 4683,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4673,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4683,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4716,
											"end": 4723,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D0CE8757673482BA416ECE0CB058DACD500BB9D737793D5F34AD5548DD4E2FB"
										},
										{
											"begin": 4725,
											"end": 4731,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4698,
											"end": 4732,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4732,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1391,
											"end": 1436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 11871,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11910,
											"end": 11947,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11986,
											"end": 11991,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11967,
											"end": 11991,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12045,
											"end": 12052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 12018,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12150,
											"end": 12157,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12178,
											"end": 12183,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12159,
											"end": 12183,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 12134,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11834,
											"end": 12222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6729,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6822,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3760,
											"end": 3779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3760,
											"end": 3781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3832,
											"end": 3842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3832,
											"end": 3844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3823,
											"end": 3845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 8847,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9348,
											"end": 9349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9329,
											"end": 9336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9329,
											"end": 9350,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 9373,
											"end": 9403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9403,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9325,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9431,
											"end": 9438,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9423,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 9423,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9259,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1293,
											"name": "PUSH",
											"source": 6,
											"value": "CD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300"
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1149,
											"end": 1251,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1149,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 1217,
											"end": 1242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 1217,
											"end": 1244,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 1217,
											"end": 1244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1149,
											"end": 1251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3453,
											"end": 3472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3453,
											"end": 3474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3485,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 3522,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3522,
											"end": 3534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3515,
											"end": 3535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 11109,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 11109,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 11183,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 11283,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 11415,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3337,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2975,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3174,
											"end": 3193,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3214,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3174,
											"end": 3214,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3210,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3214,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3214,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3174,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3245,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3170,
											"end": 3245,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "PUSH",
											"source": 10,
											"value": "AB73372A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3245,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3170,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3314,
											"end": 3318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3329,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 3300,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3330,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3300,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3168,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2040,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2040,
											"end": 2061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2970,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1608,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 1463,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 1585,
											"end": 1589,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1593,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1600,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 1571,
											"end": 1601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 1571,
											"end": 1601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1463,
											"end": 1608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7686,
											"end": 7697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7655,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7874,
											"end": 7879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7538,
											"end": 7904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 8358,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 11,
											"value": "493"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 11,
											"value": "503"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 5884,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5768,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 5853,
											"end": 5858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 5838,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5828,
											"end": 5860,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5872,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5864,
											"end": 5876,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "tag",
											"source": 11,
											"value": "511"
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 5884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 5884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5977,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5958,
											"end": 5978,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5949,
											"end": 5978,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5949,
											"end": 5978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 6011,
											"end": 6016,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 5987,
											"end": 6017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 6023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6153,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6130,
											"end": 6137,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6149,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6122,
											"end": 6154,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 6157,
											"end": 6236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 6347,
											"end": 6354,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6323,
											"end": 6345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 6302,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "tag",
											"source": 11,
											"value": "517"
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6355,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6248,
											"end": 6365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6404,
											"end": 6406,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 6472,
											"end": 6479,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6448,
											"end": 6470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 6430,
											"end": 6480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6420,
											"end": 6480,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6420,
											"end": 6480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6577,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6616,
											"end": 6625,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6607,
											"end": 6614,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6603,
											"end": 6626,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6599,
											"end": 6631,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 6634,
											"end": 6713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6754,
											"end": 6755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 6824,
											"end": 6831,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6815,
											"end": 6821,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 6779,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "tag",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6769,
											"end": 6832,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6769,
											"end": 6832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6725,
											"end": 6842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6943,
											"end": 6949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 6941,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6928,
											"end": 6950,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 6907,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 6960,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 6960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6852,
											"end": 6970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6503,
											"end": 6977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 7163,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 6983,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7031,
											"end": 7108,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 7125,
											"end": 7126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7118,
											"end": 7133,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7157,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7213,
											"end": 7219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7250,
											"end": 7251,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7244,
											"end": 7248,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7230,
											"end": 7252,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7230,
											"end": 7252,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7291,
											"end": 7295,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7287,
											"end": 7299,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7378,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 7366,
											"end": 7372,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7362,
											"end": 7379,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7379,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7379,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7436,
											"end": 7438,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7439,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7402,
											"end": 7440,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 7455,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7220,
											"end": 7489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7495,
											"end": 7675,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 7495,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7543,
											"end": 7620,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7621,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7640,
											"end": 7644,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7630,
											"end": 7645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7664,
											"end": 7668,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7669,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7872,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 7681,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7721,
											"end": 7724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 7758,
											"end": 7759,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7740,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 7740,
											"end": 7760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7740,
											"end": 7760,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 7740,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7735,
											"end": 7760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7735,
											"end": 7760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7774,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 7792,
											"end": 7793,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7774,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 7774,
											"end": 7794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7774,
											"end": 7794,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 7774,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7794,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7794,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7810,
											"end": 7819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7803,
											"end": 7819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7803,
											"end": 7819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7835,
											"end": 7836,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7832,
											"end": 7842,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7829,
											"end": 7865,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7829,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 7829,
											"end": 7865,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 7845,
											"end": 7863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 7845,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7829,
											"end": 7865,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 7829,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7872,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7872,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7872,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7872,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7923,
											"end": 7930,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7952,
											"end": 7957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7941,
											"end": 7957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7941,
											"end": 7957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7963,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 8070,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 7969,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8005,
											"end": 8012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8038,
											"end": 8043,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8034,
											"end": 8064,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8023,
											"end": 8064,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8023,
											"end": 8064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 8070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 8070,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 8070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 8070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8136,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 8076,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8107,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8118,
											"end": 8130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8118,
											"end": 8130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8298,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 8142,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8199,
											"end": 8208,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 8249,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 8258,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 8258,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8290,
											"name": "tag",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 8258,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8249,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 8249,
											"end": 8291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8249,
											"end": 8291,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 8249,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 8232,
											"end": 8292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8292,
											"name": "tag",
											"source": 11,
											"value": "539"
										},
										{
											"begin": 8232,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8219,
											"end": 8292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8219,
											"end": 8292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8142,
											"end": 8298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8304,
											"end": 8449,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 8304,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8398,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 8436,
											"end": 8441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8398,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 8398,
											"end": 8442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8398,
											"end": 8442,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 8398,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8393,
											"end": 8396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8386,
											"end": 8443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8304,
											"end": 8449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8304,
											"end": 8449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8304,
											"end": 8449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8691,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 8455,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8555,
											"end": 8559,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8593,
											"end": 8595,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8578,
											"end": 8596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8570,
											"end": 8596,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8570,
											"end": 8596,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8679,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8666,
											"end": 8683,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 8606,
											"end": 8684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8684,
											"name": "tag",
											"source": 11,
											"value": "545"
										},
										{
											"begin": 8606,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8455,
											"end": 8691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8846,
											"end": 8850,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8884,
											"end": 8886,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8873,
											"end": 8882,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8861,
											"end": 8887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8861,
											"end": 8887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8897,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 8965,
											"end": 8966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 8963,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8950,
											"end": 8967,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8941,
											"end": 8947,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8897,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 8897,
											"end": 8968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8897,
											"end": 8968,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 8897,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8978,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 9046,
											"end": 9048,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9044,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9031,
											"end": 9049,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9022,
											"end": 9028,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8978,
											"end": 9050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 8978,
											"end": 9050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8978,
											"end": 9050,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 8978,
											"end": 9050,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9060,
											"end": 9132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 9128,
											"end": 9130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9117,
											"end": 9126,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9104,
											"end": 9110,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9060,
											"end": 9132,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9060,
											"end": 9132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9060,
											"end": 9132,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 9060,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9326,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 9145,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9285,
											"end": 9318,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9273,
											"end": 9279,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9269,
											"end": 9283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9262,
											"end": 9319,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9698,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9332,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9474,
											"end": 9477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9554,
											"end": 9557,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9495,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 9495,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9495,
											"end": 9562,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 9495,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9488,
											"end": 9562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9488,
											"end": 9562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 9660,
											"end": 9663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9664,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 9571,
											"end": 9664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9664,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 9571,
											"end": 9664,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9689,
											"end": 9691,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9684,
											"end": 9687,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9680,
											"end": 9692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9698,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9698,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9332,
											"end": 9698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9704,
											"end": 10123,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9704,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9870,
											"end": 9874,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9897,
											"end": 9906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9885,
											"end": 9911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9885,
											"end": 9911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9957,
											"end": 9966,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 9955,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9947,
											"end": 9967,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9943,
											"end": 9944,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9928,
											"end": 9945,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9921,
											"end": 9968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 10111,
											"end": 10115,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 9985,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9985,
											"end": 10116,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 9985,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9977,
											"end": 10116,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9977,
											"end": 10116,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9704,
											"end": 10123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9704,
											"end": 10123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9704,
											"end": 10123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9704,
											"end": 10123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10309,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 10129,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10254,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10174,
											"end": 10175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10167,
											"end": 10255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10278,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 10271,
											"end": 10272,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10264,
											"end": 10279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10298,
											"end": 10302,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10295,
											"end": 10296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10288,
											"end": 10303,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10456,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 10315,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10364,
											"end": 10368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10390,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10379,
											"end": 10390,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10379,
											"end": 10390,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10400,
											"end": 10414,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10444,
											"end": 10448,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10441,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10423,
											"end": 10449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10423,
											"end": 10449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10456,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10456,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10315,
											"end": 10456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10555,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 10462,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10499,
											"end": 10505,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10548,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10541,
											"end": 10543,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 10534,
											"end": 10539,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10530,
											"end": 10544,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10526,
											"end": 10549,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10516,
											"end": 10549,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10555,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10462,
											"end": 10555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10668,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10561,
											"end": 10668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10605,
											"end": 10613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10649,
											"end": 10653,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10645,
											"end": 10661,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 10624,
											"end": 10661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10624,
											"end": 10661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10668,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10561,
											"end": 10668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 11067,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 10674,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10743,
											"end": 10749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10793,
											"end": 10794,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 10781,
											"end": 10791,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10816,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 10846,
											"end": 10912,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10835,
											"end": 10844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10816,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10816,
											"end": 10913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10816,
											"end": 10913,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 10816,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 10964,
											"end": 10972,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10953,
											"end": 10962,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 10973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 10934,
											"end": 10973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 10973,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 10934,
											"end": 10973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10922,
											"end": 10973,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 10922,
											"end": 10973,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11006,
											"end": 11010,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11002,
											"end": 11011,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11000,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10991,
											"end": 11012,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10982,
											"end": 11012,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10982,
											"end": 11012,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11055,
											"end": 11059,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11045,
											"end": 11053,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11041,
											"end": 11060,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11034,
											"end": 11039,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11031,
											"end": 11061,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 11021,
											"end": 11061,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11021,
											"end": 11061,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10750,
											"end": 11067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10750,
											"end": 11067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 11067,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 11067,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 11067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 11067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 11067,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10674,
											"end": 11067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11215,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 11073,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11123,
											"end": 11132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11156,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 11174,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 11183,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 11201,
											"end": 11206,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11183,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 11183,
											"end": 11207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11183,
											"end": 11207,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 11183,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11174,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 11174,
											"end": 11208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11174,
											"end": 11208,
											"name": "tag",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 11174,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11156,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 11156,
											"end": 11209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11156,
											"end": 11209,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 11156,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11143,
											"end": 11209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11143,
											"end": 11209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11221,
											"end": 11296,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 11221,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11264,
											"end": 11267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11285,
											"end": 11290,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11278,
											"end": 11290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11278,
											"end": 11290,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11221,
											"end": 11296,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11221,
											"end": 11296,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11221,
											"end": 11296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11221,
											"end": 11296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11302,
											"end": 11571,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 11302,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11412,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 11443,
											"end": 11450,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11412,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 11412,
											"end": 11451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11412,
											"end": 11451,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 11412,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11473,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 11522,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 11546,
											"end": 11562,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11522,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 11522,
											"end": 11563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11522,
											"end": 11563,
											"name": "tag",
											"source": 11,
											"value": "571"
										},
										{
											"begin": 11522,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11514,
											"end": 11520,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11507,
											"end": 11511,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11501,
											"end": 11512,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11473,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 11473,
											"end": 11564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11473,
											"end": 11564,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 11473,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11467,
											"end": 11471,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11460,
											"end": 11565,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11378,
											"end": 11571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11302,
											"end": 11571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11302,
											"end": 11571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11302,
											"end": 11571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11302,
											"end": 11571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11577,
											"end": 11650,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 11577,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11622,
											"end": 11625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11577,
											"end": 11650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11656,
											"end": 11845,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 11656,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11733,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 11733,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 11733,
											"end": 11765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11733,
											"end": 11765,
											"name": "tag",
											"source": 11,
											"value": "574"
										},
										{
											"begin": 11733,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11774,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11818,
											"end": 11822,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11774,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 11774,
											"end": 11839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11774,
											"end": 11839,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 11774,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11709,
											"end": 11845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11656,
											"end": 11845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11656,
											"end": 11845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11656,
											"end": 11845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11851,
											"end": 12037,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 11851,
											"end": 12037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11928,
											"end": 11931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11921,
											"end": 11926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11918,
											"end": 11932,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 12019,
											"end": 12020,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 11982,
											"end": 12021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12021,
											"name": "tag",
											"source": 11,
											"value": "580"
										},
										{
											"begin": 11982,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 11956,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11948,
											"end": 11953,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11944,
											"end": 11957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11935,
											"end": 11957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11935,
											"end": 11957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 11911,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11851,
											"end": 12037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11851,
											"end": 12037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11851,
											"end": 12037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12043,
											"end": 12586,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 12043,
											"end": 12586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12144,
											"end": 12146,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 12139,
											"end": 12142,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12136,
											"end": 12147,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12133,
											"end": 12579,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12133,
											"end": 12579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 12133,
											"end": 12579,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12178,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 12210,
											"end": 12215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12178,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 12178,
											"end": 12216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12178,
											"end": 12216,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 12178,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12262,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 12280,
											"end": 12290,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12262,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 12262,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12262,
											"end": 12291,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 12262,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12252,
											"end": 12260,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12248,
											"end": 12292,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12445,
											"end": 12447,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12433,
											"end": 12443,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12476,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 12427,
											"end": 12476,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12466,
											"end": 12474,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12451,
											"end": 12474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12451,
											"end": 12474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12476,
											"name": "tag",
											"source": 11,
											"value": "585"
										},
										{
											"begin": 12427,
											"end": 12476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 12545,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 12563,
											"end": 12566,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12545,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 12545,
											"end": 12567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12545,
											"end": 12567,
											"name": "tag",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 12545,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12535,
											"end": 12543,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12531,
											"end": 12568,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12518,
											"end": 12529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 12489,
											"end": 12569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12489,
											"end": 12569,
											"name": "tag",
											"source": 11,
											"value": "586"
										},
										{
											"begin": 12489,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12148,
											"end": 12579,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12148,
											"end": 12579,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12133,
											"end": 12579,
											"name": "tag",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 12133,
											"end": 12579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12043,
											"end": 12586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12043,
											"end": 12586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12043,
											"end": 12586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12043,
											"end": 12586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12709,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 12592,
											"end": 12709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12654,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12696,
											"end": 12701,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12690,
											"end": 12694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12702,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 12665,
											"end": 12702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12665,
											"end": 12702,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12709,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12709,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12592,
											"end": 12709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12884,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 12715,
											"end": 12884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12759,
											"end": 12765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 12840,
											"end": 12841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12842,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 12828,
											"end": 12833,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12825,
											"end": 12826,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 12821,
											"end": 12834,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12792,
											"end": 12843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 12792,
											"end": 12843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12792,
											"end": 12843,
											"name": "tag",
											"source": 11,
											"value": "590"
										},
										{
											"begin": 12792,
											"end": 12843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12788,
											"end": 12844,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12877,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12867,
											"end": 12871,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12863,
											"end": 12878,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12853,
											"end": 12878,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12853,
											"end": 12878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12766,
											"end": 12884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12884,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12715,
											"end": 12884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 13184,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 12889,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12965,
											"end": 12969,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13111,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 13136,
											"end": 13139,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13130,
											"end": 13134,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 13111,
											"end": 13140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13140,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 13111,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13103,
											"end": 13140,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13103,
											"end": 13140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13173,
											"end": 13176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13166,
											"end": 13177,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13160,
											"end": 13164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13157,
											"end": 13178,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13178,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13149,
											"end": 13178,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 13184,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 13184,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 13184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 13184,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12889,
											"end": 13184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 14584,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 13189,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13306,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 13339,
											"end": 13342,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13306,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 13306,
											"end": 13343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13306,
											"end": 13343,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 13306,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13408,
											"end": 13426,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13400,
											"end": 13406,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13397,
											"end": 13427,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13394,
											"end": 13450,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13394,
											"end": 13450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 13394,
											"end": 13450,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13430,
											"end": 13448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 13430,
											"end": 13448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 13430,
											"end": 13448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13430,
											"end": 13448,
											"name": "tag",
											"source": 11,
											"value": "596"
										},
										{
											"begin": 13430,
											"end": 13448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13394,
											"end": 13450,
											"name": "tag",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 13394,
											"end": 13450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13474,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 13506,
											"end": 13510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13500,
											"end": 13511,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13474,
											"end": 13512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 13474,
											"end": 13512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13474,
											"end": 13512,
											"name": "tag",
											"source": 11,
											"value": "597"
										},
										{
											"begin": 13474,
											"end": 13512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13611,
											"end": 13617,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13605,
											"end": 13609,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 13559,
											"end": 13626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "tag",
											"source": 11,
											"value": "598"
										},
										{
											"begin": 13559,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13653,
											"end": 13654,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13677,
											"end": 13681,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13664,
											"end": 13681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13664,
											"end": 13681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13709,
											"end": 13711,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13701,
											"end": 13707,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13698,
											"end": 13712,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13726,
											"end": 13727,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13721,
											"end": 14339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13721,
											"end": 14339,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13721,
											"end": 14339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 13721,
											"end": 14339,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14383,
											"end": 14384,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14400,
											"end": 14406,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14397,
											"end": 14474,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14397,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 14397,
											"end": 14474,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14449,
											"end": 14458,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14444,
											"end": 14447,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 14440,
											"end": 14459,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14434,
											"end": 14460,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14425,
											"end": 14460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14425,
											"end": 14460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14397,
											"end": 14474,
											"name": "tag",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 14397,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 14560,
											"end": 14566,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14553,
											"end": 14558,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 14500,
											"end": 14567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "tag",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14494,
											"end": 14498,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14487,
											"end": 14568,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 14356,
											"end": 14578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 13691,
											"end": 14578,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13721,
											"end": 14339,
											"name": "tag",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 13721,
											"end": 14339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13773,
											"end": 13777,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13769,
											"end": 13778,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13761,
											"end": 13767,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13757,
											"end": 13779,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13807,
											"end": 13844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 13839,
											"end": 13843,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13807,
											"end": 13844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 13807,
											"end": 13844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13807,
											"end": 13844,
											"name": "tag",
											"source": 11,
											"value": "603"
										},
										{
											"begin": 13807,
											"end": 13844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13866,
											"end": 13867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "tag",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13894,
											"end": 13901,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13888,
											"end": 13902,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13973,
											"end": 13982,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 13964,
											"end": 13983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13958,
											"end": 13984,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13950,
											"end": 13956,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13943,
											"end": 13985,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 14024,
											"end": 14025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14016,
											"end": 14022,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14012,
											"end": 14026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14002,
											"end": 14026,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14002,
											"end": 14026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14071,
											"end": 14073,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14060,
											"end": 14069,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14056,
											"end": 14074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14043,
											"end": 14074,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 14043,
											"end": 14074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13917,
											"end": 13921,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13914,
											"end": 13915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13910,
											"end": 13922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13905,
											"end": 13922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13905,
											"end": 13922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 13880,
											"end": 14088,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14116,
											"end": 14122,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14107,
											"end": 14114,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14104,
											"end": 14123,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 14101,
											"end": 14280,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14101,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 14101,
											"end": 14280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14174,
											"end": 14183,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14169,
											"end": 14172,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 14165,
											"end": 14184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14159,
											"end": 14185,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14217,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 14259,
											"end": 14263,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14251,
											"end": 14257,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 14247,
											"end": 14264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14236,
											"end": 14245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14217,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 14217,
											"end": 14265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14217,
											"end": 14265,
											"name": "tag",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 14217,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14209,
											"end": 14215,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14202,
											"end": 14266,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 14124,
											"end": 14280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14101,
											"end": 14280,
											"name": "tag",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 14101,
											"end": 14280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14326,
											"end": 14327,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14322,
											"end": 14323,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14314,
											"end": 14320,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 14310,
											"end": 14324,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14306,
											"end": 14328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 14293,
											"end": 14329,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 13728,
											"end": 14339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13728,
											"end": 14339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13728,
											"end": 14339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14578,
											"name": "tag",
											"source": 11,
											"value": "599"
										},
										{
											"begin": 13691,
											"end": 14578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13691,
											"end": 14578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13281,
											"end": 14584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13281,
											"end": 14584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13281,
											"end": 14584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 14584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 14584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13189,
											"end": 14584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/SkyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURN_LIMIT_PER_TX()": "20fc56a6",
							"MINT_LIMIT_PER_TX()": "18ab42c5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"currentVersion()": "9d888e86",
							"decimals()": "313ce567",
							"hasMinterRole(address)": "099db017",
							"initialize()": "8129fc1c",
							"isBlacklisted(address)": "fe575a87",
							"isMinterRole(address)": "4004c7a2",
							"maxTokenSupply()": "50f7c204",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setMinterRole(address,bool)": "cb177b1e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateBlacklistStatus(address,bool)": "b8360806"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountIsBlacklisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsBurnLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceedsMintLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorizedMinter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupplyExceedsMax\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"BlacklistStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"MinterRoleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurnedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMintedTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_LIMIT_PER_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_LIMIT_PER_TX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"updateBlacklistStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Sky Token (SKY) \\u7684\\u4e3b\\u8981\\u5408\\u7ea6\\u5b9e\\u73b0 \\u5b9e\\u73b0\\u4e86\\u53ef\\u5347\\u7ea7\\u7684 ERC20 \\u4ee3\\u5e01\\u6807\\u51c6\\uff0c\\u5305\\u542b\\u5b8c\\u6574\\u7684\\u5b89\\u5168\\u7279\\u6027\\u548c\\u6269\\u5c55\\u529f\\u80fd\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"\\u9500\\u6bc1\\u4ee3\\u5e01\",\"params\":{\"amount\":\"\\u9500\\u6bc1\\u6570\\u91cf\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"hasMinterRole(address)\":{\"details\":\"\\u68c0\\u67e5\\u5730\\u5740\\u662f\\u5426\\u5177\\u6709\\u94f8\\u5e01\\u6743\\u9650\",\"params\":{\"account\":\"\\u8981\\u68c0\\u67e5\\u7684\\u5730\\u5740\"},\"returns\":{\"_0\":\"bool \\u662f\\u5426\\u662f\\u94f8\\u5e01\\u8005\"}},\"initialize()\":{\"details\":\"\\u521d\\u59cb\\u5316 Sky Token \\u5408\\u7ea6 \\u8bbe\\u7f6e\\u4ee3\\u5e01\\u540d\\u79f0\\u3001\\u7b26\\u53f7\\uff0c\\u5e76\\u5206\\u914d\\u521d\\u59cb\\u4f9b\\u5e94\\u91cf\"},\"mint(address,uint256)\":{\"details\":\"\\u94f8\\u9020\\u65b0\\u4ee3\\u5e01\\uff08\\u4ec5\\u6388\\u6743\\u94f8\\u5e01\\u8005\\uff09\",\"params\":{\"amount\":\"\\u94f8\\u9020\\u6570\\u91cf\",\"recipient\":\"\\u63a5\\u6536\\u5730\\u5740\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"\\u6682\\u505c\\u6240\\u6709\\u4ee3\\u5e01\\u8f6c\\u79fb\\uff08\\u4ec5\\u6240\\u6709\\u8005\\uff09\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMinterRole(address,bool)\":{\"details\":\"\\u8bbe\\u7f6e\\u94f8\\u5e01\\u6743\\u9650\\uff08\\u4ec5\\u6240\\u6709\\u8005\\uff09\",\"params\":{\"account\":\"\\u76ee\\u6807\\u5730\\u5740\",\"status\":\"\\u662f\\u5426\\u6388\\u4e88\\u94f8\\u5e01\\u6743\\u9650\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"\\u6062\\u590d\\u4ee3\\u5e01\\u8f6c\\u79fb\\uff08\\u4ec5\\u6240\\u6709\\u8005\\uff09\"},\"updateBlacklistStatus(address,bool)\":{\"details\":\"\\u66f4\\u65b0\\u9ed1\\u540d\\u5355\\u72b6\\u6001\\uff08\\u4ec5\\u6240\\u6709\\u8005\\uff09\",\"params\":{\"account\":\"\\u76ee\\u6807\\u5730\\u5740\",\"status\":\"\\u662f\\u5426\\u52a0\\u5165\\u9ed1\\u540d\\u5355\"}}},\"title\":\"SkyToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SkyToken.sol\":\"SkyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol\":{\"keccak256\":\"0x6864ab59f6580008a75b6b6b706170eb6b3729ca062eba7d77e864c4a957d5fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52ec5e3c8604ad60ea99e19e93e90506eac5e78e24ce84f91a38ea74b7df4b1c\",\"dweb:/ipfs/Qma3XrookDY3KqKxU83Y9aUKeke33wMUMTNNBKcfDNbC8T\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"contracts/SkyToken.sol\":{\"keccak256\":\"0x0cb61b60435da37ef2c9e66c31efc6e9f8644c72980158c20b4c8f7d4df2d49f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8b76b425c792678a169fbbec5261d09849d5adc847cdf3e49a74146c2805d2f\",\"dweb:/ipfs/QmehcmK1Be4KtahoMmwgz9coZ2epxfuutGf856BfTFqMv4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "contracts/SkyToken.sol:SkyToken",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/SkyToken.sol:SkyToken",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1695,
								"contract": "contracts/SkyToken.sol:SkyToken",
								"label": "currentVersion",
								"offset": 0,
								"slot": "50",
								"type": "t_uint256"
							},
							{
								"astId": 1697,
								"contract": "contracts/SkyToken.sol:SkyToken",
								"label": "maxTokenSupply",
								"offset": 0,
								"slot": "51",
								"type": "t_uint256"
							},
							{
								"astId": 1707,
								"contract": "contracts/SkyToken.sol:SkyToken",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1711,
								"contract": "contracts/SkyToken.sol:SkyToken",
								"label": "isMinterRole",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1249
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1250,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1249,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1249,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1249,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 449,
							"src": "136:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "144:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1000:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1768:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1815:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1859:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1949:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1959:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1932:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 533,
									"src": "1889:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2076:39:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2096:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:2"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 474,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:2"
									},
									"scope": 533,
									"src": "2006:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2516:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2526:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:2"
											},
											{
												"id": 488,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 493,
									"name": "nonReentrant",
									"nameLocation": "2501:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:2"
									},
									"src": "2492:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2640:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2733:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 498,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2744:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:2"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2863:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2873:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:2"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:2"
									},
									"scope": 533,
									"src": "2601:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2932:171:2",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3084:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:2"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:2"
									},
									"scope": 533,
									"src": "2894:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3346:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "3356:26:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 533,
									"src": "3282:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 532,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "3654:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3439",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "952:2730:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "112:3571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1249
						],
						"ERC20Upgradeable": [
							1150
						],
						"IERC20": [
							1640
						],
						"IERC20Errors": [
							1467
						],
						"IERC20Metadata": [
							1666
						],
						"Initializable": [
							448
						]
					},
					"id": 1151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1151,
							"sourceUnit": 1641,
							"src": "131:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 536,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1640,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1151,
							"sourceUnit": 1667,
							"src": "202:97:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 538,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1666,
										"src": "210:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1151,
							"sourceUnit": 1250,
							"src": "300:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 540,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1249,
										"src": "308:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1151,
							"sourceUnit": 1563,
							"src": "371:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 542,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1467,
										"src": "379:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1151,
							"sourceUnit": 449,
							"src": "455:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 544,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 547,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:3"
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:3"
								},
								{
									"baseName": {
										"id": 549,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1249,
										"src": "1334:18:3"
									},
									"id": 550,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:3"
								},
								{
									"baseName": {
										"id": 551,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1640,
										"src": "1354:6:3"
									},
									"id": 552,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:3"
								},
								{
									"baseName": {
										"id": 553,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1666,
										"src": "1362:14:3"
									},
									"id": 554,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:3"
								},
								{
									"baseName": {
										"id": 555,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1467,
										"src": "1378:12:3"
									},
									"id": 556,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 546,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1150,
							"linearizedBaseContracts": [
								1150,
								1467,
								1666,
								1640,
								1249,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 574,
									"members": [
										{
											"constant": false,
											"id": 561,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 574,
											"src": "1495:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 560,
												"keyName": "account",
												"keyNameLocation": "1511:7:3",
												"keyType": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 567,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 574,
											"src": "1551:75:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 566,
												"keyName": "account",
												"keyNameLocation": "1567:7:3",
												"keyType": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 565,
													"keyName": "spender",
													"keyNameLocation": "1594:7:3",
													"keyType": {
														"id": 563,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 564,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 569,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 574,
											"src": "1637:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 568,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 571,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 574,
											"src": "1668:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 570,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 573,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 574,
											"src": "1690:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 572,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:3",
									"nodeType": "StructDefinition",
									"scope": 1150,
									"src": "1465:246:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 577,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1150,
									"src": "1826:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 575,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 576,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2021:79:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:3",
													"nodeType": "YulBlock",
													"src": "2040:54:3",
													"statements": [
														{
															"nativeSrc": "2054:30:3",
															"nodeType": "YulAssignment",
															"src": "2054:30:3",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:3",
																"nodeType": "YulIdentifier",
																"src": "2064:20:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 581,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 577,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:3",
														"valueSize": 1
													}
												],
												"id": 583,
												"nodeType": "InlineAssembly",
												"src": "2031:63:3"
											}
										]
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:3"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1997:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 580,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 579,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "1997:12:3"
													},
													"referencedDeclaration": 574,
													"src": "1997:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:3"
									},
									"scope": 1150,
									"src": "1947:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "2374:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "2407:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 597,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "2414:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 595,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "2384:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 593,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 592,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2304:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2325:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:3"
									},
									"scope": 1150,
									"src": "2282:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "2537:114:3",
										"statements": [
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "2547:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 611,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 610,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "2547:12:3"
															},
															"referencedDeclaration": 574,
															"src": "2547:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 613,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "2572:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:3"
											},
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 616,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "2600:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 571,
														"src": "2600:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 619,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "2610:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:3"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 622,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "2625:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 573,
														"src": "2625:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 625,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "2637:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:3"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 607,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2467:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2488:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 604,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:3"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:3"
									},
									"scope": 1150,
									"src": "2435:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1653
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "2776:84:3",
										"statements": [
											{
												"assignments": [
													637
												],
												"declarations": [
													{
														"constant": false,
														"id": 637,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "2786:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 636,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 635,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "2786:12:3"
															},
															"referencedDeclaration": 574,
															"src": "2786:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 638,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "2811:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 641,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "2846:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 571,
													"src": "2846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 634,
												"id": 643,
												"nodeType": "Return",
												"src": "2839:14:3"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:3"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2761:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:3"
									},
									"scope": 1150,
									"src": "2716:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1659
									],
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3035:86:3",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3045:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 652,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 651,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "3045:12:3"
															},
															"referencedDeclaration": 574,
															"src": "3045:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 654,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3070:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 657,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "3105:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 573,
													"src": "3105:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 650,
												"id": 659,
												"nodeType": "Return",
												"src": "3098:16:3"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3020:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:3"
									},
									"scope": 1150,
									"src": "2973:148:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1665
									],
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3810:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 666,
												"id": 668,
												"nodeType": "Return",
												"src": "3820:9:3"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3803:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 664,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:3"
									},
									"scope": 1150,
									"src": "3754:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1589
									],
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "3957:91:3",
										"statements": [
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 685,
														"src": "3967:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 677,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 676,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "3967:12:3"
															},
															"referencedDeclaration": 574,
															"src": "3967:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 679,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3992:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 682,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "4027:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:3",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 569,
													"src": "4027:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 684,
												"nodeType": "Return",
												"src": "4020:21:3"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:3"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "3948:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:3"
									},
									"scope": 1150,
									"src": "3896:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1597
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "4180:97:3",
										"statements": [
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 705,
														"src": "4190:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 695,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 694,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "4190:12:3"
															},
															"referencedDeclaration": 574,
															"src": "4190:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 697,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "4215:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 700,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "4250:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 561,
														"src": "4250:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 703,
													"indexExpression": {
														"id": 702,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "4262:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 693,
												"id": 704,
												"nodeType": "Return",
												"src": "4243:27:3"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "4125:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "4171:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:3"
									},
									"scope": 1150,
									"src": "4106:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1607
									],
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4547:103:3",
										"statements": [
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "4557:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 716,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 718,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4573:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "4605:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "4612:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "4616:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "4595:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 715,
												"id": 728,
												"nodeType": "Return",
												"src": "4632:11:3"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4490:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4502:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4541:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:3"
									},
									"scope": 1150,
									"src": "4472:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1617
									],
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "4797:106:3",
										"statements": [
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 753,
														"src": "4807:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 741,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 740,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "4807:12:3"
															},
															"referencedDeclaration": 574,
															"src": "4807:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 743,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "4832:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 746,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "4867:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:3",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 567,
															"src": "4867:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 749,
														"indexExpression": {
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4881:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 751,
													"indexExpression": {
														"id": 750,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "4888:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 739,
												"id": 752,
												"nodeType": "Return",
												"src": "4860:36:3"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4727:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4742:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:3"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "4788:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:3"
									},
									"scope": 1150,
									"src": "4708:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1627
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "5289:107:3",
										"statements": [
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5299:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 764,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 766,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5315:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5346:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "5353:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "5362:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1033,
															1101
														],
														"referencedDeclaration": 1033,
														"src": "5337:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 763,
												"id": 776,
												"nodeType": "Return",
												"src": "5378:11:3"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5227:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5244:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5283:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:3"
									},
									"scope": 1150,
									"src": "5210:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1639
									],
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6081:151:3",
										"statements": [
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "6091:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 790,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 792,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "6109:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "6147:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "6153:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "6162:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 795,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "6131:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "6188:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "6194:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "6198:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 801,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "6178:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 789,
												"id": 808,
												"nodeType": "Return",
												"src": "6214:11:3"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6010:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6036:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:3"
									},
									"scope": 1150,
									"src": "5988:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "6674:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "6688:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "6684:86:3",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "6708:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "6729:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "6722:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 835,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "6783:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 836,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 849,
												"nodeType": "IfStatement",
												"src": "6779:86:3",
												"trueBody": {
													"id": 848,
													"nodeType": "Block",
													"src": "6801:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 842,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 841,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "6822:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 847,
															"nodeType": "RevertStatement",
															"src": "6815:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "6882:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "6888:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6892:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "6874:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:3"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6624:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6638:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6650:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:3"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:3"
									},
									"scope": 1150,
									"src": "6605:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "7295:1095:3",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "7305:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 868,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 867,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "7305:12:3"
															},
															"referencedDeclaration": 574,
															"src": "7305:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 870,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "7330:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 873,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "7362:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 874,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "7538:366:3",
													"statements": [
														{
															"assignments": [
																887
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 887,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 915,
																	"src": "7552:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 892,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 888,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "7574:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 561,
																	"src": "7574:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 891,
																"indexExpression": {
																	"id": 890,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "7586:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 893,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "7609:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 894,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "7623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 903,
															"nodeType": "IfStatement",
															"src": "7605:115:3",
															"trueBody": {
																"id": 902,
																"nodeType": "Block",
																"src": "7630:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 897,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "7680:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 898,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 887,
																					"src": "7686:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 899,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "7699:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 896,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1437,
																				"src": "7655:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 901,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:3"
																	}
																]
															}
														},
														{
															"id": 914,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:3",
															"statements": [
																{
																	"expression": {
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 904,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "7840:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 907,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 561,
																				"src": "7840:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 908,
																			"indexExpression": {
																				"id": 906,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "7852:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 909,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 887,
																				"src": "7860:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 910,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "7874:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 913,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:3"
																}
															]
														}
													]
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "7358:546:3",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "7382:150:3",
													"statements": [
														{
															"expression": {
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 879,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "7498:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:3",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 569,
																	"src": "7498:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 882,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "7516:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 884,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "7918:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 940,
													"nodeType": "Block",
													"src": "8135:208:3",
													"statements": [
														{
															"id": 939,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:3",
															"statements": [
																{
																	"expression": {
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 931,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "8294:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 934,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 561,
																				"src": "8294:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 935,
																			"indexExpression": {
																				"id": 933,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 862,
																				"src": "8306:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 936,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "8313:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 938,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:3"
																}
															]
														}
													]
												},
												"id": 941,
												"nodeType": "IfStatement",
												"src": "7914:429:3",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "7936:193:3",
													"statements": [
														{
															"id": 929,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:3",
															"statements": [
																{
																	"expression": {
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 923,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 869,
																				"src": "8081:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:3",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 569,
																			"src": "8081:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "8099:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 928,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 943,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "8367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "8373:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "8377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 942,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "8358:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "EmitStatement",
												"src": "8353:30:3"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7237:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7263:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:3"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:3"
									},
									"scope": 1150,
									"src": "7220:1170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "8789:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "8803:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 971,
												"nodeType": "IfStatement",
												"src": "8799:91:3",
												"trueBody": {
													"id": 970,
													"nodeType": "Block",
													"src": "8826:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 964,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 963,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "8847:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 969,
															"nodeType": "RevertStatement",
															"src": "8840:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 973,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "8919:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "8928:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "8899:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:3"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "8748:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "8765:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:3"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:3"
									},
									"scope": 1150,
									"src": "8733:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "9315:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 990,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "9329:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 991,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "9325:89:3",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "9352:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 997,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 996,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "9373:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "9366:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "9431:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "9452:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1005,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "9423:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:3"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "9274:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "9291:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:3"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:3"
									},
									"scope": 1150,
									"src": "9259:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "10075:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "10094:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "10101:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "10110:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1033,
															1101
														],
														"referencedDeclaration": 1101,
														"src": "10085:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:3"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10019:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10034:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "10051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:3"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:3"
									},
									"scope": 1150,
									"src": "10001:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "11074:389:3",
										"statements": [
											{
												"assignments": [
													1047
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "11084:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1046,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1045,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 574,
																"src": "11084:12:3"
															},
															"referencedDeclaration": 574,
															"src": "11084:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1048,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "11109:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$574_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "11141:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "11137:89:3",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "11162:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1058,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1057,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "11183:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1063,
															"nodeType": "RevertStatement",
															"src": "11176:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1066,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "11239:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1067,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "IfStatement",
												"src": "11235:90:3",
												"trueBody": {
													"id": 1079,
													"nodeType": "Block",
													"src": "11262:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1073,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1072,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "11283:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1078,
															"nodeType": "RevertStatement",
															"src": "11276:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1081,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "11334:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$574_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:3",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 567,
																"src": "11334:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1086,
															"indexExpression": {
																"id": 1083,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "11348:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1087,
														"indexExpression": {
															"id": 1084,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "11355:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "11366:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:3"
											},
											{
												"condition": {
													"id": 1091,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1042,
													"src": "11385:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1099,
												"nodeType": "IfStatement",
												"src": "11381:76:3",
												"trueBody": {
													"id": 1098,
													"nodeType": "Block",
													"src": "11396:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1093,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "11424:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1094,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "11431:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1095,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "11440:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1092,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "11415:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1097,
															"nodeType": "EmitStatement",
															"src": "11410:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "10994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "11009:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "11026:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "11041:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:3"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:3"
									},
									"scope": 1150,
									"src": "10976:487:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "11834:388:3",
										"statements": [
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "11844:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"id": 1114,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "11881:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "11888:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1113,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "11871:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1118,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "11910:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11935:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1120,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11935:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1119,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11930:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11944:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11930:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"nodeType": "IfStatement",
												"src": "11906:310:3",
												"trueBody": {
													"id": 1146,
													"nodeType": "Block",
													"src": "11949:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1125,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "11967:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1126,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "11986:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11967:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1135,
															"nodeType": "IfStatement",
															"src": "11963:130:3",
															"trueBody": {
																"id": 1134,
																"nodeType": "Block",
																"src": "11993:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1129,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1106,
																					"src": "12045:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1130,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "12054:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1131,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "12072:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1128,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "12018:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12018:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1133,
																		"nodeType": "RevertStatement",
																		"src": "12011:67:3"
																	}
																]
															}
														},
														{
															"id": 1145,
															"nodeType": "UncheckedBlock",
															"src": "12106:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1137,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "12143:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1138,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1106,
																				"src": "12150:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1139,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "12159:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1140,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "12178:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12159:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12185:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1136,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1033,
																				1101
																			],
																			"referencedDeclaration": 1101,
																			"src": "12134:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12134:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1144,
																	"nodeType": "ExpressionStatement",
																	"src": "12134:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "11770:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "11785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "11802:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:3"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:3"
									},
									"scope": 1150,
									"src": "11745:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1151,
							"src": "1281:10943:3",
							"usedErrors": [
								211,
								214,
								1437,
								1442,
								1447,
								1456,
								1461,
								1466
							],
							"usedEvents": [
								219,
								1574,
								1583
							]
						}
					],
					"src": "105:12120:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol",
					"exportedSymbols": {
						"ERC20PausableUpgradeable": [
							1203
						],
						"ERC20Upgradeable": [
							1150
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							1425
						]
					},
					"id": 1204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "../ERC20Upgradeable.sol",
							"id": 1154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1151,
							"src": "150:57:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1153,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1150,
										"src": "158:16:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "../../../utils/PausableUpgradeable.sol",
							"id": 1156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 1426,
							"src": "208:75:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1155,
										"name": "PausableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1425,
										"src": "216:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 1158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1204,
							"sourceUnit": 449,
							"src": "284:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1157,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "292:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1160,
										"name": "Initializable",
										"nameLocations": [
											"1090:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1090:13:4"
									},
									"id": 1161,
									"nodeType": "InheritanceSpecifier",
									"src": "1090:13:4"
								},
								{
									"baseName": {
										"id": 1162,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"1105:16:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1150,
										"src": "1105:16:4"
									},
									"id": 1163,
									"nodeType": "InheritanceSpecifier",
									"src": "1105:16:4"
								},
								{
									"baseName": {
										"id": 1164,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"1123:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "1123:19:4"
									},
									"id": 1165,
									"nodeType": "InheritanceSpecifier",
									"src": "1123:19:4"
								}
							],
							"canonicalName": "ERC20PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1159,
								"nodeType": "StructuredDocumentation",
								"src": "355:688:4",
								"text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1203,
							"linearizedBaseContracts": [
								1203,
								1425,
								1150,
								1467,
								1666,
								1640,
								1249,
								448
							],
							"name": "ERC20PausableUpgradeable",
							"nameLocation": "1062:24:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1207:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1170,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "1217:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1217:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "1217:27:4"
											}
										]
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1167,
												"name": "onlyInitializing",
												"nameLocations": [
													"1190:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1190:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1190:16:4"
										}
									],
									"name": "__ERC20Pausable_init",
									"nameLocation": "1158:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1178:2:4"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:4"
									},
									"scope": 1203,
									"src": "1149:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "1325:7:4",
										"statements": []
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1177,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1176,
												"name": "onlyInitializing",
												"nameLocations": [
													"1308:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1308:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1308:16:4"
										}
									],
									"name": "__ERC20Pausable_init_unchained",
									"nameLocation": "1266:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:2:4"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1325:0:4"
									},
									"scope": 1203,
									"src": "1257:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										949
									],
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1561:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1585:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "1591:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "1595:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1193,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1571:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20PausableUpgradeable_$1203_$",
																"typeString": "type(contract super ERC20PausableUpgradeable)"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1577:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 949,
														"src": "1571:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1571:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "1571:30:4"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "1337:121:4",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1190,
												"name": "whenNotPaused",
												"nameLocations": [
													"1547:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1327,
												"src": "1547:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1547:13:4"
										}
									],
									"name": "_update",
									"nameLocation": "1472:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1189,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1538:8:4"
									},
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1488:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1480:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1502:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1494:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1514:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1506:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:41:4"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:0:4"
									},
									"scope": 1203,
									"src": "1463:145:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1204,
							"src": "1044:566:4",
							"usedErrors": [
								211,
								214,
								1288,
								1291,
								1437,
								1442,
								1447,
								1456,
								1461,
								1466
							],
							"usedEvents": [
								219,
								1280,
								1285,
								1574,
								1583
							]
						}
					],
					"src": "124:1487:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1249
						],
						"Initializable": [
							448
						]
					},
					"id": 1250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1250,
							"sourceUnit": 449,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1206,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1209,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:5"
									},
									"id": 1210,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1208,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1249,
							"linearizedBaseContracts": [
								1249,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1213,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1212,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 1249,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1218,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 1249,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1227,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1229,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 1249,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1236,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1235,
												"id": 1238,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 1249,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1244,
												"id": 1246,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 1249,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1250,
							"src": "688:505:5",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1249
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							1425
						]
					},
					"id": 1426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1251,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 1253,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 1250,
							"src": "128:67:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1252,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1249,
										"src": "136:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1426,
							"sourceUnit": 449,
							"src": "196:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1254,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1257,
										"name": "Initializable",
										"nameLocations": [
											"742:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "742:13:6"
									},
									"id": 1258,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:6"
								},
								{
									"baseName": {
										"id": 1259,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1249,
										"src": "757:18:6"
									},
									"id": 1260,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:6"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1256,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1425,
							"linearizedBaseContracts": [
								1425,
								1249,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:6",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 1264,
									"members": [
										{
											"constant": false,
											"id": 1263,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1264,
											"src": "886:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1262,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:6",
									"nodeType": "StructDefinition",
									"scope": 1425,
									"src": "853:52:6",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1267,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "1023:117:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1265,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 1266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "1227:82:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:6",
													"nodeType": "YulBlock",
													"src": "1246:57:6",
													"statements": [
														{
															"nativeSrc": "1260:33:6",
															"nodeType": "YulAssignment",
															"src": "1260:33:6",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:6",
																"nodeType": "YulIdentifier",
																"src": "1270:23:6"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1271,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1267,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:6",
														"valueSize": 1
													}
												],
												"id": 1273,
												"nodeType": "InlineAssembly",
												"src": "1237:66:6"
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:6"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1200:25:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 1270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1269,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1264,
														"src": "1200:15:6"
													},
													"referencedDeclaration": 1264,
													"src": "1200:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:6"
									},
									"scope": 1425,
									"src": "1147:162:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1280,
									"name": "Paused",
									"nameLocation": "1399:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1406:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:6"
									},
									"src": "1393:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1285,
									"name": "Unpaused",
									"nameLocation": "1510:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "1519:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:6"
									},
									"src": "1504:32:6"
								},
								{
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:6",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1288,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:6"
									},
									"src": "1623:22:6"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:6",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1291,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:6"
									},
									"src": "1736:22:6"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "1889:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1297,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "1899:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:6"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:6",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1294,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1872:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:6"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:6"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:6"
									},
									"scope": 1425,
									"src": "1836:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "2002:93:6",
										"statements": [
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "2012:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1307,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1306,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "2012:15:6"
															},
															"referencedDeclaration": 1264,
															"src": "2012:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1309,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "2040:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1264_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:6"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1312,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "2071:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1263,
														"src": "2071:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:6"
											}
										]
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1303,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1985:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:6"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:6"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:6"
									},
									"scope": 1425,
									"src": "1939:156:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "2306:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1322,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "2316:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:6"
											},
											{
												"id": 1325,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:6"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1327,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:6"
									},
									"src": "2281:72:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "2553:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1330,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "2563:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:6"
											},
											{
												"id": 1333,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:6"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1335,
									"name": "whenPaused",
									"nameLocation": "2540:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:6"
									},
									"src": "2531:66:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "2745:92:6",
										"statements": [
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "2755:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1342,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1341,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "2755:15:6"
															},
															"referencedDeclaration": 1264,
															"src": "2755:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1344,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "2783:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1264_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:6"
											},
											{
												"expression": {
													"expression": {
														"id": 1347,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "2821:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:6",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1263,
													"src": "2821:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1349,
												"nodeType": "Return",
												"src": "2814:16:6"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:6"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2739:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:6"
									},
									"scope": 1425,
									"src": "2692:145:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "2956:77:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1355,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "2970:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "2966:61:6",
												"trueBody": {
													"id": 1360,
													"nodeType": "Block",
													"src": "2980:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1357,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "3001:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1359,
															"nodeType": "RevertStatement",
															"src": "2994:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:6",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:6"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:6"
									},
									"scope": 1425,
									"src": "2905:128:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "3153:78:6",
										"statements": [
											{
												"condition": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1367,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "3168:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1374,
												"nodeType": "IfStatement",
												"src": "3163:62:6",
												"trueBody": {
													"id": 1373,
													"nodeType": "Block",
													"src": "3178:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1370,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "3199:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1372,
															"nodeType": "RevertStatement",
															"src": "3192:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:6",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:6"
									},
									"scope": 1425,
									"src": "3105:126:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "3415:127:6",
										"statements": [
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "3425:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1383,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1382,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "3425:15:6"
															},
															"referencedDeclaration": 1264,
															"src": "3425:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1385,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "3453:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1264_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:6"
											},
											{
												"expression": {
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1388,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "3484:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1263,
														"src": "3484:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1395,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "3522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1394,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3515:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "EmitStatement",
												"src": "3510:25:6"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1379,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1327,
												"src": "3401:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:6"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:6"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:6"
									},
									"scope": 1425,
									"src": "3366:176:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "3722:130:6",
										"statements": [
											{
												"assignments": [
													1408
												],
												"declarations": [
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1423,
														"src": "3732:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1407,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1406,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1264,
																"src": "3732:15:6"
															},
															"referencedDeclaration": 1264,
															"src": "3732:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1409,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "3760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1264_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:6"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1412,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "3791:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1264_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1263,
														"src": "3791:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1419,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "3832:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1418,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "3823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "EmitStatement",
												"src": "3818:27:6"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1404,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1403,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "3711:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:6"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:6"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:6"
									},
									"scope": 1425,
									"src": "3674:178:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1426,
							"src": "701:3153:6",
							"usedErrors": [
								211,
								214,
								1288,
								1291
							],
							"usedEvents": [
								219,
								1280,
								1285
							]
						}
					],
					"src": "102:3753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1562
						],
						"IERC20Errors": [
							1467
						],
						"IERC721Errors": [
							1515
						]
					},
					"id": 1563,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1427,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1428,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:7",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1467,
							"linearizedBaseContracts": [
								1467
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1437,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "654:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "670:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "687:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:7"
									},
									"src": "623:80:7"
								},
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1442,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "891:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:7"
									},
									"src": "866:41:7"
								},
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1447,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1104:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:7"
									},
									"src": "1077:45:7"
								},
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:7",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1456,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1511:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1528:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1547:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:7"
									},
									"src": "1478:85:7"
								},
								{
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1461,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "1775:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:7"
									},
									"src": "1748:45:7"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:7",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1466,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "2025:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:7"
									},
									"src": "1999:43:7"
								}
							],
							"scope": 1563,
							"src": "280:1764:7",
							"usedErrors": [
								1437,
								1442,
								1447,
								1456,
								1461,
								1466
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1468,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:7",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1515,
							"linearizedBaseContracts": [
								1515
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:7",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1473,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "2469:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:7"
									},
									"src": "2444:40:7"
								},
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:7",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1478,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2656:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:7"
									},
									"src": "2627:46:7"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:7",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1487,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3016:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3033:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:7"
									},
									"src": "2973:75:7"
								},
								{
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1492,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "3237:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:7"
									},
									"src": "3211:42:7"
								},
								{
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1497,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "3451:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:7"
									},
									"src": "3423:46:7"
								},
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1504,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3760:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "3778:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:7"
									},
									"src": "3727:68:7"
								},
								{
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1509,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4008:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:7"
									},
									"src": "3980:46:7"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1514,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "4262:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:7"
									},
									"src": "4234:46:7"
								}
							],
							"scope": 1563,
							"src": "2190:2092:7",
							"usedErrors": [
								1473,
								1478,
								1487,
								1492,
								1497,
								1504,
								1509,
								1514
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1516,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:7",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1562,
							"linearizedBaseContracts": [
								1562
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1527,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4860:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4876:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4893:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4909:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:7"
									},
									"src": "4827:99:7"
								},
								{
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1532,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "5116:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:7"
									},
									"src": "5089:43:7"
								},
								{
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1537,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "5331:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:7"
									},
									"src": "5302:47:7"
								},
								{
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1544,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "5651:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "5669:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:7"
									},
									"src": "5616:68:7"
								},
								{
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1549,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "5898:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:7"
									},
									"src": "5869:47:7"
								},
								{
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1554,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6153:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:7"
									},
									"src": "6124:47:7"
								},
								{
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:7",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1561,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "6494:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "6513:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:7"
									},
									"src": "6462:73:7"
								}
							],
							"scope": 1563,
							"src": "4430:2107:7",
							"usedErrors": [
								1527,
								1532,
								1537,
								1544,
								1549,
								1554,
								1561
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1640
						]
					},
					"id": 1641,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1564,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1565,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:8",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1640,
							"linearizedBaseContracts": [
								1640
							],
							"name": "IERC20",
							"nameLocation": "214:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1574,
									"name": "Transfer",
									"nameLocation": "396:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "405:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "427:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "447:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:8"
									},
									"src": "390:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1583,
									"name": "Approval",
									"nameLocation": "627:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "636:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "659:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:8"
									},
									"src": "621:78:8"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:8",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "821:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:8"
									},
									"scope": 1640,
									"src": "775:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:8",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:8"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:8"
									},
									"scope": 1640,
									"src": "912:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:8",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "1234:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:8"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "1267:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:8"
									},
									"scope": 1640,
									"src": "1204:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1567:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1622:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:8"
									},
									"scope": 1640,
									"src": "1548:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:8",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2326:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:8"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:8"
									},
									"scope": 1640,
									"src": "2309:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "2712:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "2726:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "2738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:8"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "2771:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:8"
									},
									"scope": 1640,
									"src": "2690:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1641,
							"src": "204:2575:8",
							"usedErrors": [],
							"usedEvents": [
								1574,
								1583
							]
						}
					],
					"src": "106:2674:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1640
						],
						"IERC20Metadata": [
							1666
						]
					},
					"id": 1667,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1642,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1644,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1667,
							"sourceUnit": 1641,
							"src": "151:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1643,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1640,
										"src": "159:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1646,
										"name": "IERC20",
										"nameLocations": [
											"306:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1640,
										"src": "306:6:9"
									},
									"id": 1647,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:9"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1645,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:9",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1666,
							"linearizedBaseContracts": [
								1666,
								1640
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:9",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:9"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "417:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:9"
									},
									"scope": 1666,
									"src": "378:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:9",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:9"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "540:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:9"
									},
									"scope": 1666,
									"src": "499:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:9",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:9"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "674:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1662,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:9"
									},
									"scope": 1666,
									"src": "631:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1667,
							"src": "278:405:9",
							"usedErrors": [],
							"usedEvents": [
								1574,
								1583
							]
						}
					],
					"src": "125:559:9"
				},
				"id": 9
			},
			"contracts/SkyToken.sol": {
				"ast": {
					"absolutePath": "contracts/SkyToken.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1249
						],
						"ERC20PausableUpgradeable": [
							1203
						],
						"ERC20Upgradeable": [
							1150
						],
						"IERC20": [
							1640
						],
						"IERC20Errors": [
							1467
						],
						"IERC20Metadata": [
							1666
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							1425
						],
						"ReentrancyGuardUpgradeable": [
							533
						],
						"SkyToken": [
							2037
						]
					},
					"id": 2038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1668,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 1151,
							"src": "58:78:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 195,
							"src": "137:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 449,
							"src": "213:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol",
							"id": 1672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 1204,
							"src": "289:97:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2038,
							"sourceUnit": 534,
							"src": "387:85:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1675,
										"name": "Initializable",
										"nameLocations": [
											"662:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "662:13:10"
									},
									"id": 1676,
									"nodeType": "InheritanceSpecifier",
									"src": "662:13:10"
								},
								{
									"baseName": {
										"id": 1677,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"682:16:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1150,
										"src": "682:16:10"
									},
									"id": 1678,
									"nodeType": "InheritanceSpecifier",
									"src": "682:16:10"
								},
								{
									"baseName": {
										"id": 1679,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"705:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "705:18:10"
									},
									"id": 1680,
									"nodeType": "InheritanceSpecifier",
									"src": "705:18:10"
								},
								{
									"baseName": {
										"id": 1681,
										"name": "ERC20PausableUpgradeable",
										"nameLocations": [
											"730:24:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1203,
										"src": "730:24:10"
									},
									"id": 1682,
									"nodeType": "InheritanceSpecifier",
									"src": "730:24:10"
								},
								{
									"baseName": {
										"id": 1683,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"760:26:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "760:26:10"
									},
									"id": 1684,
									"nodeType": "InheritanceSpecifier",
									"src": "760:26:10"
								}
							],
							"canonicalName": "SkyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1674,
								"nodeType": "StructuredDocumentation",
								"src": "474:161:10",
								"text": " @title SkyToken\n @dev Sky Token (SKY) 的主要合约实现\n 实现了可升级的 ERC20 代币标准，包含完整的安全特性和扩展功能"
							},
							"fullyImplemented": true,
							"id": 2037,
							"linearizedBaseContracts": [
								2037,
								533,
								1203,
								1425,
								194,
								1150,
								1467,
								1666,
								1640,
								1249,
								448
							],
							"name": "SkyToken",
							"nameLocation": "645:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1687,
									"mutability": "constant",
									"name": "INITIAL_SUPPLY",
									"nameLocation": "845:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "820:59:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1685,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "820:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130305f3030305f303030",
										"id": 1686,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "862:17:10",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"value": "100_000_000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1690,
									"mutability": "constant",
									"name": "MAX_TOTAL_SUPPLY",
									"nameLocation": "934:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "909:63:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1688,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "909:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "315f3030305f3030305f303030",
										"id": 1689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "953:19:10",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"value": "1_000_000_000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1693,
									"mutability": "constant",
									"name": "CURRENT_VERSION",
									"nameLocation": "1030:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1005:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1691,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1005:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1048:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9d888e86",
									"id": 1695,
									"mutability": "mutable",
									"name": "currentVersion",
									"nameLocation": "1075:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1060:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1694,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1060:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "50f7c204",
									"id": 1697,
									"mutability": "mutable",
									"name": "maxTokenSupply",
									"nameLocation": "1110:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1095:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1696,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1095:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "18ab42c5",
									"id": 1700,
									"mutability": "constant",
									"name": "MINT_LIMIT_PER_TX",
									"nameLocation": "1185:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1161:59:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1698,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1161:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "315f3030305f303030",
										"id": 1699,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1205:15:10",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"value": "1_000_000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "20fc56a6",
									"id": 1703,
									"mutability": "constant",
									"name": "BURN_LIMIT_PER_TX",
									"nameLocation": "1288:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1264:57:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1701,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1264:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530305f303030",
										"id": 1702,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1308:13:10",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"value": "500_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 1707,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "1423:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1391:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1706,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1704,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1399:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1391:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1705,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1410:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4004c7a2",
									"id": 1711,
									"mutability": "mutable",
									"name": "isMinterRole",
									"nameLocation": "1474:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2037,
									"src": "1442:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1710,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1708,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1450:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1442:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1709,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1461:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "92d364d140f902817e5eaa71cedfe20bae2a3c66a2725cee3d9a51d73f052fb6",
									"id": 1717,
									"name": "BlacklistStatusUpdated",
									"nameLocation": "1523:22:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1562:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1546:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1576:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1571:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1571:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1545:38:10"
									},
									"src": "1517:67:10"
								},
								{
									"anonymous": false,
									"eventSelector": "0d0ce8757673482ba416ece0cb058dacd500bb9d737793d5f34ad5548dd4e2fb",
									"id": 1723,
									"name": "MinterRoleUpdated",
									"nameLocation": "1595:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1629:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1613:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1643:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1638:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1638:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:38:10"
									},
									"src": "1589:62:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e510c8c53e4242bccd9841e6f1f5fe02545bdad7b524c54c8ff90ffda089e278",
									"id": 1729,
									"name": "TokensBurnedBy",
									"nameLocation": "1662:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "1693:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1677:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1709:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1701:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:40:10"
									},
									"src": "1656:61:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e98063832b4ff0356868961b75f7f49b096b14ea066c9725301ad197f2f63147",
									"id": 1735,
									"name": "TokensMintedTo",
									"nameLocation": "1728:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1759:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1743:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1778:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1770:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:43:10"
									},
									"src": "1722:64:10"
								},
								{
									"errorSelector": "a2dda647",
									"id": 1737,
									"name": "SupplyExceedsMax",
									"nameLocation": "1825:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:2:10"
									},
									"src": "1819:25:10"
								},
								{
									"errorSelector": "d5c03226",
									"id": 1739,
									"name": "ExceedsMintLimit",
									"nameLocation": "1855:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:2:10"
									},
									"src": "1849:25:10"
								},
								{
									"errorSelector": "b8e71236",
									"id": 1741,
									"name": "ExceedsBurnLimit",
									"nameLocation": "1885:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1901:2:10"
									},
									"src": "1879:25:10"
								},
								{
									"errorSelector": "ab73372a",
									"id": 1743,
									"name": "AccountIsBlacklisted",
									"nameLocation": "1915:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1935:2:10"
									},
									"src": "1909:29:10"
								},
								{
									"errorSelector": "21607339",
									"id": 1745,
									"name": "InvalidTokenAmount",
									"nameLocation": "1949:18:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:2:10"
									},
									"src": "1943:27:10"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 1747,
									"name": "InvalidAddress",
									"nameLocation": "1981:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1995:2:10"
									},
									"src": "1975:23:10"
								},
								{
									"errorSelector": "cd2e8e80",
									"id": 1749,
									"name": "NotAuthorizedMinter",
									"nameLocation": "2009:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:10"
									},
									"src": "2003:28:10"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "2104:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1753,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2114:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2114:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "2114:22:10"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "2037:48:10",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1757,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:10"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2104:0:10"
									},
									"scope": 2037,
									"src": "2090:53:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "2307:472:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "536b7920546f6b656e",
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2330:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d79272623f4cd27e31546a514f7819a00b99e72afb9e9ba4c9bef804e3d382b",
																"typeString": "literal_string \"Sky Token\""
															},
															"value": "Sky Token"
														},
														{
															"hexValue": "534b59",
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2343:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95392aadfbf63b71869d1a3bacd6ec37f460ca478e6309f18cd1363a4a2ddf4f",
																"typeString": "literal_string \"SKY\""
															},
															"value": "SKY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_8d79272623f4cd27e31546a514f7819a00b99e72afb9e9ba4c9bef804e3d382b",
																"typeString": "literal_string \"Sky Token\""
															},
															{
																"typeIdentifier": "t_stringliteral_95392aadfbf63b71869d1a3bacd6ec37f460ca478e6309f18cd1363a4a2ddf4f",
																"typeString": "literal_string \"SKY\""
															}
														],
														"id": 1763,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "2317:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1767,
												"nodeType": "ExpressionStatement",
												"src": "2317:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1769,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2374:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2378:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2374:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1768,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2359:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2359:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "2359:26:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1773,
														"name": "__ERC20Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "2395:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2395:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "2395:22:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1776,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "2427:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "2427:24:10"
											},
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1779,
														"name": "maxTokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2470:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1780,
														"name": "MAX_TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "2487:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2470:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "2470:33:10"
											},
											{
												"expression": {
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1783,
														"name": "currentVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "2513:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1784,
														"name": "CURRENT_VERSION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "2530:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2513:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "2513:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1788,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2606:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2610:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2606:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1790,
															"name": "INITIAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "2618:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1787,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "2600:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "2600:33:10"
											},
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1793,
															"name": "isMinterRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "2691:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1796,
														"indexExpression": {
															"expression": {
																"id": 1794,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2704:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2708:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2704:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2691:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2718:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2691:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "2691:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1801,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2755:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2759:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2755:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2767:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1800,
														"name": "MinterRoleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "2737:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "EmitStatement",
												"src": "2732:40:10"
											}
										]
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "2149:112:10",
										"text": " @dev 初始化 Sky Token 合约\n 设置代币名称、符号，并分配初始供应量"
									},
									"functionSelector": "8129fc1c",
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1761,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1760,
												"name": "initializer",
												"nameLocations": [
													"2295:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2295:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2295:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "2275:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2285:2:10"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2307:0:10"
									},
									"scope": 2037,
									"src": "2266:513:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										949,
										1202
									],
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "3133:204:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1820,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "3174:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1822,
														"indexExpression": {
															"id": 1821,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3188:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3174:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1823,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "3197:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1825,
														"indexExpression": {
															"id": 1824,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "3211:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3197:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3174:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1830,
												"nodeType": "IfStatement",
												"src": "3170:75:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1827,
															"name": "AccountIsBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "3223:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3223:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1829,
													"nodeType": "RevertStatement",
													"src": "3216:29:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1834,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3314:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1835,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "3320:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1836,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "3324:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1831,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3300:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SkyToken_$2037_$",
																"typeString": "type(contract super SkyToken)"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3306:7:10",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "3300:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "3300:30:10"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "2785:185:10",
										"text": " @dev 重写 _update 函数以实现黑名单检查和暂停功能\n @param from 发送方地址\n @param to 接收方地址\n @param value 转账金额"
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2984:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1818,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1816,
												"name": "ERC20Upgradeable",
												"nameLocations": [
													"3089:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1150,
												"src": "3089:16:10"
											},
											{
												"id": 1817,
												"name": "ERC20PausableUpgradeable",
												"nameLocations": [
													"3107:24:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1203,
												"src": "3107:24:10"
											}
										],
										"src": "3080:52:10"
									},
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3009:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "3001:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3001:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3031:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "3023:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3051:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "3043:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2991:71:10"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3133:0:10"
									},
									"scope": 2037,
									"src": "2975:362:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "3557:430:10",
										"statements": [
											{
												"condition": {
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3571:25:10",
													"subExpression": {
														"baseExpression": {
															"id": 1850,
															"name": "isMinterRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "3572:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1853,
														"indexExpression": {
															"expression": {
																"id": 1851,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3585:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3589:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3585:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3572:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1858,
												"nodeType": "IfStatement",
												"src": "3567:59:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1855,
															"name": "NotAuthorizedMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3605:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3605:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1857,
													"nodeType": "RevertStatement",
													"src": "3598:28:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1859,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "3640:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3661:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3653:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1860,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3653:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3653:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3640:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1868,
												"nodeType": "IfStatement",
												"src": "3636:52:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1865,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "3672:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3672:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1867,
													"nodeType": "RevertStatement",
													"src": "3665:23:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1869,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "3702:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3712:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3702:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "3698:44:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1872,
															"name": "InvalidTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "3722:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3722:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1874,
													"nodeType": "RevertStatement",
													"src": "3715:27:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1876,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "3756:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1877,
														"name": "MINT_LIMIT_PER_TX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "3765:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3756:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1882,
												"nodeType": "IfStatement",
												"src": "3752:57:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1879,
															"name": "ExceedsMintLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "3791:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3791:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1881,
													"nodeType": "RevertStatement",
													"src": "3784:25:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1883,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "3823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3823:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "3839:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3823:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1887,
														"name": "maxTokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "3848:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3823:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "3819:70:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1889,
															"name": "SupplyExceedsMax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "3871:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3871:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1891,
													"nodeType": "RevertStatement",
													"src": "3864:25:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1894,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "3914:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1895,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "3925:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1893,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "3908:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "3908:24:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1899,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "3962:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1900,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "3973:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1898,
														"name": "TokensMintedTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "3947:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3947:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1902,
												"nodeType": "EmitStatement",
												"src": "3942:38:10"
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "3347:134:10",
										"text": " @dev 铸造新代币（仅授权铸币者）\n @param recipient 接收地址\n @param amount 铸造数量"
									},
									"functionSelector": "40c10f19",
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1848,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1847,
												"name": "nonReentrant",
												"nameLocations": [
													"3544:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "3544:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3544:12:10"
										}
									],
									"name": "mint",
									"nameLocation": "3495:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3508:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "3500:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3527:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "3519:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:35:10"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3557:0:10"
									},
									"scope": 2037,
									"src": "3486:501:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "4130:225:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1912,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "4144:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4154:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4144:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1918,
												"nodeType": "IfStatement",
												"src": "4140:44:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1915,
															"name": "InvalidTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "4164:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4164:20:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1917,
													"nodeType": "RevertStatement",
													"src": "4157:27:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1919,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "4198:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1920,
														"name": "BURN_LIMIT_PER_TX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "4207:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4198:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "IfStatement",
												"src": "4194:57:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1922,
															"name": "ExceedsBurnLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "4233:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4233:18:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1924,
													"nodeType": "RevertStatement",
													"src": "4226:25:10"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1927,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "4276:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4276:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1929,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "4290:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1926,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "4270:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "4270:27:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1933,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "4327:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4327:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1935,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "4341:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1932,
														"name": "TokensBurnedBy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1729,
														"src": "4312:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1937,
												"nodeType": "EmitStatement",
												"src": "4307:41:10"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "3997:70:10",
										"text": " @dev 销毁代币\n @param amount 销毁数量"
									},
									"functionSelector": "42966c68",
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1910,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1909,
												"name": "nonReentrant",
												"nameLocations": [
													"4117:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "4117:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4117:12:10"
										}
									],
									"name": "burn",
									"nameLocation": "4081:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4094:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "4086:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:16:10"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4130:0:10"
									},
									"scope": 2037,
									"src": "4072:283:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "4583:156:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1949,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "4597:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4616:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4608:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1950,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4608:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4597:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1958,
												"nodeType": "IfStatement",
												"src": "4593:50:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1955,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "4627:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4627:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1957,
													"nodeType": "RevertStatement",
													"src": "4620:23:10"
												}
											},
											{
												"expression": {
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1959,
															"name": "isMinterRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "4653:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1961,
														"indexExpression": {
															"id": 1960,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "4666:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4653:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1962,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "4677:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4653:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "4653:30:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1966,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "4716:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1967,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "4725:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1965,
														"name": "MinterRoleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "4698:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4698:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "EmitStatement",
												"src": "4693:39:10"
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "4365:141:10",
										"text": " @dev 设置铸币权限（仅所有者）\n @param account 目标地址\n @param status 是否授予铸币权限"
									},
									"functionSelector": "cb177b1e",
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1946,
												"name": "onlyOwner",
												"nameLocations": [
													"4573:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4573:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4573:9:10"
										}
									],
									"name": "setMinterRole",
									"nameLocation": "4520:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4542:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "4534:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4534:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4556:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "4551:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4551:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4533:30:10"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4583:0:10"
									},
									"scope": 2037,
									"src": "4511:228:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "4975:162:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1981,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "4989:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5008:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5000:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1982,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5000:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5000:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4989:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1990,
												"nodeType": "IfStatement",
												"src": "4985:50:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1987,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "5019:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5019:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1989,
													"nodeType": "RevertStatement",
													"src": "5012:23:10"
												}
											},
											{
												"expression": {
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1991,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "5045:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1993,
														"indexExpression": {
															"id": 1992,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "5059:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5045:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1994,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "5070:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5045:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "5045:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1998,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "5114:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "5123:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1997,
														"name": "BlacklistStatusUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "5091:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2001,
												"nodeType": "EmitStatement",
												"src": "5086:44:10"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "4749:141:10",
										"text": " @dev 更新黑名单状态（仅所有者）\n @param account 目标地址\n @param status 是否加入黑名单"
									},
									"functionSelector": "b8360806",
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1979,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1978,
												"name": "onlyOwner",
												"nameLocations": [
													"4965:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4965:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4965:9:10"
										}
									],
									"name": "updateBlacklistStatus",
									"nameLocation": "4904:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4934:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "4926:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "4948:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "4943:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4943:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4925:30:10"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4975:0:10"
									},
									"scope": 2037,
									"src": "4895:242:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "5250:25:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2009,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "5260:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5260:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "5260:8:10"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "5143:66:10",
										"text": " @dev 暂停所有代币转移（仅所有者）"
									},
									"functionSelector": "8456cb59",
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2006,
												"name": "onlyOwner",
												"nameLocations": [
													"5240:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5240:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5240:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "5223:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5228:2:10"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5250:0:10"
									},
									"scope": 2037,
									"src": "5214:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "5384:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2019,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "5394:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2021,
												"nodeType": "ExpressionStatement",
												"src": "5394:10:10"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "5281:60:10",
										"text": " @dev 恢复代币转移（仅所有者）"
									},
									"functionSelector": "3f4ba83a",
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2017,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2016,
												"name": "onlyOwner",
												"nameLocations": [
													"5374:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5374:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5374:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "5355:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5362:2:10"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5384:0:10"
									},
									"scope": 2037,
									"src": "5346:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "5633:45:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2031,
														"name": "isMinterRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "5650:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2033,
													"indexExpression": {
														"id": 2032,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2026,
														"src": "5663:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5650:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2030,
												"id": 2034,
												"nodeType": "Return",
												"src": "5643:28:10"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "5421:140:10",
										"text": " @dev 检查地址是否具有铸币权限\n @param account 要检查的地址\n @return bool 是否是铸币者"
									},
									"functionSelector": "099db017",
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasMinterRole",
									"nameLocation": "5575:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5597:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "5589:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5589:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5588:17:10"
									},
									"returnParameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "5627:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5627:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5626:6:10"
									},
									"scope": 2037,
									"src": "5566:112:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2038,
							"src": "636:5044:10",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1288,
								1291,
								1437,
								1442,
								1447,
								1456,
								1461,
								1466,
								1737,
								1739,
								1741,
								1743,
								1745,
								1747,
								1749
							],
							"usedEvents": [
								41,
								219,
								1280,
								1285,
								1574,
								1583,
								1717,
								1723,
								1729,
								1735
							]
						}
					],
					"src": "32:5648:10"
				},
				"id": 10
			}
		}
	}
}