{
	"id": "ed591082dc3dcc8fcd97e0c805b4ea0c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HoldAirdrop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title BitMap Library\n * @notice 使用紧凑的位图存储来标记已领取状态，每个存储槽可以存储 256 个布尔值\n */\nlibrary BitMap {\n    struct Map {\n        mapping(uint256 => uint256) bits;\n    }\n\n    function get(Map storage map, uint256 index) internal view returns (bool) {\n        uint256 bucket = index >> 8;\n        uint256 mask = 1 << (index & 0xff);\n        return map.bits[bucket] & mask != 0;\n    }\n\n    function set(Map storage map, uint256 index) internal {\n        uint256 bucket = index >> 8;\n        uint256 mask = 1 << (index & 0xff);\n        map.bits[bucket] |= mask;\n    }\n}\n\n/**\n * @title GasOptimizedAirdrop\n * @notice 一个经过 gas 优化的空投合约，使用了多种 gas 优化技术\n */\ncontract GasOptimizedAirdrop is Ownable(msg.sender), ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using BitMap for BitMap.Map;\n\n    // 状态变量\n    IERC20 public immutable token;\n    uint96 public immutable minEthRequired;\n    \n    struct AirdropConfig {\n        uint96 airdropAmount;\n        uint96 maxAirdropSupply;\n        uint64 totalAirdropped;\n    }\n    AirdropConfig public config;\n    \n    BitMap.Map private claimedBitMap;\n    \n    uint64 public airdropStartTime;\n    uint64 public airdropEndTime;\n    \n    // 自定义错误\n    error NotActive();\n    error AlreadyClaimed();\n    error InsufficientBalance();\n    error MaxSupplyReached();\n    error InvalidAddress();\n    error InvalidAmount();\n    error InvalidTime();\n    \n    // 事件\n    event AirdropClaimed(address indexed user, uint96 amount);\n    event AirdropConfigUpdated(uint96 amount, uint96 maxSupply);\n    \n    /**\n     * @notice 构造函数初始化空投合约\n     * @param _token 空投代币地址\n     * @param _minEthRequired 最小 ETH 持有量要求\n     * @param _airdropAmount 每个地址可领取的代币数量\n     * @param _maxSupply 最大空投供应量\n     * @param _startTime 空投开始时间\n     * @param _endTime 空投结束时间\n     */\n    constructor(\n        address _token,\n        uint96 _minEthRequired,\n        uint96 _airdropAmount,\n        uint96 _maxSupply,\n        uint64 _startTime,\n        uint64 _endTime\n    ) {\n        // 参数验证\n        if (_token == address(0)) revert InvalidAddress();\n        if (_airdropAmount == 0) revert InvalidAmount();\n        if (_maxSupply < _airdropAmount) revert InvalidAmount();\n        if (_startTime >= _endTime) revert InvalidTime();\n        if (_startTime < block.timestamp) revert InvalidTime();\n        \n        // 初始化状态变量\n        token = IERC20(_token);\n        minEthRequired = _minEthRequired;\n        \n        config.airdropAmount = _airdropAmount;\n        config.maxAirdropSupply = _maxSupply;\n        config.totalAirdropped = 0;\n        \n        airdropStartTime = _startTime;\n        airdropEndTime = _endTime;\n    }\n    \n    \n    /**\n     * @notice 用户领取空投\n     * @dev 包含多重检查和状态更新的主要功能\n     */\n    function claimAirdrop() external nonReentrant {\n        _validateClaim(msg.sender);\n        \n        uint256 userIndex = uint256(uint160(msg.sender));\n        claimedBitMap.set(userIndex);\n        \n        unchecked {\n            config.totalAirdropped += uint64(config.airdropAmount);\n        }\n        \n        token.safeTransfer(msg.sender, config.airdropAmount);\n        \n        emit AirdropClaimed(msg.sender, config.airdropAmount);\n    }\n    \n    /**\n     * @notice 验证领取资格\n     * @param user 要验证的用户地址\n     */\n    function _validateClaim(address user) private view {\n        if (block.timestamp < airdropStartTime || block.timestamp > airdropEndTime) {\n            revert NotActive();\n        }\n        \n        if (claimedBitMap.get(uint256(uint160(user)))) {\n            revert AlreadyClaimed();\n        }\n        \n        if (user.balance < minEthRequired) {\n            revert InsufficientBalance();\n        }\n        \n        unchecked {\n            if (config.totalAirdropped + config.airdropAmount > config.maxAirdropSupply) {\n                revert MaxSupplyReached();\n            }\n        }\n    }\n    \n    /**\n     * @notice 批量检查地址是否有资格领取空投\n     * @param users 要检查的地址数组\n     * @return eligibility 每个地址的资格状态数组\n     */\n    function checkEligibility(address[] calldata users) external view \n        returns (bool[] memory eligibility) \n    {\n        eligibility = new bool[](users.length);\n        uint256 currentTime = block.timestamp;\n        \n        for (uint256 i = 0; i < users.length;) {\n            eligibility[i] = _isEligible(users[i], currentTime);\n            unchecked { ++i; }\n        }\n    }\n    \n    /**\n     * @notice 检查单个地址的领取资格\n     * @param user 要检查的地址\n     * @param currentTime 当前时间戳\n     * @return 是否有资格领取\n     */\n    function _isEligible(address user, uint256 currentTime) private view returns (bool) {\n        return \n            currentTime >= airdropStartTime &&\n            currentTime <= airdropEndTime &&\n            user.balance >= minEthRequired &&\n            !claimedBitMap.get(uint256(uint160(user))) &&\n            (config.totalAirdropped + config.airdropAmount <= config.maxAirdropSupply);\n    }\n\n    /**\n     * @notice 紧急提取合约中的代币（仅合约所有者）\n     */\n    function emergencyWithdraw() external onlyOwner {\n        uint256 balance = token.balanceOf(address(this));\n        if (balance == 0) revert InsufficientBalance();\n        token.safeTransfer(msg.sender, balance);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/HoldAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/HoldAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/HoldAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/HoldAirdrop.sol": {
				"BitMap": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "BitMap Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HoldAirdrop.sol\":441:919  library BitMap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HoldAirdrop.sol\":441:919  library BitMap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207dd025f9f8cfb2f6f8a46a72d382aedc30b72abcf5cf615ce44d9eaa1cd40aea64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207dd025f9f8cfb2f6f8a46a72d382aedc30b72abcf5cf615ce44d9eaa1cd40aea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xD025F9F8CFB2F6F8A46A72D382AEDC30B72ABCF5CF615CE44D9EAA1CD40A 0xEA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "441:478:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207dd025f9f8cfb2f6f8a46a72d382aedc30b72abcf5cf615ce44d9eaa1cd40aea64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xD025F9F8CFB2F6F8A46A72D382AEDC30B72ABCF5CF615CE44D9EAA1CD40A 0xEA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "441:478:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"get(struct BitMap.Map storage pointer,uint256)": "infinite",
								"set(struct BitMap.Map storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 441,
									"end": 919,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 441,
									"end": 919,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207dd025f9f8cfb2f6f8a46a72d382aedc30b72abcf5cf615ce44d9eaa1cd40aea64736f6c634300081a0033",
									".code": [
										{
											"begin": 441,
											"end": 919,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 441,
											"end": 919,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 441,
											"end": 919,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 441,
											"end": 919,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 441,
											"end": 919,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 919,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 441,
											"end": 919,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 919,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 441,
											"end": 919,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/HoldAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMap Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u4f7f\\u7528\\u7d27\\u51d1\\u7684\\u4f4d\\u56fe\\u5b58\\u50a8\\u6765\\u6807\\u8bb0\\u5df2\\u9886\\u53d6\\u72b6\\u6001\\uff0c\\u6bcf\\u4e2a\\u5b58\\u50a8\\u69fd\\u53ef\\u4ee5\\u5b58\\u50a8 256 \\u4e2a\\u5e03\\u5c14\\u503c\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HoldAirdrop.sol\":\"BitMap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/HoldAirdrop.sol\":{\"keccak256\":\"0xdafd1f92af8b320389c1873858f39ff926a7e5de47d902350bde64f5be666154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b734dcbb96d71289a334a54e7cc624ea70f0d686aac6a40505e68a93853e4e66\",\"dweb:/ipfs/QmVx9gVgwkwEZaKmCZnmSCcDRoZr3yH2ZtmiYXMyZVCJhP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "使用紧凑的位图存储来标记已领取状态，每个存储槽可以存储 256 个布尔值",
						"version": 1
					}
				},
				"GasOptimizedAirdrop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_minEthRequired",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "_airdropAmount",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "_maxSupply",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "_startTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "_endTime",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AlreadyClaimed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTime",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MaxSupplyReached",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotActive",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								}
							],
							"name": "AirdropClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "amount",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maxSupply",
									"type": "uint96"
								}
							],
							"name": "AirdropConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "airdropEndTime",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "airdropStartTime",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								}
							],
							"name": "checkEligibility",
							"outputs": [
								{
									"internalType": "bool[]",
									"name": "eligibility",
									"type": "bool[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "config",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "airdropAmount",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "maxAirdropSupply",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "totalAirdropped",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minEthRequired",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"checkEligibility(address[])": {
								"params": {
									"users": "要检查的地址数组"
								},
								"returns": {
									"eligibility": "每个地址的资格状态数组"
								}
							},
							"claimAirdrop()": {
								"details": "包含多重检查和状态更新的主要功能"
							},
							"constructor": {
								"params": {
									"_airdropAmount": "每个地址可领取的代币数量",
									"_endTime": "空投结束时间",
									"_maxSupply": "最大空投供应量",
									"_minEthRequired": "最小 ETH 持有量要求",
									"_startTime": "空投开始时间",
									"_token": "空投代币地址"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "GasOptimizedAirdrop",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/HoldAirdrop.sol\":1044:5894  contract GasOptimizedAirdrop is Ownable(msg.sender), ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/HoldAirdrop.sol\":2303:3158  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/HoldAirdrop.sol\":1084:1094  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/HoldAirdrop.sol\":2543:2544  0 */\n  0x00\n    /* \"contracts/HoldAirdrop.sol\":2525:2545  _token == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/HoldAirdrop.sol\":2525:2531  _token */\n  dup7\n    /* \"contracts/HoldAirdrop.sol\":2525:2545  _token == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/HoldAirdrop.sol\":2521:2570  if (_token == address(0)) revert InvalidAddress() */\n  tag_15\n  jumpi\n    /* \"contracts/HoldAirdrop.sol\":2554:2570  InvalidAddress() */\n  mload(0x40)\n  0xe6c4247b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/HoldAirdrop.sol\":2521:2570  if (_token == address(0)) revert InvalidAddress() */\ntag_15:\n    /* \"contracts/HoldAirdrop.sol\":2602:2603  0 */\n  0x00\n    /* \"contracts/HoldAirdrop.sol\":2584:2598  _airdropAmount */\n  dup5\n    /* \"contracts/HoldAirdrop.sol\":2584:2603  _airdropAmount == 0 */\n  0xffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/HoldAirdrop.sol\":2580:2627  if (_airdropAmount == 0) revert InvalidAmount() */\n  tag_16\n  jumpi\n    /* \"contracts/HoldAirdrop.sol\":2612:2627  InvalidAmount() */\n  mload(0x40)\n  0x2c5211c600000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/HoldAirdrop.sol\":2580:2627  if (_airdropAmount == 0) revert InvalidAmount() */\ntag_16:\n    /* \"contracts/HoldAirdrop.sol\":2654:2668  _airdropAmount */\n  dup4\n    /* \"contracts/HoldAirdrop.sol\":2641:2668  _maxSupply < _airdropAmount */\n  0xffffffffffffffffffffffff\n  and\n    /* \"contracts/HoldAirdrop.sol\":2641:2651  _maxSupply */\n  dup4\n    /* \"contracts/HoldAirdrop.sol\":2641:2668  _maxSupply < _airdropAmount */\n  0xffffffffffffffffffffffff\n  and\n  lt\n    /* \"contracts/HoldAirdrop.sol\":2637:2692  if (_maxSupply < _airdropAmount) revert InvalidAmount() */\n  iszero\n  tag_17\n  jumpi\n    /* \"contracts/HoldAirdrop.sol\":2677:2692  InvalidAmount() */\n  mload(0x40)\n  0x2c5211c600000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/HoldAirdrop.sol\":2637:2692  if (_maxSupply < _airdropAmount) revert InvalidAmount() */\ntag_17:\n    /* \"contracts/HoldAirdrop.sol\":2720:2728  _endTime */\n  dup1\n    /* \"contracts/HoldAirdrop.sol\":2706:2728  _startTime >= _endTime */\n  0xffffffffffffffff\n  and\n    /* \"contracts/HoldAirdrop.sol\":2706:2716  _startTime */\n  dup3\n    /* \"contracts/HoldAirdrop.sol\":2706:2728  _startTime >= _endTime */\n  0xffffffffffffffff\n  and\n  lt\n    /* \"contracts/HoldAirdrop.sol\":2702:2750  if (_startTime >= _endTime) revert InvalidTime() */\n  tag_18\n  jumpi\n    /* \"contracts/HoldAirdrop.sol\":2737:2750  InvalidTime() */\n  mload(0x40)\n  0x6f7eac2600000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/HoldAirdrop.sol\":2702:2750  if (_startTime >= _endTime) revert InvalidTime() */\ntag_18:\n    /* \"contracts/HoldAirdrop.sol\":2777:2792  block.timestamp */\n  timestamp\n    /* \"contracts/HoldAirdrop.sol\":2764:2774  _startTime */\n  dup3\n    /* \"contracts/HoldAirdrop.sol\":2764:2792  _startTime < block.timestamp */\n  0xffffffffffffffff\n  and\n  lt\n    /* \"contracts/HoldAirdrop.sol\":2760:2814  if (_startTime < block.timestamp) revert InvalidTime() */\n  iszero\n  tag_19\n  jumpi\n    /* \"contracts/HoldAirdrop.sol\":2801:2814  InvalidTime() */\n  mload(0x40)\n  0x6f7eac2600000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/HoldAirdrop.sol\":2760:2814  if (_startTime < block.timestamp) revert InvalidTime() */\ntag_19:\n    /* \"contracts/HoldAirdrop.sol\":2881:2887  _token */\n  dup6\n    /* \"contracts/HoldAirdrop.sol\":2866:2888  token = IERC20(_token) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/HoldAirdrop.sol\":2915:2930  _minEthRequired */\n  dup5\n    /* \"contracts/HoldAirdrop.sol\":2898:2930  minEthRequired = _minEthRequired */\n  0xffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/HoldAirdrop.sol\":2972:2986  _airdropAmount */\n  dup4\n    /* \"contracts/HoldAirdrop.sol\":2949:2955  config */\n  0x02\n    /* \"contracts/HoldAirdrop.sol\":2949:2969  config.airdropAmount */\n  0x00\n  add\n  0x00\n    /* \"contracts/HoldAirdrop.sol\":2949:2986  config.airdropAmount = _airdropAmount */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HoldAirdrop.sol\":3022:3032  _maxSupply */\n  dup3\n    /* \"contracts/HoldAirdrop.sol\":2996:3002  config */\n  0x02\n    /* \"contracts/HoldAirdrop.sol\":2996:3019  config.maxAirdropSupply */\n  0x00\n  add\n  0x0c\n    /* \"contracts/HoldAirdrop.sol\":2996:3032  config.maxAirdropSupply = _maxSupply */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HoldAirdrop.sol\":3067:3068  0 */\n  0x00\n    /* \"contracts/HoldAirdrop.sol\":3042:3048  config */\n  0x02\n    /* \"contracts/HoldAirdrop.sol\":3042:3064  config.totalAirdropped */\n  0x00\n  add\n  0x18\n    /* \"contracts/HoldAirdrop.sol\":3042:3068  config.totalAirdropped = 0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HoldAirdrop.sol\":3106:3116  _startTime */\n  dup2\n    /* \"contracts/HoldAirdrop.sol\":3087:3103  airdropStartTime */\n  0x04\n  0x00\n    /* \"contracts/HoldAirdrop.sol\":3087:3116  airdropStartTime = _startTime */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HoldAirdrop.sol\":3143:3151  _endTime */\n  dup1\n    /* \"contracts/HoldAirdrop.sol\":3126:3140  airdropEndTime */\n  0x04\n  0x08\n    /* \"contracts/HoldAirdrop.sol\":3126:3151  airdropEndTime = _endTime */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HoldAirdrop.sol\":2303:3158  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/HoldAirdrop.sol\":1044:5894  contract GasOptimizedAirdrop is Ownable(msg.sender), ReentrancyGuard {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_42\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_44\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_45:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_47\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:954   */\ntag_29:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:947   */\n  0xffffffffffffffffffffffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:948   */\n  and\n    /* \"#utility.yul\":899:948   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:954   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":960:1080   */\ntag_30:\n    /* \"#utility.yul\":1032:1055   */\n  tag_50\n    /* \"#utility.yul\":1049:1054   */\n  dup2\n    /* \"#utility.yul\":1032:1055   */\n  tag_29\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1025:1030   */\n  dup2\n    /* \"#utility.yul\":1022:1056   */\n  eq\n    /* \"#utility.yul\":1012:1074   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1070:1071   */\n  0x00\n    /* \"#utility.yul\":1067:1068   */\n  dup1\n    /* \"#utility.yul\":1060:1072   */\n  revert\n    /* \"#utility.yul\":1012:1074   */\ntag_51:\n    /* \"#utility.yul\":960:1080   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1086:1227   */\ntag_31:\n    /* \"#utility.yul\":1142:1147   */\n  0x00\n    /* \"#utility.yul\":1173:1179   */\n  dup2\n    /* \"#utility.yul\":1167:1180   */\n  mload\n    /* \"#utility.yul\":1158:1180   */\n  swap1\n  pop\n    /* \"#utility.yul\":1189:1221   */\n  tag_53\n    /* \"#utility.yul\":1215:1220   */\n  dup2\n    /* \"#utility.yul\":1189:1221   */\n  tag_30\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1086:1227   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1233:1334   */\ntag_32:\n    /* \"#utility.yul\":1269:1276   */\n  0x00\n    /* \"#utility.yul\":1309:1327   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1302:1307   */\n  dup3\n    /* \"#utility.yul\":1298:1328   */\n  and\n    /* \"#utility.yul\":1287:1328   */\n  swap1\n  pop\n    /* \"#utility.yul\":1233:1334   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1340:1460   */\ntag_33:\n    /* \"#utility.yul\":1412:1435   */\n  tag_56\n    /* \"#utility.yul\":1429:1434   */\n  dup2\n    /* \"#utility.yul\":1412:1435   */\n  tag_32\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1405:1410   */\n  dup2\n    /* \"#utility.yul\":1402:1436   */\n  eq\n    /* \"#utility.yul\":1392:1454   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1392:1454   */\ntag_57:\n    /* \"#utility.yul\":1340:1460   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1466:1607   */\ntag_34:\n    /* \"#utility.yul\":1522:1527   */\n  0x00\n    /* \"#utility.yul\":1553:1559   */\n  dup2\n    /* \"#utility.yul\":1547:1560   */\n  mload\n    /* \"#utility.yul\":1538:1560   */\n  swap1\n  pop\n    /* \"#utility.yul\":1569:1601   */\n  tag_59\n    /* \"#utility.yul\":1595:1600   */\n  dup2\n    /* \"#utility.yul\":1569:1601   */\n  tag_33\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1466:1607   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1613:2737   */\ntag_3:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup1\n    /* \"#utility.yul\":1739:1745   */\n  0x00\n    /* \"#utility.yul\":1747:1753   */\n  dup1\n    /* \"#utility.yul\":1755:1761   */\n  0x00\n    /* \"#utility.yul\":1763:1769   */\n  dup1\n    /* \"#utility.yul\":1812:1815   */\n  0xc0\n    /* \"#utility.yul\":1800:1809   */\n  dup8\n    /* \"#utility.yul\":1791:1798   */\n  dup10\n    /* \"#utility.yul\":1787:1810   */\n  sub\n    /* \"#utility.yul\":1783:1816   */\n  slt\n    /* \"#utility.yul\":1780:1900   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1819:1898   */\n  tag_62\n  tag_23\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1780:1900   */\ntag_61:\n    /* \"#utility.yul\":1939:1940   */\n  0x00\n    /* \"#utility.yul\":1964:2028   */\n  tag_63\n    /* \"#utility.yul\":2020:2027   */\n  dup10\n    /* \"#utility.yul\":2011:2017   */\n  dup3\n    /* \"#utility.yul\":2000:2009   */\n  dup11\n    /* \"#utility.yul\":1996:2018   */\n  add\n    /* \"#utility.yul\":1964:2028   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1954:2028   */\n  swap7\n  pop\n    /* \"#utility.yul\":1910:2038   */\n  pop\n    /* \"#utility.yul\":2077:2079   */\n  0x20\n    /* \"#utility.yul\":2103:2166   */\n  tag_64\n    /* \"#utility.yul\":2158:2165   */\n  dup10\n    /* \"#utility.yul\":2149:2155   */\n  dup3\n    /* \"#utility.yul\":2138:2147   */\n  dup11\n    /* \"#utility.yul\":2134:2156   */\n  add\n    /* \"#utility.yul\":2103:2166   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2093:2166   */\n  swap6\n  pop\n    /* \"#utility.yul\":2048:2176   */\n  pop\n    /* \"#utility.yul\":2215:2217   */\n  0x40\n    /* \"#utility.yul\":2241:2304   */\n  tag_65\n    /* \"#utility.yul\":2296:2303   */\n  dup10\n    /* \"#utility.yul\":2287:2293   */\n  dup3\n    /* \"#utility.yul\":2276:2285   */\n  dup11\n    /* \"#utility.yul\":2272:2294   */\n  add\n    /* \"#utility.yul\":2241:2304   */\n  tag_31\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2231:2304   */\n  swap5\n  pop\n    /* \"#utility.yul\":2186:2314   */\n  pop\n    /* \"#utility.yul\":2353:2355   */\n  0x60\n    /* \"#utility.yul\":2379:2442   */\n  tag_66\n    /* \"#utility.yul\":2434:2441   */\n  dup10\n    /* \"#utility.yul\":2425:2431   */\n  dup3\n    /* \"#utility.yul\":2414:2423   */\n  dup11\n    /* \"#utility.yul\":2410:2432   */\n  add\n    /* \"#utility.yul\":2379:2442   */\n  tag_31\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2369:2442   */\n  swap4\n  pop\n    /* \"#utility.yul\":2324:2452   */\n  pop\n    /* \"#utility.yul\":2491:2494   */\n  0x80\n    /* \"#utility.yul\":2518:2581   */\n  tag_67\n    /* \"#utility.yul\":2573:2580   */\n  dup10\n    /* \"#utility.yul\":2564:2570   */\n  dup3\n    /* \"#utility.yul\":2553:2562   */\n  dup11\n    /* \"#utility.yul\":2549:2571   */\n  add\n    /* \"#utility.yul\":2518:2581   */\n  tag_34\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2508:2581   */\n  swap3\n  pop\n    /* \"#utility.yul\":2462:2591   */\n  pop\n    /* \"#utility.yul\":2630:2633   */\n  0xa0\n    /* \"#utility.yul\":2657:2720   */\n  tag_68\n    /* \"#utility.yul\":2712:2719   */\n  dup10\n    /* \"#utility.yul\":2703:2709   */\n  dup3\n    /* \"#utility.yul\":2692:2701   */\n  dup11\n    /* \"#utility.yul\":2688:2710   */\n  add\n    /* \"#utility.yul\":2657:2720   */\n  tag_34\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2647:2720   */\n  swap2\n  pop\n    /* \"#utility.yul\":2601:2730   */\n  pop\n    /* \"#utility.yul\":1613:2737   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":2743:2861   */\ntag_35:\n    /* \"#utility.yul\":2830:2854   */\n  tag_70\n    /* \"#utility.yul\":2848:2853   */\n  dup2\n    /* \"#utility.yul\":2830:2854   */\n  tag_26\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2825:2828   */\n  dup3\n    /* \"#utility.yul\":2818:2855   */\n  mstore\n    /* \"#utility.yul\":2743:2861   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2867:3089   */\ntag_10:\n    /* \"#utility.yul\":2960:2964   */\n  0x00\n    /* \"#utility.yul\":2998:3000   */\n  0x20\n    /* \"#utility.yul\":2987:2996   */\n  dup3\n    /* \"#utility.yul\":2983:3001   */\n  add\n    /* \"#utility.yul\":2975:3001   */\n  swap1\n  pop\n    /* \"#utility.yul\":3011:3082   */\n  tag_72\n    /* \"#utility.yul\":3079:3080   */\n  0x00\n    /* \"#utility.yul\":3068:3077   */\n  dup4\n    /* \"#utility.yul\":3064:3081   */\n  add\n    /* \"#utility.yul\":3055:3061   */\n  dup5\n    /* \"#utility.yul\":3011:3082   */\n  tag_35\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2867:3089   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/HoldAirdrop.sol\":1044:5894  contract GasOptimizedAirdrop is Ownable(msg.sender), ReentrancyGuard {... */\ntag_20:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x33cc19d79febe2413fb9e204aeb684d47982ef5754538b90a83e403603eda384\")\n  0x00\n  assignImmutable(\"0x02e99feef5a1e2f43445227b1399ed133121f299fd78ca24b0865c8cd3641060\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/HoldAirdrop.sol\":1044:5894  contract GasOptimizedAirdrop is Ownable(msg.sender), ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79502c55\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x79502c55\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x806019c1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x40306fb6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x43074c7f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x58262359\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5b88349d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/HoldAirdrop.sol\":1498:1528  uint64 public airdropStartTime */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HoldAirdrop.sol\":1240:1278  uint96 public immutable minEthRequired */\n    tag_4:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HoldAirdrop.sol\":4617:4999  function checkEligibility(address[] calldata users) external view ... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HoldAirdrop.sol\":3284:3728  function claimAirdrop() external nonReentrant {... */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/HoldAirdrop.sol\":1417:1444  AirdropConfig public config */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HoldAirdrop.sol\":1534:1562  uint64 public airdropEndTime */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HoldAirdrop.sol\":5674:5892  function emergencyWithdraw() external onlyOwner {... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/HoldAirdrop.sol\":1205:1234  IERC20 public immutable token */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HoldAirdrop.sol\":1498:1528  uint64 public airdropStartTime */\n    tag_16:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":1240:1278  uint96 public immutable minEthRequired */\n    tag_20:\n      immutable(\"0x33cc19d79febe2413fb9e204aeb684d47982ef5754538b90a83e403603eda384\")\n      dup2\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":4617:4999  function checkEligibility(address[] calldata users) external view ... */\n    tag_26:\n        /* \"contracts/HoldAirdrop.sol\":4701:4726  bool[] memory eligibility */\n      0x60\n        /* \"contracts/HoldAirdrop.sol\":4768:4773  users */\n      dup3\n      dup3\n        /* \"contracts/HoldAirdrop.sol\":4768:4780  users.length */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4757:4781  new bool[](users.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n    tag_55:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_58\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_58:\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4743:4781  eligibility = new bool[](users.length) */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4791:4810  uint256 currentTime */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":4813:4828  block.timestamp */\n      timestamp\n        /* \"contracts/HoldAirdrop.sol\":4791:4828  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4852:4861  uint256 i */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":4847:4993  for (uint256 i = 0; i < users.length;) {... */\n    tag_59:\n        /* \"contracts/HoldAirdrop.sol\":4871:4876  users */\n      dup5\n      dup5\n        /* \"contracts/HoldAirdrop.sol\":4871:4883  users.length */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4867:4868  i */\n      dup2\n        /* \"contracts/HoldAirdrop.sol\":4867:4883  i < users.length */\n      lt\n        /* \"contracts/HoldAirdrop.sol\":4847:4993  for (uint256 i = 0; i < users.length;) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/HoldAirdrop.sol\":4917:4951  _isEligible(users[i], currentTime) */\n      tag_62\n        /* \"contracts/HoldAirdrop.sol\":4929:4934  users */\n      dup6\n      dup6\n        /* \"contracts/HoldAirdrop.sol\":4935:4936  i */\n      dup4\n        /* \"contracts/HoldAirdrop.sol\":4929:4937  users[i] */\n      dup2\n      dup2\n      lt\n      tag_63\n      jumpi\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n    tag_63:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_66:\n        /* \"contracts/HoldAirdrop.sol\":4939:4950  currentTime */\n      dup4\n        /* \"contracts/HoldAirdrop.sol\":4917:4928  _isEligible */\n      tag_67\n        /* \"contracts/HoldAirdrop.sol\":4917:4951  _isEligible(users[i], currentTime) */\n      jump\t// in\n    tag_62:\n        /* \"contracts/HoldAirdrop.sol\":4900:4911  eligibility */\n      dup4\n        /* \"contracts/HoldAirdrop.sol\":4912:4913  i */\n      dup3\n        /* \"contracts/HoldAirdrop.sol\":4900:4914  eligibility[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_65\n      jump\t// in\n    tag_69:\n    tag_68:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/HoldAirdrop.sol\":4900:4951  eligibility[i] = _isEligible(users[i], currentTime) */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4977:4980  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4847:4993  for (uint256 i = 0; i < users.length;) {... */\n      jump(tag_59)\n    tag_60:\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4733:4999  {... */\n      pop\n        /* \"contracts/HoldAirdrop.sol\":4617:4999  function checkEligibility(address[] calldata users) external view ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":3284:3728  function claimAirdrop() external nonReentrant {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_71\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_72\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/HoldAirdrop.sol\":3340:3366  _validateClaim(msg.sender) */\n      tag_74\n        /* \"contracts/HoldAirdrop.sol\":3355:3365  msg.sender */\n      caller\n        /* \"contracts/HoldAirdrop.sol\":3340:3354  _validateClaim */\n      tag_75\n        /* \"contracts/HoldAirdrop.sol\":3340:3366  _validateClaim(msg.sender) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/HoldAirdrop.sol\":3385:3402  uint256 userIndex */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":3421:3431  msg.sender */\n      caller\n        /* \"contracts/HoldAirdrop.sol\":3405:3433  uint256(uint160(msg.sender)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3385:3433  uint256 userIndex = uint256(uint160(msg.sender)) */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":3443:3471  claimedBitMap.set(userIndex) */\n      tag_76\n        /* \"contracts/HoldAirdrop.sol\":3461:3470  userIndex */\n      dup2\n        /* \"contracts/HoldAirdrop.sol\":3443:3456  claimedBitMap */\n      0x03\n        /* \"contracts/HoldAirdrop.sol\":3443:3460  claimedBitMap.set */\n      tag_77\n      swap1\n        /* \"contracts/HoldAirdrop.sol\":3443:3471  claimedBitMap.set(userIndex) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"contracts/HoldAirdrop.sol\":3547:3553  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":3547:3567  config.airdropAmount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3514:3520  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":3514:3536  config.totalAirdropped */\n      0x00\n      add\n      0x18\n        /* \"contracts/HoldAirdrop.sol\":3514:3568  config.totalAirdropped += uint64(config.airdropAmount) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/HoldAirdrop.sol\":3597:3649  token.safeTransfer(msg.sender, config.airdropAmount) */\n      tag_78\n        /* \"contracts/HoldAirdrop.sol\":3616:3626  msg.sender */\n      caller\n        /* \"contracts/HoldAirdrop.sol\":3628:3634  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":3628:3648  config.airdropAmount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3597:3649  token.safeTransfer(msg.sender, config.airdropAmount) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3597:3602  token */\n      immutable(\"0x02e99feef5a1e2f43445227b1399ed133121f299fd78ca24b0865c8cd3641060\")\n        /* \"contracts/HoldAirdrop.sol\":3597:3615  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_79\n      swap1\n        /* \"contracts/HoldAirdrop.sol\":3597:3649  token.safeTransfer(msg.sender, config.airdropAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"contracts/HoldAirdrop.sol\":3688:3698  msg.sender */\n      caller\n        /* \"contracts/HoldAirdrop.sol\":3673:3721  AirdropClaimed(msg.sender, config.airdropAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x61302c72df1000ca12d41c5583685720a0cbd3233372643a553eb042d670f076\n        /* \"contracts/HoldAirdrop.sol\":3700:3706  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":3700:3720  config.airdropAmount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3673:3721  AirdropClaimed(msg.sender, config.airdropAmount) */\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/HoldAirdrop.sol\":3330:3728  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_81\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/HoldAirdrop.sol\":3284:3728  function claimAirdrop() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":1417:1444  AirdropConfig public config */\n    tag_34:\n      0x02\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":1534:1562  uint64 public airdropEndTime */\n    tag_38:\n      0x04\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":5674:5892  function emergencyWithdraw() external onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/HoldAirdrop.sol\":5732:5747  uint256 balance */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":5750:5755  token */\n      immutable(\"0x02e99feef5a1e2f43445227b1399ed133121f299fd78ca24b0865c8cd3641060\")\n        /* \"contracts/HoldAirdrop.sol\":5750:5765  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/HoldAirdrop.sol\":5774:5778  this */\n      address\n        /* \"contracts/HoldAirdrop.sol\":5750:5780  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/HoldAirdrop.sol\":5732:5780  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":5805:5806  0 */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":5794:5801  balance */\n      dup2\n        /* \"contracts/HoldAirdrop.sol\":5794:5806  balance == 0 */\n      sub\n        /* \"contracts/HoldAirdrop.sol\":5790:5836  if (balance == 0) revert InsufficientBalance() */\n      tag_98\n      jumpi\n        /* \"contracts/HoldAirdrop.sol\":5815:5836  InsufficientBalance() */\n      mload(0x40)\n      0xf4d678b800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/HoldAirdrop.sol\":5790:5836  if (balance == 0) revert InsufficientBalance() */\n    tag_98:\n        /* \"contracts/HoldAirdrop.sol\":5846:5885  token.safeTransfer(msg.sender, balance) */\n      tag_99\n        /* \"contracts/HoldAirdrop.sol\":5865:5875  msg.sender */\n      caller\n        /* \"contracts/HoldAirdrop.sol\":5877:5884  balance */\n      dup3\n        /* \"contracts/HoldAirdrop.sol\":5846:5851  token */\n      immutable(\"0x02e99feef5a1e2f43445227b1399ed133121f299fd78ca24b0865c8cd3641060\")\n        /* \"contracts/HoldAirdrop.sol\":5846:5864  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_79\n      swap1\n        /* \"contracts/HoldAirdrop.sol\":5846:5885  token.safeTransfer(msg.sender, balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"contracts/HoldAirdrop.sol\":5722:5892  {... */\n      pop\n        /* \"contracts/HoldAirdrop.sol\":5674:5892  function emergencyWithdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":1205:1234  IERC20 public immutable token */\n    tag_51:\n      immutable(\"0x02e99feef5a1e2f43445227b1399ed133121f299fd78ca24b0865c8cd3641060\")\n      dup2\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":5191:5582  function _isEligible(address user, uint256 currentTime) private view returns (bool) {... */\n    tag_67:\n        /* \"contracts/HoldAirdrop.sol\":5269:5273  bool */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":5320:5336  airdropStartTime */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5305:5336  currentTime >= airdropStartTime */\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5305:5316  currentTime */\n      dup3\n        /* \"contracts/HoldAirdrop.sol\":5305:5336  currentTime >= airdropStartTime */\n      lt\n      iszero\n        /* \"contracts/HoldAirdrop.sol\":5305:5381  currentTime >= airdropStartTime &&... */\n      dup1\n      iszero\n      tag_107\n      jumpi\n      pop\n        /* \"contracts/HoldAirdrop.sol\":5367:5381  airdropEndTime */\n      0x04\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5352:5381  currentTime <= airdropEndTime */\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5352:5363  currentTime */\n      dup3\n        /* \"contracts/HoldAirdrop.sol\":5352:5381  currentTime <= airdropEndTime */\n      gt\n      iszero\n        /* \"contracts/HoldAirdrop.sol\":5305:5381  currentTime >= airdropStartTime &&... */\n    tag_107:\n        /* \"contracts/HoldAirdrop.sol\":5305:5427  currentTime >= airdropStartTime &&... */\n      dup1\n      iszero\n      tag_108\n      jumpi\n      pop\n        /* \"contracts/HoldAirdrop.sol\":5413:5427  minEthRequired */\n      immutable(\"0x33cc19d79febe2413fb9e204aeb684d47982ef5754538b90a83e403603eda384\")\n        /* \"contracts/HoldAirdrop.sol\":5397:5427  user.balance >= minEthRequired */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5397:5401  user */\n      dup4\n        /* \"contracts/HoldAirdrop.sol\":5397:5409  user.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/HoldAirdrop.sol\":5397:5427  user.balance >= minEthRequired */\n      lt\n      iszero\n        /* \"contracts/HoldAirdrop.sol\":5305:5427  currentTime >= airdropStartTime &&... */\n    tag_108:\n        /* \"contracts/HoldAirdrop.sol\":5305:5485  currentTime >= airdropStartTime &&... */\n      dup1\n      iszero\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/HoldAirdrop.sol\":5444:5485  claimedBitMap.get(uint256(uint160(user))) */\n      tag_110\n        /* \"contracts/HoldAirdrop.sol\":5478:5482  user */\n      dup4\n        /* \"contracts/HoldAirdrop.sol\":5462:5484  uint256(uint160(user)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5444:5457  claimedBitMap */\n      0x03\n        /* \"contracts/HoldAirdrop.sol\":5444:5461  claimedBitMap.get */\n      tag_111\n      swap1\n        /* \"contracts/HoldAirdrop.sol\":5444:5485  claimedBitMap.get(uint256(uint160(user))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/HoldAirdrop.sol\":5443:5485  !claimedBitMap.get(uint256(uint160(user))) */\n      iszero\n        /* \"contracts/HoldAirdrop.sol\":5305:5485  currentTime >= airdropStartTime &&... */\n    tag_109:\n        /* \"contracts/HoldAirdrop.sol\":5305:5575  currentTime >= airdropStartTime &&... */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"contracts/HoldAirdrop.sol\":5551:5557  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":5551:5574  config.maxAirdropSupply */\n      0x00\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5502:5574  config.totalAirdropped + config.airdropAmount <= config.maxAirdropSupply */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5527:5533  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":5527:5547  config.airdropAmount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5502:5508  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":5502:5524  config.totalAirdropped */\n      0x00\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":5502:5547  config.totalAirdropped + config.airdropAmount */\n      0xffffffffffffffff\n      and\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/HoldAirdrop.sol\":5502:5574  config.totalAirdropped + config.airdropAmount <= config.maxAirdropSupply */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/HoldAirdrop.sol\":5305:5575  currentTime >= airdropStartTime &&... */\n    tag_112:\n        /* \"contracts/HoldAirdrop.sol\":5285:5575  return ... */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":5191:5582  function _isEligible(address user, uint256 currentTime) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":3832:4424  function _validateClaim(address user) private view {... */\n    tag_75:\n        /* \"contracts/HoldAirdrop.sol\":3915:3931  airdropStartTime */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3897:3931  block.timestamp < airdropStartTime */\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3897:3912  block.timestamp */\n      timestamp\n        /* \"contracts/HoldAirdrop.sol\":3897:3931  block.timestamp < airdropStartTime */\n      lt\n        /* \"contracts/HoldAirdrop.sol\":3897:3967  block.timestamp < airdropStartTime || block.timestamp > airdropEndTime */\n      dup1\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/HoldAirdrop.sol\":3953:3967  airdropEndTime */\n      0x04\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3935:3967  block.timestamp > airdropEndTime */\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":3935:3950  block.timestamp */\n      timestamp\n        /* \"contracts/HoldAirdrop.sol\":3935:3967  block.timestamp > airdropEndTime */\n      gt\n        /* \"contracts/HoldAirdrop.sol\":3897:3967  block.timestamp < airdropStartTime || block.timestamp > airdropEndTime */\n    tag_120:\n        /* \"contracts/HoldAirdrop.sol\":3893:4012  if (block.timestamp < airdropStartTime || block.timestamp > airdropEndTime) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/HoldAirdrop.sol\":3990:4001  NotActive() */\n      mload(0x40)\n      0x80cb55e200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/HoldAirdrop.sol\":3893:4012  if (block.timestamp < airdropStartTime || block.timestamp > airdropEndTime) {... */\n    tag_121:\n        /* \"contracts/HoldAirdrop.sol\":4034:4075  claimedBitMap.get(uint256(uint160(user))) */\n      tag_122\n        /* \"contracts/HoldAirdrop.sol\":4068:4072  user */\n      dup2\n        /* \"contracts/HoldAirdrop.sol\":4052:4074  uint256(uint160(user)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":4034:4047  claimedBitMap */\n      0x03\n        /* \"contracts/HoldAirdrop.sol\":4034:4051  claimedBitMap.get */\n      tag_111\n      swap1\n        /* \"contracts/HoldAirdrop.sol\":4034:4075  claimedBitMap.get(uint256(uint160(user))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/HoldAirdrop.sol\":4030:4125  if (claimedBitMap.get(uint256(uint160(user)))) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/HoldAirdrop.sol\":4098:4114  AlreadyClaimed() */\n      mload(0x40)\n      0x646cf55800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/HoldAirdrop.sol\":4030:4125  if (claimedBitMap.get(uint256(uint160(user)))) {... */\n    tag_123:\n        /* \"contracts/HoldAirdrop.sol\":4162:4176  minEthRequired */\n      immutable(\"0x33cc19d79febe2413fb9e204aeb684d47982ef5754538b90a83e403603eda384\")\n        /* \"contracts/HoldAirdrop.sol\":4147:4176  user.balance < minEthRequired */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":4147:4151  user */\n      dup2\n        /* \"contracts/HoldAirdrop.sol\":4147:4159  user.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/HoldAirdrop.sol\":4147:4176  user.balance < minEthRequired */\n      lt\n        /* \"contracts/HoldAirdrop.sol\":4143:4231  if (user.balance < minEthRequired) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/HoldAirdrop.sol\":4199:4220  InsufficientBalance() */\n      mload(0x40)\n      0xf4d678b800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/HoldAirdrop.sol\":4143:4231  if (user.balance < minEthRequired) {... */\n    tag_124:\n        /* \"contracts/HoldAirdrop.sol\":4325:4331  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":4325:4348  config.maxAirdropSupply */\n      0x00\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":4277:4348  config.totalAirdropped + config.airdropAmount > config.maxAirdropSupply */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":4302:4308  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":4302:4322  config.airdropAmount */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":4277:4283  config */\n      0x02\n        /* \"contracts/HoldAirdrop.sol\":4277:4299  config.totalAirdropped */\n      0x00\n      add\n      0x18\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/HoldAirdrop.sol\":4277:4322  config.totalAirdropped + config.airdropAmount */\n      0xffffffffffffffff\n      and\n      add\n        /* \"contracts/HoldAirdrop.sol\":4277:4348  config.totalAirdropped + config.airdropAmount > config.maxAirdropSupply */\n      0xffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/HoldAirdrop.sol\":4273:4408  if (config.totalAirdropped + config.airdropAmount > config.maxAirdropSupply) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/HoldAirdrop.sol\":4375:4393  MaxSupplyReached() */\n      mload(0x40)\n      0xd05cb60900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/HoldAirdrop.sol\":4273:4408  if (config.totalAirdropped + config.airdropAmount > config.maxAirdropSupply) {... */\n    tag_125:\n        /* \"contracts/HoldAirdrop.sol\":3832:4424  function _validateClaim(address user) private view {... */\n      pop\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":741:917  function set(Map storage map, uint256 index) internal {... */\n    tag_77:\n        /* \"contracts/HoldAirdrop.sol\":805:819  uint256 bucket */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":831:832  8 */\n      0x08\n        /* \"contracts/HoldAirdrop.sol\":822:827  index */\n      dup3\n        /* \"contracts/HoldAirdrop.sol\":822:832  index >> 8 */\n      swap1\n      shr\n        /* \"contracts/HoldAirdrop.sol\":805:832  uint256 bucket = index >> 8 */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":842:854  uint256 mask */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":871:875  0xff */\n      0xff\n        /* \"contracts/HoldAirdrop.sol\":863:868  index */\n      dup4\n        /* \"contracts/HoldAirdrop.sol\":863:875  index & 0xff */\n      and\n        /* \"contracts/HoldAirdrop.sol\":857:858  1 */\n      0x01\n        /* \"contracts/HoldAirdrop.sol\":857:876  1 << (index & 0xff) */\n      swap1\n      shl\n        /* \"contracts/HoldAirdrop.sol\":842:876  uint256 mask = 1 << (index & 0xff) */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":906:910  mask */\n      dup1\n        /* \"contracts/HoldAirdrop.sol\":886:889  map */\n      dup5\n        /* \"contracts/HoldAirdrop.sol\":886:894  map.bits */\n      0x00\n      add\n        /* \"contracts/HoldAirdrop.sol\":886:902  map.bits[bucket] */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":895:901  bucket */\n      dup5\n        /* \"contracts/HoldAirdrop.sol\":886:902  map.bits[bucket] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":886:910  map.bits[bucket] |= mask */\n      dup3\n      dup3\n      sload\n      or\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/HoldAirdrop.sol\":795:917  {... */\n      pop\n      pop\n        /* \"contracts/HoldAirdrop.sol\":741:917  function set(Map storage map, uint256 index) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/HoldAirdrop.sol\":528:735  function get(Map storage map, uint256 index) internal view returns (bool) {... */\n    tag_111:\n        /* \"contracts/HoldAirdrop.sol\":596:600  bool */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":612:626  uint256 bucket */\n      dup1\n        /* \"contracts/HoldAirdrop.sol\":638:639  8 */\n      0x08\n        /* \"contracts/HoldAirdrop.sol\":629:634  index */\n      dup4\n        /* \"contracts/HoldAirdrop.sol\":629:639  index >> 8 */\n      swap1\n      shr\n        /* \"contracts/HoldAirdrop.sol\":612:639  uint256 bucket = index >> 8 */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":649:661  uint256 mask */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":678:682  0xff */\n      0xff\n        /* \"contracts/HoldAirdrop.sol\":670:675  index */\n      dup5\n        /* \"contracts/HoldAirdrop.sol\":670:682  index & 0xff */\n      and\n        /* \"contracts/HoldAirdrop.sol\":664:665  1 */\n      0x01\n        /* \"contracts/HoldAirdrop.sol\":664:683  1 << (index & 0xff) */\n      swap1\n      shl\n        /* \"contracts/HoldAirdrop.sol\":649:683  uint256 mask = 1 << (index & 0xff) */\n      swap1\n      pop\n        /* \"contracts/HoldAirdrop.sol\":727:728  0 */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":719:723  mask */\n      dup2\n        /* \"contracts/HoldAirdrop.sol\":700:703  map */\n      dup7\n        /* \"contracts/HoldAirdrop.sol\":700:708  map.bits */\n      0x00\n      add\n        /* \"contracts/HoldAirdrop.sol\":700:716  map.bits[bucket] */\n      0x00\n        /* \"contracts/HoldAirdrop.sol\":709:715  bucket */\n      dup6\n        /* \"contracts/HoldAirdrop.sol\":700:716  map.bits[bucket] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/HoldAirdrop.sol\":700:723  map.bits[bucket] & mask */\n      and\n        /* \"contracts/HoldAirdrop.sol\":700:728  map.bits[bucket] & mask != 0 */\n      eq\n      iszero\n        /* \"contracts/HoldAirdrop.sol\":693:728  return map.bits[bucket] & mask != 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/HoldAirdrop.sol\":528:735  function get(Map storage map, uint256 index) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_145)\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:108   */\n    tag_149:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:101   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:102   */\n      and\n        /* \"#utility.yul\":61:102   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":114:229   */\n    tag_150:\n        /* \"#utility.yul\":199:222   */\n      tag_189\n        /* \"#utility.yul\":216:221   */\n      dup2\n        /* \"#utility.yul\":199:222   */\n      tag_149\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":194:197   */\n      dup3\n        /* \"#utility.yul\":187:223   */\n      mstore\n        /* \"#utility.yul\":114:229   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":235:453   */\n    tag_18:\n        /* \"#utility.yul\":326:330   */\n      0x00\n        /* \"#utility.yul\":364:366   */\n      0x20\n        /* \"#utility.yul\":353:362   */\n      dup3\n        /* \"#utility.yul\":349:367   */\n      add\n        /* \"#utility.yul\":341:367   */\n      swap1\n      pop\n        /* \"#utility.yul\":377:446   */\n      tag_191\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":432:441   */\n      dup4\n        /* \"#utility.yul\":428:445   */\n      add\n        /* \"#utility.yul\":419:425   */\n      dup5\n        /* \"#utility.yul\":377:446   */\n      tag_150\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":235:453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":459:568   */\n    tag_151:\n        /* \"#utility.yul\":495:502   */\n      0x00\n        /* \"#utility.yul\":535:561   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":528:533   */\n      dup3\n        /* \"#utility.yul\":524:562   */\n      and\n        /* \"#utility.yul\":513:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":459:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:689   */\n    tag_152:\n        /* \"#utility.yul\":659:682   */\n      tag_194\n        /* \"#utility.yul\":676:681   */\n      dup2\n        /* \"#utility.yul\":659:682   */\n      tag_151\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":654:657   */\n      dup3\n        /* \"#utility.yul\":647:683   */\n      mstore\n        /* \"#utility.yul\":574:689   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":695:913   */\n    tag_22:\n        /* \"#utility.yul\":786:790   */\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x20\n        /* \"#utility.yul\":813:822   */\n      dup3\n        /* \"#utility.yul\":809:827   */\n      add\n        /* \"#utility.yul\":801:827   */\n      swap1\n      pop\n        /* \"#utility.yul\":837:906   */\n      tag_196\n        /* \"#utility.yul\":903:904   */\n      0x00\n        /* \"#utility.yul\":892:901   */\n      dup4\n        /* \"#utility.yul\":888:905   */\n      add\n        /* \"#utility.yul\":879:885   */\n      dup5\n        /* \"#utility.yul\":837:906   */\n      tag_152\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":695:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1117   */\n    tag_154:\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1106:1107   */\n      dup1\n        /* \"#utility.yul\":1099:1111   */\n      revert\n        /* \"#utility.yul\":1123:1240   */\n    tag_155:\n        /* \"#utility.yul\":1232:1233   */\n      0x00\n        /* \"#utility.yul\":1229:1230   */\n      dup1\n        /* \"#utility.yul\":1222:1234   */\n      revert\n        /* \"#utility.yul\":1246:1363   */\n    tag_156:\n        /* \"#utility.yul\":1355:1356   */\n      0x00\n        /* \"#utility.yul\":1352:1353   */\n      dup1\n        /* \"#utility.yul\":1345:1357   */\n      revert\n        /* \"#utility.yul\":1369:1486   */\n    tag_157:\n        /* \"#utility.yul\":1478:1479   */\n      0x00\n        /* \"#utility.yul\":1475:1476   */\n      dup1\n        /* \"#utility.yul\":1468:1480   */\n      revert\n        /* \"#utility.yul\":1492:1609   */\n    tag_158:\n        /* \"#utility.yul\":1601:1602   */\n      0x00\n        /* \"#utility.yul\":1598:1599   */\n      dup1\n        /* \"#utility.yul\":1591:1603   */\n      revert\n        /* \"#utility.yul\":1632:2200   */\n    tag_159:\n        /* \"#utility.yul\":1705:1713   */\n      0x00\n        /* \"#utility.yul\":1715:1721   */\n      dup1\n        /* \"#utility.yul\":1765:1768   */\n      dup4\n        /* \"#utility.yul\":1758:1762   */\n      0x1f\n        /* \"#utility.yul\":1750:1756   */\n      dup5\n        /* \"#utility.yul\":1746:1763   */\n      add\n        /* \"#utility.yul\":1742:1769   */\n      slt\n        /* \"#utility.yul\":1732:1854   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":1773:1852   */\n      tag_205\n      tag_156\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1732:1854   */\n    tag_204:\n        /* \"#utility.yul\":1886:1892   */\n      dup3\n        /* \"#utility.yul\":1873:1893   */\n      calldataload\n        /* \"#utility.yul\":1863:1893   */\n      swap1\n      pop\n        /* \"#utility.yul\":1916:1934   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1908:1914   */\n      dup2\n        /* \"#utility.yul\":1905:1935   */\n      gt\n        /* \"#utility.yul\":1902:2019   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1938:2017   */\n      tag_207\n      tag_157\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1902:2019   */\n    tag_206:\n        /* \"#utility.yul\":2052:2056   */\n      0x20\n        /* \"#utility.yul\":2044:2050   */\n      dup4\n        /* \"#utility.yul\":2040:2057   */\n      add\n        /* \"#utility.yul\":2028:2057   */\n      swap2\n      pop\n        /* \"#utility.yul\":2106:2109   */\n      dup4\n        /* \"#utility.yul\":2098:2102   */\n      0x20\n        /* \"#utility.yul\":2090:2096   */\n      dup3\n        /* \"#utility.yul\":2086:2103   */\n      mul\n        /* \"#utility.yul\":2076:2084   */\n      dup4\n        /* \"#utility.yul\":2072:2104   */\n      add\n        /* \"#utility.yul\":2069:2110   */\n      gt\n        /* \"#utility.yul\":2066:2194   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2113:2192   */\n      tag_209\n      tag_158\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2066:2194   */\n    tag_208:\n        /* \"#utility.yul\":1632:2200   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2765   */\n    tag_25:\n        /* \"#utility.yul\":2292:2298   */\n      0x00\n        /* \"#utility.yul\":2300:2306   */\n      dup1\n        /* \"#utility.yul\":2349:2351   */\n      0x20\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2328:2335   */\n      dup6\n        /* \"#utility.yul\":2324:2347   */\n      sub\n        /* \"#utility.yul\":2320:2352   */\n      slt\n        /* \"#utility.yul\":2317:2436   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2355:2434   */\n      tag_212\n      tag_154\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2317:2436   */\n    tag_211:\n        /* \"#utility.yul\":2503:2504   */\n      0x00\n        /* \"#utility.yul\":2492:2501   */\n      dup4\n        /* \"#utility.yul\":2488:2505   */\n      add\n        /* \"#utility.yul\":2475:2506   */\n      calldataload\n        /* \"#utility.yul\":2533:2551   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2525:2531   */\n      dup2\n        /* \"#utility.yul\":2522:2552   */\n      gt\n        /* \"#utility.yul\":2519:2636   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":2555:2634   */\n      tag_214\n      tag_155\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2519:2636   */\n    tag_213:\n        /* \"#utility.yul\":2668:2748   */\n      tag_215\n        /* \"#utility.yul\":2740:2747   */\n      dup6\n        /* \"#utility.yul\":2731:2737   */\n      dup3\n        /* \"#utility.yul\":2720:2729   */\n      dup7\n        /* \"#utility.yul\":2716:2738   */\n      add\n        /* \"#utility.yul\":2668:2748   */\n      tag_159\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2650:2748   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2446:2758   */\n      pop\n        /* \"#utility.yul\":2206:2765   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2771:2882   */\n    tag_160:\n        /* \"#utility.yul\":2835:2841   */\n      0x00\n        /* \"#utility.yul\":2869:2874   */\n      dup2\n        /* \"#utility.yul\":2863:2875   */\n      mload\n        /* \"#utility.yul\":2853:2875   */\n      swap1\n      pop\n        /* \"#utility.yul\":2771:2882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2888:3069   */\n    tag_161:\n        /* \"#utility.yul\":2984:2995   */\n      0x00\n        /* \"#utility.yul\":3018:3024   */\n      dup3\n        /* \"#utility.yul\":3013:3016   */\n      dup3\n        /* \"#utility.yul\":3006:3025   */\n      mstore\n        /* \"#utility.yul\":3058:3062   */\n      0x20\n        /* \"#utility.yul\":3053:3056   */\n      dup3\n        /* \"#utility.yul\":3049:3063   */\n      add\n        /* \"#utility.yul\":3034:3063   */\n      swap1\n      pop\n        /* \"#utility.yul\":2888:3069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3075:3204   */\n    tag_162:\n        /* \"#utility.yul\":3139:3143   */\n      0x00\n        /* \"#utility.yul\":3162:3165   */\n      dup2\n        /* \"#utility.yul\":3154:3165   */\n      swap1\n      pop\n        /* \"#utility.yul\":3192:3196   */\n      0x20\n        /* \"#utility.yul\":3187:3190   */\n      dup3\n        /* \"#utility.yul\":3183:3197   */\n      add\n        /* \"#utility.yul\":3175:3197   */\n      swap1\n      pop\n        /* \"#utility.yul\":3075:3204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3210:3300   */\n    tag_163:\n        /* \"#utility.yul\":3244:3251   */\n      0x00\n        /* \"#utility.yul\":3287:3292   */\n      dup2\n        /* \"#utility.yul\":3280:3293   */\n      iszero\n        /* \"#utility.yul\":3273:3294   */\n      iszero\n        /* \"#utility.yul\":3262:3294   */\n      swap1\n      pop\n        /* \"#utility.yul\":3210:3300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3306:3405   */\n    tag_164:\n        /* \"#utility.yul\":3377:3398   */\n      tag_221\n        /* \"#utility.yul\":3392:3397   */\n      dup2\n        /* \"#utility.yul\":3377:3398   */\n      tag_163\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3372:3375   */\n      dup3\n        /* \"#utility.yul\":3365:3399   */\n      mstore\n        /* \"#utility.yul\":3306:3405   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3578   */\n    tag_165:\n        /* \"#utility.yul\":3474:3484   */\n      0x00\n        /* \"#utility.yul\":3495:3535   */\n      tag_223\n        /* \"#utility.yul\":3531:3534   */\n      dup4\n        /* \"#utility.yul\":3523:3529   */\n      dup4\n        /* \"#utility.yul\":3495:3535   */\n      tag_164\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3567:3571   */\n      0x20\n        /* \"#utility.yul\":3562:3565   */\n      dup4\n        /* \"#utility.yul\":3558:3572   */\n      add\n        /* \"#utility.yul\":3544:3572   */\n      swap1\n      pop\n        /* \"#utility.yul\":3411:3578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3584:3694   */\n    tag_166:\n        /* \"#utility.yul\":3651:3655   */\n      0x00\n        /* \"#utility.yul\":3683:3687   */\n      0x20\n        /* \"#utility.yul\":3678:3681   */\n      dup3\n        /* \"#utility.yul\":3674:3688   */\n      add\n        /* \"#utility.yul\":3666:3688   */\n      swap1\n      pop\n        /* \"#utility.yul\":3584:3694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3724:4432   */\n    tag_167:\n        /* \"#utility.yul\":3837:3840   */\n      0x00\n        /* \"#utility.yul\":3866:3917   */\n      tag_226\n        /* \"#utility.yul\":3911:3916   */\n      dup3\n        /* \"#utility.yul\":3866:3917   */\n      tag_160\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3933:4016   */\n      tag_227\n        /* \"#utility.yul\":4009:4015   */\n      dup2\n        /* \"#utility.yul\":4004:4007   */\n      dup6\n        /* \"#utility.yul\":3933:4016   */\n      tag_161\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3926:4016   */\n      swap4\n      pop\n        /* \"#utility.yul\":4040:4093   */\n      tag_228\n        /* \"#utility.yul\":4087:4092   */\n      dup4\n        /* \"#utility.yul\":4040:4093   */\n      tag_162\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4116:4123   */\n      dup1\n        /* \"#utility.yul\":4147:4148   */\n      0x00\n        /* \"#utility.yul\":4132:4407   */\n    tag_229:\n        /* \"#utility.yul\":4157:4163   */\n      dup4\n        /* \"#utility.yul\":4154:4155   */\n      dup2\n        /* \"#utility.yul\":4151:4164   */\n      lt\n        /* \"#utility.yul\":4132:4407   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4233:4239   */\n      dup2\n        /* \"#utility.yul\":4227:4240   */\n      mload\n        /* \"#utility.yul\":4260:4317   */\n      tag_232\n        /* \"#utility.yul\":4313:4316   */\n      dup9\n        /* \"#utility.yul\":4298:4311   */\n      dup3\n        /* \"#utility.yul\":4260:4317   */\n      tag_165\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4253:4317   */\n      swap8\n      pop\n        /* \"#utility.yul\":4340:4397   */\n      tag_233\n        /* \"#utility.yul\":4390:4396   */\n      dup4\n        /* \"#utility.yul\":4340:4397   */\n      tag_166\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4330:4397   */\n      swap3\n      pop\n        /* \"#utility.yul\":4192:4407   */\n      pop\n        /* \"#utility.yul\":4179:4180   */\n      0x01\n        /* \"#utility.yul\":4176:4177   */\n      dup2\n        /* \"#utility.yul\":4172:4181   */\n      add\n        /* \"#utility.yul\":4167:4181   */\n      swap1\n      pop\n        /* \"#utility.yul\":4132:4407   */\n      jump(tag_229)\n    tag_231:\n        /* \"#utility.yul\":4136:4150   */\n      pop\n        /* \"#utility.yul\":4423:4426   */\n      dup6\n        /* \"#utility.yul\":4416:4426   */\n      swap4\n      pop\n        /* \"#utility.yul\":3842:4432   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3724:4432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4438:4799   */\n    tag_28:\n        /* \"#utility.yul\":4575:4579   */\n      0x00\n        /* \"#utility.yul\":4613:4615   */\n      0x20\n        /* \"#utility.yul\":4602:4611   */\n      dup3\n        /* \"#utility.yul\":4598:4616   */\n      add\n        /* \"#utility.yul\":4590:4616   */\n      swap1\n      pop\n        /* \"#utility.yul\":4662:4671   */\n      dup2\n        /* \"#utility.yul\":4656:4660   */\n      dup2\n        /* \"#utility.yul\":4652:4672   */\n      sub\n        /* \"#utility.yul\":4648:4649   */\n      0x00\n        /* \"#utility.yul\":4637:4646   */\n      dup4\n        /* \"#utility.yul\":4633:4650   */\n      add\n        /* \"#utility.yul\":4626:4673   */\n      mstore\n        /* \"#utility.yul\":4690:4792   */\n      tag_235\n        /* \"#utility.yul\":4787:4791   */\n      dup2\n        /* \"#utility.yul\":4778:4784   */\n      dup5\n        /* \"#utility.yul\":4690:4792   */\n      tag_167\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4682:4792   */\n      swap1\n      pop\n        /* \"#utility.yul\":4438:4799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4805:5235   */\n    tag_36:\n        /* \"#utility.yul\":4948:4952   */\n      0x00\n        /* \"#utility.yul\":4986:4988   */\n      0x60\n        /* \"#utility.yul\":4975:4984   */\n      dup3\n        /* \"#utility.yul\":4971:4989   */\n      add\n        /* \"#utility.yul\":4963:4989   */\n      swap1\n      pop\n        /* \"#utility.yul\":4999:5068   */\n      tag_237\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup7\n        /* \"#utility.yul\":4999:5068   */\n      tag_152\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5078:5148   */\n      tag_238\n        /* \"#utility.yul\":5144:5146   */\n      0x20\n        /* \"#utility.yul\":5133:5142   */\n      dup4\n        /* \"#utility.yul\":5129:5147   */\n      add\n        /* \"#utility.yul\":5120:5126   */\n      dup6\n        /* \"#utility.yul\":5078:5148   */\n      tag_152\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5158:5228   */\n      tag_239\n        /* \"#utility.yul\":5224:5226   */\n      0x40\n        /* \"#utility.yul\":5213:5222   */\n      dup4\n        /* \"#utility.yul\":5209:5227   */\n      add\n        /* \"#utility.yul\":5200:5206   */\n      dup5\n        /* \"#utility.yul\":5158:5228   */\n      tag_150\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4805:5235   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5241:5367   */\n    tag_168:\n        /* \"#utility.yul\":5278:5285   */\n      0x00\n        /* \"#utility.yul\":5318:5360   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5311:5316   */\n      dup3\n        /* \"#utility.yul\":5307:5361   */\n      and\n        /* \"#utility.yul\":5296:5361   */\n      swap1\n      pop\n        /* \"#utility.yul\":5241:5367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5373:5469   */\n    tag_169:\n        /* \"#utility.yul\":5410:5417   */\n      0x00\n        /* \"#utility.yul\":5439:5463   */\n      tag_242\n        /* \"#utility.yul\":5457:5462   */\n      dup3\n        /* \"#utility.yul\":5439:5463   */\n      tag_168\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5428:5463   */\n      swap1\n      pop\n        /* \"#utility.yul\":5373:5469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5475:5593   */\n    tag_170:\n        /* \"#utility.yul\":5562:5586   */\n      tag_244\n        /* \"#utility.yul\":5580:5585   */\n      dup2\n        /* \"#utility.yul\":5562:5586   */\n      tag_169\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5557:5560   */\n      dup3\n        /* \"#utility.yul\":5550:5587   */\n      mstore\n        /* \"#utility.yul\":5475:5593   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5599:5821   */\n    tag_43:\n        /* \"#utility.yul\":5692:5696   */\n      0x00\n        /* \"#utility.yul\":5730:5732   */\n      0x20\n        /* \"#utility.yul\":5719:5728   */\n      dup3\n        /* \"#utility.yul\":5715:5733   */\n      add\n        /* \"#utility.yul\":5707:5733   */\n      swap1\n      pop\n        /* \"#utility.yul\":5743:5814   */\n      tag_246\n        /* \"#utility.yul\":5811:5812   */\n      0x00\n        /* \"#utility.yul\":5800:5809   */\n      dup4\n        /* \"#utility.yul\":5796:5813   */\n      add\n        /* \"#utility.yul\":5787:5793   */\n      dup5\n        /* \"#utility.yul\":5743:5814   */\n      tag_170\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5599:5821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5827:5949   */\n    tag_171:\n        /* \"#utility.yul\":5900:5924   */\n      tag_248\n        /* \"#utility.yul\":5918:5923   */\n      dup2\n        /* \"#utility.yul\":5900:5924   */\n      tag_169\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5893:5898   */\n      dup2\n        /* \"#utility.yul\":5890:5925   */\n      eq\n        /* \"#utility.yul\":5880:5943   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":5939:5940   */\n      0x00\n        /* \"#utility.yul\":5936:5937   */\n      dup1\n        /* \"#utility.yul\":5929:5941   */\n      revert\n        /* \"#utility.yul\":5880:5943   */\n    tag_249:\n        /* \"#utility.yul\":5827:5949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6094   */\n    tag_172:\n        /* \"#utility.yul\":6001:6006   */\n      0x00\n        /* \"#utility.yul\":6039:6045   */\n      dup2\n        /* \"#utility.yul\":6026:6046   */\n      calldataload\n        /* \"#utility.yul\":6017:6046   */\n      swap1\n      pop\n        /* \"#utility.yul\":6055:6088   */\n      tag_251\n        /* \"#utility.yul\":6082:6087   */\n      dup2\n        /* \"#utility.yul\":6055:6088   */\n      tag_171\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5955:6094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6100:6429   */\n    tag_48:\n        /* \"#utility.yul\":6159:6165   */\n      0x00\n        /* \"#utility.yul\":6208:6210   */\n      0x20\n        /* \"#utility.yul\":6196:6205   */\n      dup3\n        /* \"#utility.yul\":6187:6194   */\n      dup5\n        /* \"#utility.yul\":6183:6206   */\n      sub\n        /* \"#utility.yul\":6179:6211   */\n      slt\n        /* \"#utility.yul\":6176:6295   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":6214:6293   */\n      tag_254\n      tag_154\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6176:6295   */\n    tag_253:\n        /* \"#utility.yul\":6334:6335   */\n      0x00\n        /* \"#utility.yul\":6359:6412   */\n      tag_255\n        /* \"#utility.yul\":6404:6411   */\n      dup5\n        /* \"#utility.yul\":6395:6401   */\n      dup3\n        /* \"#utility.yul\":6384:6393   */\n      dup6\n        /* \"#utility.yul\":6380:6402   */\n      add\n        /* \"#utility.yul\":6359:6412   */\n      tag_172\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6349:6412   */\n      swap2\n      pop\n        /* \"#utility.yul\":6305:6422   */\n      pop\n        /* \"#utility.yul\":6100:6429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6435:6495   */\n    tag_173:\n        /* \"#utility.yul\":6463:6466   */\n      0x00\n        /* \"#utility.yul\":6484:6489   */\n      dup2\n        /* \"#utility.yul\":6477:6489   */\n      swap1\n      pop\n        /* \"#utility.yul\":6435:6495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6501:6643   */\n    tag_174:\n        /* \"#utility.yul\":6551:6560   */\n      0x00\n        /* \"#utility.yul\":6584:6637   */\n      tag_258\n        /* \"#utility.yul\":6602:6636   */\n      tag_259\n        /* \"#utility.yul\":6611:6635   */\n      tag_260\n        /* \"#utility.yul\":6629:6634   */\n      dup5\n        /* \"#utility.yul\":6611:6635   */\n      tag_168\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6602:6636   */\n      tag_173\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6584:6637   */\n      tag_168\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6571:6637   */\n      swap1\n      pop\n        /* \"#utility.yul\":6501:6643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6649:6775   */\n    tag_175:\n        /* \"#utility.yul\":6699:6708   */\n      0x00\n        /* \"#utility.yul\":6732:6769   */\n      tag_262\n        /* \"#utility.yul\":6763:6768   */\n      dup3\n        /* \"#utility.yul\":6732:6769   */\n      tag_174\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6719:6769   */\n      swap1\n      pop\n        /* \"#utility.yul\":6649:6775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6781:6921   */\n    tag_176:\n        /* \"#utility.yul\":6845:6854   */\n      0x00\n        /* \"#utility.yul\":6878:6915   */\n      tag_264\n        /* \"#utility.yul\":6909:6914   */\n      dup3\n        /* \"#utility.yul\":6878:6915   */\n      tag_175\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6865:6915   */\n      swap1\n      pop\n        /* \"#utility.yul\":6781:6921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6927:7086   */\n    tag_177:\n        /* \"#utility.yul\":7028:7079   */\n      tag_266\n        /* \"#utility.yul\":7073:7078   */\n      dup2\n        /* \"#utility.yul\":7028:7079   */\n      tag_176\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7023:7026   */\n      dup3\n        /* \"#utility.yul\":7016:7080   */\n      mstore\n        /* \"#utility.yul\":6927:7086   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7342   */\n    tag_53:\n        /* \"#utility.yul\":7199:7203   */\n      0x00\n        /* \"#utility.yul\":7237:7239   */\n      0x20\n        /* \"#utility.yul\":7226:7235   */\n      dup3\n        /* \"#utility.yul\":7222:7240   */\n      add\n        /* \"#utility.yul\":7214:7240   */\n      swap1\n      pop\n        /* \"#utility.yul\":7250:7335   */\n      tag_268\n        /* \"#utility.yul\":7332:7333   */\n      0x00\n        /* \"#utility.yul\":7321:7330   */\n      dup4\n        /* \"#utility.yul\":7317:7334   */\n      add\n        /* \"#utility.yul\":7308:7314   */\n      dup5\n        /* \"#utility.yul\":7250:7335   */\n      tag_177\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":7092:7342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7348:7528   */\n    tag_57:\n        /* \"#utility.yul\":7396:7473   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7393:7394   */\n      0x00\n        /* \"#utility.yul\":7386:7474   */\n      mstore\n        /* \"#utility.yul\":7493:7497   */\n      0x41\n        /* \"#utility.yul\":7490:7491   */\n      0x04\n        /* \"#utility.yul\":7483:7498   */\n      mstore\n        /* \"#utility.yul\":7517:7521   */\n      0x24\n        /* \"#utility.yul\":7514:7515   */\n      0x00\n        /* \"#utility.yul\":7507:7522   */\n      revert\n        /* \"#utility.yul\":7534:7714   */\n    tag_65:\n        /* \"#utility.yul\":7582:7659   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7579:7580   */\n      0x00\n        /* \"#utility.yul\":7572:7660   */\n      mstore\n        /* \"#utility.yul\":7679:7683   */\n      0x32\n        /* \"#utility.yul\":7676:7677   */\n      0x04\n        /* \"#utility.yul\":7669:7684   */\n      mstore\n        /* \"#utility.yul\":7703:7707   */\n      0x24\n        /* \"#utility.yul\":7700:7701   */\n      0x00\n        /* \"#utility.yul\":7693:7708   */\n      revert\n        /* \"#utility.yul\":7720:7797   */\n    tag_178:\n        /* \"#utility.yul\":7757:7764   */\n      0x00\n        /* \"#utility.yul\":7786:7791   */\n      dup2\n        /* \"#utility.yul\":7775:7791   */\n      swap1\n      pop\n        /* \"#utility.yul\":7720:7797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7803:7925   */\n    tag_179:\n        /* \"#utility.yul\":7876:7900   */\n      tag_273\n        /* \"#utility.yul\":7894:7899   */\n      dup2\n        /* \"#utility.yul\":7876:7900   */\n      tag_178\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7869:7874   */\n      dup2\n        /* \"#utility.yul\":7866:7901   */\n      eq\n        /* \"#utility.yul\":7856:7919   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":7915:7916   */\n      0x00\n        /* \"#utility.yul\":7912:7913   */\n      dup1\n        /* \"#utility.yul\":7905:7917   */\n      revert\n        /* \"#utility.yul\":7856:7919   */\n    tag_274:\n        /* \"#utility.yul\":7803:7925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7931:8074   */\n    tag_180:\n        /* \"#utility.yul\":7988:7993   */\n      0x00\n        /* \"#utility.yul\":8019:8025   */\n      dup2\n        /* \"#utility.yul\":8013:8026   */\n      mload\n        /* \"#utility.yul\":8004:8026   */\n      swap1\n      pop\n        /* \"#utility.yul\":8035:8068   */\n      tag_276\n        /* \"#utility.yul\":8062:8067   */\n      dup2\n        /* \"#utility.yul\":8035:8068   */\n      tag_179\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7931:8074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8080:8431   */\n    tag_97:\n        /* \"#utility.yul\":8150:8156   */\n      0x00\n        /* \"#utility.yul\":8199:8201   */\n      0x20\n        /* \"#utility.yul\":8187:8196   */\n      dup3\n        /* \"#utility.yul\":8178:8185   */\n      dup5\n        /* \"#utility.yul\":8174:8197   */\n      sub\n        /* \"#utility.yul\":8170:8202   */\n      slt\n        /* \"#utility.yul\":8167:8286   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":8205:8284   */\n      tag_279\n      tag_154\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8167:8286   */\n    tag_278:\n        /* \"#utility.yul\":8325:8326   */\n      0x00\n        /* \"#utility.yul\":8350:8414   */\n      tag_280\n        /* \"#utility.yul\":8406:8413   */\n      dup5\n        /* \"#utility.yul\":8397:8403   */\n      dup3\n        /* \"#utility.yul\":8386:8395   */\n      dup6\n        /* \"#utility.yul\":8382:8404   */\n      add\n        /* \"#utility.yul\":8350:8414   */\n      tag_180\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":8340:8414   */\n      swap2\n      pop\n        /* \"#utility.yul\":8296:8424   */\n      pop\n        /* \"#utility.yul\":8080:8431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8437:8617   */\n    tag_181:\n        /* \"#utility.yul\":8485:8562   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8482:8483   */\n      0x00\n        /* \"#utility.yul\":8475:8563   */\n      mstore\n        /* \"#utility.yul\":8582:8586   */\n      0x11\n        /* \"#utility.yul\":8579:8580   */\n      0x04\n        /* \"#utility.yul\":8572:8587   */\n      mstore\n        /* \"#utility.yul\":8606:8610   */\n      0x24\n        /* \"#utility.yul\":8603:8604   */\n      0x00\n        /* \"#utility.yul\":8596:8611   */\n      revert\n        /* \"#utility.yul\":8623:8836   */\n    tag_114:\n        /* \"#utility.yul\":8662:8665   */\n      0x00\n        /* \"#utility.yul\":8681:8700   */\n      tag_283\n        /* \"#utility.yul\":8698:8699   */\n      dup3\n        /* \"#utility.yul\":8681:8700   */\n      tag_151\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8676:8700   */\n      swap2\n      pop\n        /* \"#utility.yul\":8714:8733   */\n      tag_284\n        /* \"#utility.yul\":8731:8732   */\n      dup4\n        /* \"#utility.yul\":8714:8733   */\n      tag_151\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8709:8733   */\n      swap3\n      pop\n        /* \"#utility.yul\":8756:8757   */\n      dup3\n        /* \"#utility.yul\":8753:8754   */\n      dup3\n        /* \"#utility.yul\":8749:8758   */\n      add\n        /* \"#utility.yul\":8742:8758   */\n      swap1\n      pop\n        /* \"#utility.yul\":8779:8805   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":8774:8777   */\n      dup2\n        /* \"#utility.yul\":8771:8806   */\n      gt\n        /* \"#utility.yul\":8768:8829   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":8809:8827   */\n      tag_286\n      tag_181\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8768:8829   */\n    tag_285:\n        /* \"#utility.yul\":8623:8836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8842:9011   */\n    tag_182:\n        /* \"#utility.yul\":8926:8937   */\n      0x00\n        /* \"#utility.yul\":8960:8966   */\n      dup3\n        /* \"#utility.yul\":8955:8958   */\n      dup3\n        /* \"#utility.yul\":8948:8967   */\n      mstore\n        /* \"#utility.yul\":9000:9004   */\n      0x20\n        /* \"#utility.yul\":8995:8998   */\n      dup3\n        /* \"#utility.yul\":8991:9005   */\n      add\n        /* \"#utility.yul\":8976:9005   */\n      swap1\n      pop\n        /* \"#utility.yul\":8842:9011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9017:9198   */\n    tag_183:\n        /* \"#utility.yul\":9157:9190   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9153:9154   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup3\n        /* \"#utility.yul\":9141:9155   */\n      add\n        /* \"#utility.yul\":9134:9191   */\n      mstore\n        /* \"#utility.yul\":9017:9198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9570   */\n    tag_184:\n        /* \"#utility.yul\":9346:9349   */\n      0x00\n        /* \"#utility.yul\":9367:9434   */\n      tag_290\n        /* \"#utility.yul\":9431:9433   */\n      0x1f\n        /* \"#utility.yul\":9426:9429   */\n      dup4\n        /* \"#utility.yul\":9367:9434   */\n      tag_182\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9360:9434   */\n      swap2\n      pop\n        /* \"#utility.yul\":9443:9536   */\n      tag_291\n        /* \"#utility.yul\":9532:9535   */\n      dup3\n        /* \"#utility.yul\":9443:9536   */\n      tag_183\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9561:9563   */\n      0x20\n        /* \"#utility.yul\":9556:9559   */\n      dup3\n        /* \"#utility.yul\":9552:9564   */\n      add\n        /* \"#utility.yul\":9545:9564   */\n      swap1\n      pop\n        /* \"#utility.yul\":9204:9570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9576:9995   */\n    tag_118:\n        /* \"#utility.yul\":9742:9746   */\n      0x00\n        /* \"#utility.yul\":9780:9782   */\n      0x20\n        /* \"#utility.yul\":9769:9778   */\n      dup3\n        /* \"#utility.yul\":9765:9783   */\n      add\n        /* \"#utility.yul\":9757:9783   */\n      swap1\n      pop\n        /* \"#utility.yul\":9829:9838   */\n      dup2\n        /* \"#utility.yul\":9823:9827   */\n      dup2\n        /* \"#utility.yul\":9819:9839   */\n      sub\n        /* \"#utility.yul\":9815:9816   */\n      0x00\n        /* \"#utility.yul\":9804:9813   */\n      dup4\n        /* \"#utility.yul\":9800:9817   */\n      add\n        /* \"#utility.yul\":9793:9840   */\n      mstore\n        /* \"#utility.yul\":9857:9988   */\n      tag_293\n        /* \"#utility.yul\":9983:9987   */\n      dup2\n        /* \"#utility.yul\":9857:9988   */\n      tag_184\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9849:9988   */\n      swap1\n      pop\n        /* \"#utility.yul\":9576:9995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10001:10119   */\n    tag_185:\n        /* \"#utility.yul\":10088:10112   */\n      tag_295\n        /* \"#utility.yul\":10106:10111   */\n      dup2\n        /* \"#utility.yul\":10088:10112   */\n      tag_178\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10083:10086   */\n      dup3\n        /* \"#utility.yul\":10076:10113   */\n      mstore\n        /* \"#utility.yul\":10001:10119   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10125:10457   */\n    tag_130:\n        /* \"#utility.yul\":10246:10250   */\n      0x00\n        /* \"#utility.yul\":10284:10286   */\n      0x40\n        /* \"#utility.yul\":10273:10282   */\n      dup3\n        /* \"#utility.yul\":10269:10287   */\n      add\n        /* \"#utility.yul\":10261:10287   */\n      swap1\n      pop\n        /* \"#utility.yul\":10297:10368   */\n      tag_297\n        /* \"#utility.yul\":10365:10366   */\n      0x00\n        /* \"#utility.yul\":10354:10363   */\n      dup4\n        /* \"#utility.yul\":10350:10367   */\n      add\n        /* \"#utility.yul\":10341:10347   */\n      dup6\n        /* \"#utility.yul\":10297:10368   */\n      tag_170\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10378:10450   */\n      tag_298\n        /* \"#utility.yul\":10446:10448   */\n      0x20\n        /* \"#utility.yul\":10435:10444   */\n      dup4\n        /* \"#utility.yul\":10431:10449   */\n      add\n        /* \"#utility.yul\":10422:10428   */\n      dup5\n        /* \"#utility.yul\":10378:10450   */\n      tag_185\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10125:10457   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122020fed0c8a7c46465c9bc7922d0be54bcc61173b989baf820086dd0e6c2b41e5d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1349": {
									"entryPoint": null,
									"id": 1349,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 912,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint96_fromMemory": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint96t_uint96t_uint96t_uint64t_uint64_fromMemory": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint96": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3092:12",
										"nodeType": "YulBlock",
										"src": "0:3092:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "889:65:12",
													"nodeType": "YulBlock",
													"src": "889:65:12",
													"statements": [
														{
															"nativeSrc": "899:49:12",
															"nodeType": "YulAssignment",
															"src": "899:49:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "914:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "921:26:12",
																		"nodeType": "YulLiteral",
																		"src": "921:26:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:12"
																},
																"nativeSrc": "910:38:12",
																"nodeType": "YulFunctionCall",
																"src": "910:38:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "899:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nativeSrc": "845:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "871:5:12",
														"nodeType": "YulTypedName",
														"src": "871:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "881:7:12",
														"nodeType": "YulTypedName",
														"src": "881:7:12",
														"type": ""
													}
												],
												"src": "845:109:12"
											},
											{
												"body": {
													"nativeSrc": "1002:78:12",
													"nodeType": "YulBlock",
													"src": "1002:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1058:16:12",
																"nodeType": "YulBlock",
																"src": "1058:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1067:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1070:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1070:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1060:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:6:12"
																			},
																			"nativeSrc": "1060:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1060:12:12"
																		},
																		"nativeSrc": "1060:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1060:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1025:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1025:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1049:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1049:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint96",
																					"nativeSrc": "1032:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "1032:16:12"
																				},
																				"nativeSrc": "1032:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1032:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1022:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1022:2:12"
																		},
																		"nativeSrc": "1022:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1022:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1015:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1015:6:12"
																},
																"nativeSrc": "1015:42:12",
																"nodeType": "YulFunctionCall",
																"src": "1015:42:12"
															},
															"nativeSrc": "1012:62:12",
															"nodeType": "YulIf",
															"src": "1012:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint96",
												"nativeSrc": "960:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "995:5:12",
														"nodeType": "YulTypedName",
														"src": "995:5:12",
														"type": ""
													}
												],
												"src": "960:120:12"
											},
											{
												"body": {
													"nativeSrc": "1148:79:12",
													"nodeType": "YulBlock",
													"src": "1148:79:12",
													"statements": [
														{
															"nativeSrc": "1158:22:12",
															"nodeType": "YulAssignment",
															"src": "1158:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1173:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1173:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1167:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1167:5:12"
																},
																"nativeSrc": "1167:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1167:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1158:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1158:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1215:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1215:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint96",
																	"nativeSrc": "1189:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "1189:25:12"
																},
																"nativeSrc": "1189:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1189:32:12"
															},
															"nativeSrc": "1189:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "1189:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint96_fromMemory",
												"nativeSrc": "1086:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1126:6:12",
														"nodeType": "YulTypedName",
														"src": "1126:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1134:3:12",
														"nodeType": "YulTypedName",
														"src": "1134:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1142:5:12",
														"nodeType": "YulTypedName",
														"src": "1142:5:12",
														"type": ""
													}
												],
												"src": "1086:141:12"
											},
											{
												"body": {
													"nativeSrc": "1277:57:12",
													"nodeType": "YulBlock",
													"src": "1277:57:12",
													"statements": [
														{
															"nativeSrc": "1287:41:12",
															"nodeType": "YulAssignment",
															"src": "1287:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1302:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1302:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1309:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1309:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1298:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1298:3:12"
																},
																"nativeSrc": "1298:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1298:30:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1287:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1287:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "1233:101:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1259:5:12",
														"nodeType": "YulTypedName",
														"src": "1259:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1269:7:12",
														"nodeType": "YulTypedName",
														"src": "1269:7:12",
														"type": ""
													}
												],
												"src": "1233:101:12"
											},
											{
												"body": {
													"nativeSrc": "1382:78:12",
													"nodeType": "YulBlock",
													"src": "1382:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1438:16:12",
																"nodeType": "YulBlock",
																"src": "1438:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:12"
																			},
																			"nativeSrc": "1440:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:12"
																		},
																		"nativeSrc": "1440:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1405:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1405:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1429:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1429:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "1412:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "1412:16:12"
																				},
																				"nativeSrc": "1412:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1412:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1402:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1402:2:12"
																		},
																		"nativeSrc": "1402:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1395:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:12"
																},
																"nativeSrc": "1395:42:12",
																"nodeType": "YulFunctionCall",
																"src": "1395:42:12"
															},
															"nativeSrc": "1392:62:12",
															"nodeType": "YulIf",
															"src": "1392:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "1340:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1375:5:12",
														"nodeType": "YulTypedName",
														"src": "1375:5:12",
														"type": ""
													}
												],
												"src": "1340:120:12"
											},
											{
												"body": {
													"nativeSrc": "1528:79:12",
													"nodeType": "YulBlock",
													"src": "1528:79:12",
													"statements": [
														{
															"nativeSrc": "1538:22:12",
															"nodeType": "YulAssignment",
															"src": "1538:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1553:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1553:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1547:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:12"
																},
																"nativeSrc": "1547:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1547:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1538:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1538:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1595:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1595:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "1569:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "1569:25:12"
																},
																"nativeSrc": "1569:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1569:32:12"
															},
															"nativeSrc": "1569:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "1569:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nativeSrc": "1466:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1506:6:12",
														"nodeType": "YulTypedName",
														"src": "1506:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1514:3:12",
														"nodeType": "YulTypedName",
														"src": "1514:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1522:5:12",
														"nodeType": "YulTypedName",
														"src": "1522:5:12",
														"type": ""
													}
												],
												"src": "1466:141:12"
											},
											{
												"body": {
													"nativeSrc": "1770:967:12",
													"nodeType": "YulBlock",
													"src": "1770:967:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1817:83:12",
																"nodeType": "YulBlock",
																"src": "1817:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1819:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1819:77:12"
																			},
																			"nativeSrc": "1819:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1819:79:12"
																		},
																		"nativeSrc": "1819:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1791:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1800:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1800:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1787:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1787:3:12"
																		},
																		"nativeSrc": "1787:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1812:3:12",
																		"nodeType": "YulLiteral",
																		"src": "1812:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1783:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1783:3:12"
																},
																"nativeSrc": "1783:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1783:33:12"
															},
															"nativeSrc": "1780:120:12",
															"nodeType": "YulIf",
															"src": "1780:120:12"
														},
														{
															"nativeSrc": "1910:128:12",
															"nodeType": "YulBlock",
															"src": "1910:128:12",
															"statements": [
																{
																	"nativeSrc": "1925:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1925:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1939:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1939:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1929:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1929:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1954:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1954:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2000:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2000:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2011:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2011:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1996:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1996:3:12"
																				},
																				"nativeSrc": "1996:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1996:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2020:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2020:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1964:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1964:31:12"
																		},
																		"nativeSrc": "1964:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1964:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1954:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1954:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2048:128:12",
															"nodeType": "YulBlock",
															"src": "2048:128:12",
															"statements": [
																{
																	"nativeSrc": "2063:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2063:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2077:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2077:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2067:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2067:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2093:73:12",
																	"nodeType": "YulAssignment",
																	"src": "2093:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2138:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2138:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2149:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2149:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2134:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2134:3:12"
																				},
																				"nativeSrc": "2134:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2134:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2158:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96_fromMemory",
																			"nativeSrc": "2103:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "2103:30:12"
																		},
																		"nativeSrc": "2103:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2103:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2093:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2093:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2186:128:12",
															"nodeType": "YulBlock",
															"src": "2186:128:12",
															"statements": [
																{
																	"nativeSrc": "2201:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2201:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2215:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2215:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2205:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2205:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2231:73:12",
																	"nodeType": "YulAssignment",
																	"src": "2231:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2276:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2276:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2287:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2287:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2272:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:12"
																				},
																				"nativeSrc": "2272:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2272:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2296:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2296:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96_fromMemory",
																			"nativeSrc": "2241:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "2241:30:12"
																		},
																		"nativeSrc": "2241:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2241:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2231:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2231:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2324:128:12",
															"nodeType": "YulBlock",
															"src": "2324:128:12",
															"statements": [
																{
																	"nativeSrc": "2339:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2339:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2353:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2343:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2343:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2369:73:12",
																	"nodeType": "YulAssignment",
																	"src": "2369:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2414:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2414:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2425:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2425:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2410:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2410:3:12"
																				},
																				"nativeSrc": "2410:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2410:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2434:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2434:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96_fromMemory",
																			"nativeSrc": "2379:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "2379:30:12"
																		},
																		"nativeSrc": "2379:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2379:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2369:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2369:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2462:129:12",
															"nodeType": "YulBlock",
															"src": "2462:129:12",
															"statements": [
																{
																	"nativeSrc": "2477:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2477:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2491:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2491:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2481:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2481:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2508:73:12",
																	"nodeType": "YulAssignment",
																	"src": "2508:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2553:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2553:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2564:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2564:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2549:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2549:3:12"
																				},
																				"nativeSrc": "2549:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2549:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2573:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2573:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nativeSrc": "2518:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "2518:30:12"
																		},
																		"nativeSrc": "2518:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2508:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2508:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2601:129:12",
															"nodeType": "YulBlock",
															"src": "2601:129:12",
															"statements": [
																{
																	"nativeSrc": "2616:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2616:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2630:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2630:3:12",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2620:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2620:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2647:73:12",
																	"nodeType": "YulAssignment",
																	"src": "2647:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2692:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2692:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2703:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2703:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2688:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2688:3:12"
																				},
																				"nativeSrc": "2688:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2688:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2712:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2712:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nativeSrc": "2657:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "2657:30:12"
																		},
																		"nativeSrc": "2657:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2647:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2647:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint96t_uint96t_uint96t_uint64t_uint64_fromMemory",
												"nativeSrc": "1613:1124:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1700:9:12",
														"nodeType": "YulTypedName",
														"src": "1700:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1711:7:12",
														"nodeType": "YulTypedName",
														"src": "1711:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1723:6:12",
														"nodeType": "YulTypedName",
														"src": "1723:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1731:6:12",
														"nodeType": "YulTypedName",
														"src": "1731:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1739:6:12",
														"nodeType": "YulTypedName",
														"src": "1739:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1747:6:12",
														"nodeType": "YulTypedName",
														"src": "1747:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1755:6:12",
														"nodeType": "YulTypedName",
														"src": "1755:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1763:6:12",
														"nodeType": "YulTypedName",
														"src": "1763:6:12",
														"type": ""
													}
												],
												"src": "1613:1124:12"
											},
											{
												"body": {
													"nativeSrc": "2808:53:12",
													"nodeType": "YulBlock",
													"src": "2808:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2825:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2825:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2848:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2848:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2830:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2830:17:12"
																		},
																		"nativeSrc": "2830:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2830:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2818:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:12"
																},
																"nativeSrc": "2818:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2818:37:12"
															},
															"nativeSrc": "2818:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2818:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2743:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2796:5:12",
														"nodeType": "YulTypedName",
														"src": "2796:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2803:3:12",
														"nodeType": "YulTypedName",
														"src": "2803:3:12",
														"type": ""
													}
												],
												"src": "2743:118:12"
											},
											{
												"body": {
													"nativeSrc": "2965:124:12",
													"nodeType": "YulBlock",
													"src": "2965:124:12",
													"statements": [
														{
															"nativeSrc": "2975:26:12",
															"nodeType": "YulAssignment",
															"src": "2975:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2987:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2987:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2998:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2983:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:12"
																},
																"nativeSrc": "2983:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2975:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2975:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3055:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3055:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3068:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3068:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3079:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3079:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3064:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3064:3:12"
																		},
																		"nativeSrc": "3064:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3064:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3011:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3011:43:12"
																},
																"nativeSrc": "3011:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3011:71:12"
															},
															"nativeSrc": "3011:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3011:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2867:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2937:9:12",
														"nodeType": "YulTypedName",
														"src": "2937:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2949:6:12",
														"nodeType": "YulTypedName",
														"src": "2949:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2960:4:12",
														"nodeType": "YulTypedName",
														"src": "2960:4:12",
														"type": ""
													}
												],
												"src": "2867:222:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint96t_uint96t_uint96t_uint64t_uint64_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b506040516119143803806119148339818101604052810190610031919061052d565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906105c5565b60405180910390fd5b6100b18161039060201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff160361011e576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f846bffffffffffffffffffffffff1603610165576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836bffffffffffffffffffffffff16836bffffffffffffffffffffffff1610156101bb576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8067ffffffffffffffff168267ffffffffffffffff1610610208576040517f6f7eac2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428267ffffffffffffffff16101561024c576040517f6f7eac2600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050846bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff16815250508360025f015f6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508260025f01600c6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505f60025f0160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508160045f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555080600460086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050505050506105de565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61047e82610455565b9050919050565b61048e81610474565b8114610498575f80fd5b50565b5f815190506104a981610485565b92915050565b5f6bffffffffffffffffffffffff82169050919050565b6104cf816104af565b81146104d9575f80fd5b50565b5f815190506104ea816104c6565b92915050565b5f67ffffffffffffffff82169050919050565b61050c816104f0565b8114610516575f80fd5b50565b5f8151905061052781610503565b92915050565b5f805f805f8060c0878903121561054757610546610451565b5b5f61055489828a0161049b565b965050602061056589828a016104dc565b955050604061057689828a016104dc565b945050606061058789828a016104dc565b935050608061059889828a01610519565b92505060a06105a989828a01610519565b9150509295509295509295565b6105bf81610474565b82525050565b5f6020820190506105d85f8301846105b6565b92915050565b60805160a0516112f26106225f395f81816101e60152818161072f015261097301525f81816103a00152818161050f015281816105e701526106b401526112f25ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806379502c551161006f57806379502c551461012b578063806019c11461014b5780638da5cb5b14610169578063db2e21bc14610187578063f2fde38b14610191578063fc0c546a146101ad576100a7565b806340306fb6146100ab57806343074c7f146100c957806358262359146100e75780635b88349d14610117578063715018a614610121575b5f80fd5b6100b36101cb565b6040516100c09190610da6565b60405180910390f35b6100d16101e4565b6040516100de9190610de5565b60405180910390f35b61010160048036038101906100fc9190610e67565b610208565b60405161010e9190610f74565b60405180910390f35b61011f6102d2565b005b610129610458565b005b61013361046b565b60405161014293929190610f94565b60405180910390f35b6101536104c3565b6040516101609190610da6565b60405180910390f35b6101716104dd565b60405161017e9190611008565b60405180910390f35b61018f610504565b005b6101ab60048036038101906101a6919061104b565b61062e565b005b6101b56106b2565b6040516101c291906110d1565b60405180910390f35b60045f9054906101000a900467ffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60608282905067ffffffffffffffff811115610227576102266110ea565b5b6040519080825280602002602001820160405280156102555781602001602082028036833780820191505090505b5090505f4290505f5b848490508110156102ca5761029a85858381811061027f5761027e611117565b5b9050602002016020810190610294919061104b565b836106d6565b8382815181106102ad576102ac611117565b5b60200260200101901515908115158152505080600101905061025e565b505092915050565b6102da61083e565b6102e33361088d565b5f3373ffffffffffffffffffffffffffffffffffffffff169050610311816003610aa490919063ffffffff16565b60025f015f9054906101000a90046bffffffffffffffffffffffff1660025f0160188282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506103e43360025f015f9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610adc9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f61302c72df1000ca12d41c5583685720a0cbd3233372643a553eb042d670f07660025f015f9054906101000a90046bffffffffffffffffffffffff166040516104459190610de5565b60405180910390a250610456610b5b565b565b610460610b64565b6104695f610beb565b565b6002805f015f9054906101000a90046bffffffffffffffffffffffff1690805f01600c9054906101000a90046bffffffffffffffffffffffff1690805f0160189054906101000a900467ffffffffffffffff16905083565b600460089054906101000a900467ffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61050c610b64565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105669190611008565b602060405180830381865afa158015610581573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105a59190611177565b90505f81036105e0576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61062b33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610adc9092919063ffffffff16565b50565b610636610b64565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161069d9190611008565b60405180910390fd5b6106af81610beb565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60045f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1682101580156107265750600460089054906101000a900467ffffffffffffffff1667ffffffffffffffff168211155b801561077757507f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163110155b80156107aa57506107a88373ffffffffffffffffffffffffffffffffffffffff166003610cac90919063ffffffff16565b155b8015610836575060025f01600c9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1660025f015f9054906101000a90046bffffffffffffffffffffffff1660025f0160189054906101000a900467ffffffffffffffff1667ffffffffffffffff1661082591906111cf565b6bffffffffffffffffffffffff1611155b905092915050565b600260015403610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a90611268565b60405180910390fd5b6002600181905550565b60045f9054906101000a900467ffffffffffffffff1667ffffffffffffffff164210806108d95750600460089054906101000a900467ffffffffffffffff1667ffffffffffffffff1642115b15610910576040517f80cb55e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093a8173ffffffffffffffffffffffffffffffffffffffff166003610cac90919063ffffffff16565b15610971576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff163110156109f0576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f01600c9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1660025f015f9054906101000a90046bffffffffffffffffffffffff1660025f0160189054906101000a900467ffffffffffffffff1667ffffffffffffffff16016bffffffffffffffffffffffff161115610aa1576040517fd05cb60900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f600882901c90505f60ff83166001901b905080845f015f8481526020019081526020015f205f828254179250508190555050505050565b610b56838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610b0f929190611295565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ce2565b505050565b60018081905550565b610b6c610d7d565b73ffffffffffffffffffffffffffffffffffffffff16610b8a6104dd565b73ffffffffffffffffffffffffffffffffffffffff1614610be957610bad610d7d565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610be09190611008565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80600883901c90505f60ff84166001901b90505f81865f015f8581526020019081526020015f20541614159250505092915050565b5f8060205f8451602086015f885af180610d01576040513d5f823e3d81fd5b3d92505f519150505f8214610d1a576001811415610d35565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610d7757836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610d6e9190611008565b60405180910390fd5b50505050565b5f33905090565b5f67ffffffffffffffff82169050919050565b610da081610d84565b82525050565b5f602082019050610db95f830184610d97565b92915050565b5f6bffffffffffffffffffffffff82169050919050565b610ddf81610dbf565b82525050565b5f602082019050610df85f830184610dd6565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610e2757610e26610e06565b5b8235905067ffffffffffffffff811115610e4457610e43610e0a565b5b602083019150836020820283011115610e6057610e5f610e0e565b5b9250929050565b5f8060208385031215610e7d57610e7c610dfe565b5b5f83013567ffffffffffffffff811115610e9a57610e99610e02565b5b610ea685828601610e12565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f8115159050919050565b610eef81610edb565b82525050565b5f610f008383610ee6565b60208301905092915050565b5f602082019050919050565b5f610f2282610eb2565b610f2c8185610ebc565b9350610f3783610ecc565b805f5b83811015610f67578151610f4e8882610ef5565b9750610f5983610f0c565b925050600181019050610f3a565b5085935050505092915050565b5f6020820190508181035f830152610f8c8184610f18565b905092915050565b5f606082019050610fa75f830186610dd6565b610fb46020830185610dd6565b610fc16040830184610d97565b949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ff282610fc9565b9050919050565b61100281610fe8565b82525050565b5f60208201905061101b5f830184610ff9565b92915050565b61102a81610fe8565b8114611034575f80fd5b50565b5f8135905061104581611021565b92915050565b5f602082840312156110605761105f610dfe565b5b5f61106d84828501611037565b91505092915050565b5f819050919050565b5f61109961109461108f84610fc9565b611076565b610fc9565b9050919050565b5f6110aa8261107f565b9050919050565b5f6110bb826110a0565b9050919050565b6110cb816110b1565b82525050565b5f6020820190506110e45f8301846110c2565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050919050565b61115681611144565b8114611160575f80fd5b50565b5f815190506111718161114d565b92915050565b5f6020828403121561118c5761118b610dfe565b5b5f61119984828501611163565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111d982610dbf565b91506111e483610dbf565b925082820190506bffffffffffffffffffffffff811115611208576112076111a2565b5b92915050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611252601f8361120e565b915061125d8261121e565b602082019050919050565b5f6020820190508181035f83015261127f81611246565b9050919050565b61128f81611144565b82525050565b5f6040820190506112a85f830185610ff9565b6112b56020830184611286565b939250505056fea264697066735822122020fed0c8a7c46465c9bc7922d0be54bcc61173b989baf820086dd0e6c2b41e5d64736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1914 CODESIZE SUB DUP1 PUSH2 0x1914 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x390 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE6C4247B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F7EAC2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0x2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 ADD PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0x5DE JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x47E DUP3 PUSH2 0x455 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48E DUP2 PUSH2 0x474 JUMP JUMPDEST DUP2 EQ PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4A9 DUP2 PUSH2 0x485 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CF DUP2 PUSH2 0x4AF JUMP JUMPDEST DUP2 EQ PUSH2 0x4D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4EA DUP2 PUSH2 0x4C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50C DUP2 PUSH2 0x4F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x516 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x527 DUP2 PUSH2 0x503 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x547 JUMPI PUSH2 0x546 PUSH2 0x451 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x554 DUP10 DUP3 DUP11 ADD PUSH2 0x49B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x565 DUP10 DUP3 DUP11 ADD PUSH2 0x4DC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x576 DUP10 DUP3 DUP11 ADD PUSH2 0x4DC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x587 DUP10 DUP3 DUP11 ADD PUSH2 0x4DC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x598 DUP10 DUP3 DUP11 ADD PUSH2 0x519 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x5A9 DUP10 DUP3 DUP11 ADD PUSH2 0x519 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x5BF DUP2 PUSH2 0x474 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x5B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x12F2 PUSH2 0x622 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1E6 ADD MSTORE DUP2 DUP2 PUSH2 0x72F ADD MSTORE PUSH2 0x973 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x3A0 ADD MSTORE DUP2 DUP2 PUSH2 0x50F ADD MSTORE DUP2 DUP2 PUSH2 0x5E7 ADD MSTORE PUSH2 0x6B4 ADD MSTORE PUSH2 0x12F2 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79502C55 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x79502C55 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x806019C1 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AD JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x40306FB6 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x43074C7F EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x58262359 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x121 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x255 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH2 0x29A DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x1117 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST DUP4 PUSH2 0x6D6 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AD JUMPI PUSH2 0x2AC PUSH2 0x1117 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x25E JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x83E JUMP JUMPDEST PUSH2 0x2E3 CALLER PUSH2 0x88D JUMP JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x311 DUP2 PUSH1 0x3 PUSH2 0xAA4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH1 0x18 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3E4 CALLER PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xADC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x61302C72DF1000CA12D41C5583685720A0CBD3233372643A553EB042D670F076 PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x456 PUSH2 0xB5B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x460 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x469 PUSH0 PUSH2 0xBEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50C PUSH2 0xB64 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62B CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xADC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x636 PUSH2 0xB64 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AF DUP2 PUSH2 0xBEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI POP PUSH1 0x4 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x777 JUMPI POP PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7AA JUMPI POP PUSH2 0x7A8 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xCAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x836 JUMPI POP PUSH1 0x2 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x8D9 JUMPI POP PUSH1 0x4 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80CB55E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xCAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x646CF55800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD05CB60900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP3 SWAP1 SHR SWAP1 POP PUSH0 PUSH1 0xFF DUP4 AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD OR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB56 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB0F SWAP3 SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB6C PUSH2 0xD7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB8A PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE9 JUMPI PUSH2 0xBAD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 DUP4 SWAP1 SHR SWAP1 POP PUSH0 PUSH1 0xFF DUP5 AND PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH0 DUP2 DUP7 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND EQ ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD1A JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD35 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD77 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA0 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xD97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDDF DUP2 PUSH2 0xDBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xDD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE27 JUMPI PUSH2 0xE26 PUSH2 0xE06 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0xE0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE60 JUMPI PUSH2 0xE5F PUSH2 0xE0E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xE02 JUMP JUMPDEST JUMPDEST PUSH2 0xEA6 DUP6 DUP3 DUP7 ADD PUSH2 0xE12 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEF DUP2 PUSH2 0xEDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF00 DUP4 DUP4 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF22 DUP3 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0xF2C DUP2 DUP6 PUSH2 0xEBC JUMP JUMPDEST SWAP4 POP PUSH2 0xF37 DUP4 PUSH2 0xECC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF67 JUMPI DUP2 MLOAD PUSH2 0xF4E DUP9 DUP3 PUSH2 0xEF5 JUMP JUMPDEST SWAP8 POP PUSH2 0xF59 DUP4 PUSH2 0xF0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF3A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF8C DUP2 DUP5 PUSH2 0xF18 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFA7 PUSH0 DUP4 ADD DUP7 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xFB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xFC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF2 DUP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1002 DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101B PUSH0 DUP4 ADD DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102A DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1034 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1045 DUP2 PUSH2 0x1021 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1060 JUMPI PUSH2 0x105F PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x106D DUP5 DUP3 DUP6 ADD PUSH2 0x1037 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1099 PUSH2 0x1094 PUSH2 0x108F DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x1076 JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AA DUP3 PUSH2 0x107F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10BB DUP3 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0x10B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1156 DUP2 PUSH2 0x1144 JUMP JUMPDEST DUP2 EQ PUSH2 0x1160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1171 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1199 DUP5 DUP3 DUP6 ADD PUSH2 0x1163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D9 DUP3 PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP PUSH2 0x11E4 DUP4 PUSH2 0xDBF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x1207 PUSH2 0x11A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1252 PUSH1 0x1F DUP4 PUSH2 0x120E JUMP JUMPDEST SWAP2 POP PUSH2 0x125D DUP3 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x127F DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128F DUP2 PUSH2 0x1144 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12A8 PUSH0 DUP4 ADD DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x12B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1286 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 INVALID 0xD0 0xC8 0xA7 0xC4 PUSH5 0x65C9BC7922 0xD0 0xBE SLOAD 0xBC 0xC6 GT PUSH20 0xB989BAF820086DD0E6C2B41E5D64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1044:4850:11:-:0;;;2303:855;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1084:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;2543:1:11;2525:20;;:6;:20;;;2521:49;;2554:16;;;;;;;;;;;;;;2521:49;2602:1;2584:14;:19;;;2580:47;;2612:15;;;;;;;;;;;;;;2580:47;2654:14;2641:27;;:10;:27;;;2637:55;;;2677:15;;;;;;;;;;;;;;2637:55;2720:8;2706:22;;:10;:22;;;2702:48;;2737:13;;;;;;;;;;;;;;2702:48;2777:15;2764:10;:28;;;2760:54;;;2801:13;;;;;;;;;;;;;;2760:54;2881:6;2866:22;;;;;;;;;;2915:15;2898:32;;;;;;;;;;2972:14;2949:6;:20;;;:37;;;;;;;;;;;;;;;;;;3022:10;2996:6;:23;;;:36;;;;;;;;;;;;;;;;;;3067:1;3042:6;:22;;;:26;;;;;;;;;;;;;;;;;;3106:10;3087:16;;:29;;;;;;;;;;;;;;;;;;3143:8;3126:14;;:25;;;;;;;;;;;;;;;;;;2303:855;;;;;;1044:4850;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:109::-;881:7;921:26;914:5;910:38;899:49;;845:109;;;:::o;960:120::-;1032:23;1049:5;1032:23;:::i;:::-;1025:5;1022:34;1012:62;;1070:1;1067;1060:12;1012:62;960:120;:::o;1086:141::-;1142:5;1173:6;1167:13;1158:22;;1189:32;1215:5;1189:32;:::i;:::-;1086:141;;;;:::o;1233:101::-;1269:7;1309:18;1302:5;1298:30;1287:41;;1233:101;;;:::o;1340:120::-;1412:23;1429:5;1412:23;:::i;:::-;1405:5;1402:34;1392:62;;1450:1;1447;1440:12;1392:62;1340:120;:::o;1466:141::-;1522:5;1553:6;1547:13;1538:22;;1569:32;1595:5;1569:32;:::i;:::-;1466:141;;;;:::o;1613:1124::-;1723:6;1731;1739;1747;1755;1763;1812:3;1800:9;1791:7;1787:23;1783:33;1780:120;;;1819:79;;:::i;:::-;1780:120;1939:1;1964:64;2020:7;2011:6;2000:9;1996:22;1964:64;:::i;:::-;1954:74;;1910:128;2077:2;2103:63;2158:7;2149:6;2138:9;2134:22;2103:63;:::i;:::-;2093:73;;2048:128;2215:2;2241:63;2296:7;2287:6;2276:9;2272:22;2241:63;:::i;:::-;2231:73;;2186:128;2353:2;2379:63;2434:7;2425:6;2414:9;2410:22;2379:63;:::i;:::-;2369:73;;2324:128;2491:3;2518:63;2573:7;2564:6;2553:9;2549:22;2518:63;:::i;:::-;2508:73;;2462:129;2630:3;2657:63;2712:7;2703:6;2692:9;2688:22;2657:63;:::i;:::-;2647:73;;2601:129;1613:1124;;;;;;;;:::o;2743:118::-;2830:24;2848:5;2830:24;:::i;:::-;2825:3;2818:37;2743:118;;:::o;2867:222::-;2960:4;2998:2;2987:9;2983:18;2975:26;;3011:71;3079:1;3068:9;3064:17;3055:6;3011:71;:::i;:::-;2867:222;;;;:::o;1044:4850:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_749": {
									"entryPoint": 3298,
									"id": 749,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2916,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isEligible_1560": {
									"entryPoint": 1750,
									"id": 1560,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1062": {
									"entryPoint": 3453,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 2907,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 2110,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3051,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateClaim_1464": {
									"entryPoint": 2189,
									"id": 1464,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdropEndTime_1231": {
									"entryPoint": 1219,
									"id": 1231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropStartTime_1229": {
									"entryPoint": 459,
									"id": 1229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkEligibility_1514": {
									"entryPoint": 520,
									"id": 1514,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimAirdrop_1405": {
									"entryPoint": 722,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@config_1224": {
									"entryPoint": 1131,
									"id": 1224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1592": {
									"entryPoint": 1284,
									"id": 1592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_1161": {
									"entryPoint": 3244,
									"id": 1161,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@minEthRequired_1214": {
									"entryPoint": 484,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1245,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1112,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_427": {
									"entryPoint": 2780,
									"id": 427,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@set_1193": {
									"entryPoint": 2724,
									"id": 1193,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@token_1212": {
									"entryPoint": 1714,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1582,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_bool_to_t_bool": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 3814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint96_fromStack": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 4305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint96_t_uint64__to_t_uint96_t_uint96_t_uint64__fromStack_reversed": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_bool_$dyn_memory_ptr": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_bool_$dyn_memory_ptr": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_bool_$dyn_memory_ptr": {
									"entryPoint": 3852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10460:12",
										"nodeType": "YulBlock",
										"src": "0:10460:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:12",
													"nodeType": "YulBlock",
													"src": "51:57:12",
													"statements": [
														{
															"nativeSrc": "61:41:12",
															"nodeType": "YulAssignment",
															"src": "61:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:12",
																		"nodeType": "YulLiteral",
																		"src": "83:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:12"
																},
																"nativeSrc": "72:30:12",
																"nodeType": "YulFunctionCall",
																"src": "72:30:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:12",
														"nodeType": "YulTypedName",
														"src": "33:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:12",
														"nodeType": "YulTypedName",
														"src": "43:7:12",
														"type": ""
													}
												],
												"src": "7:101:12"
											},
											{
												"body": {
													"nativeSrc": "177:52:12",
													"nodeType": "YulBlock",
													"src": "177:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:12"
																		},
																		"nativeSrc": "199:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:36:12",
																"nodeType": "YulFunctionCall",
																"src": "187:36:12"
															},
															"nativeSrc": "187:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:12",
														"nodeType": "YulTypedName",
														"src": "165:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:12",
														"nodeType": "YulTypedName",
														"src": "172:3:12",
														"type": ""
													}
												],
												"src": "114:115:12"
											},
											{
												"body": {
													"nativeSrc": "331:122:12",
													"nodeType": "YulBlock",
													"src": "331:122:12",
													"statements": [
														{
															"nativeSrc": "341:26:12",
															"nodeType": "YulAssignment",
															"src": "341:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:12",
																		"nodeType": "YulLiteral",
																		"src": "364:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:12"
																},
																"nativeSrc": "349:18:12",
																"nodeType": "YulFunctionCall",
																"src": "349:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:12",
																				"nodeType": "YulLiteral",
																				"src": "443:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:12"
																		},
																		"nativeSrc": "428:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:12"
																},
																"nativeSrc": "377:69:12",
																"nodeType": "YulFunctionCall",
																"src": "377:69:12"
															},
															"nativeSrc": "377:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:12",
														"nodeType": "YulTypedName",
														"src": "303:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:12",
														"nodeType": "YulTypedName",
														"src": "315:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:12",
														"nodeType": "YulTypedName",
														"src": "326:4:12",
														"type": ""
													}
												],
												"src": "235:218:12"
											},
											{
												"body": {
													"nativeSrc": "503:65:12",
													"nodeType": "YulBlock",
													"src": "503:65:12",
													"statements": [
														{
															"nativeSrc": "513:49:12",
															"nodeType": "YulAssignment",
															"src": "513:49:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:26:12",
																		"nodeType": "YulLiteral",
																		"src": "535:26:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "524:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:12"
																},
																"nativeSrc": "524:38:12",
																"nodeType": "YulFunctionCall",
																"src": "524:38:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "513:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "513:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nativeSrc": "459:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "485:5:12",
														"nodeType": "YulTypedName",
														"src": "485:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "495:7:12",
														"nodeType": "YulTypedName",
														"src": "495:7:12",
														"type": ""
													}
												],
												"src": "459:109:12"
											},
											{
												"body": {
													"nativeSrc": "637:52:12",
													"nodeType": "YulBlock",
													"src": "637:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "654:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "654:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "676:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint96",
																			"nativeSrc": "659:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "659:16:12"
																		},
																		"nativeSrc": "659:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "659:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "647:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:12"
																},
																"nativeSrc": "647:36:12",
																"nodeType": "YulFunctionCall",
																"src": "647:36:12"
															},
															"nativeSrc": "647:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "647:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
												"nativeSrc": "574:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "625:5:12",
														"nodeType": "YulTypedName",
														"src": "625:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "632:3:12",
														"nodeType": "YulTypedName",
														"src": "632:3:12",
														"type": ""
													}
												],
												"src": "574:115:12"
											},
											{
												"body": {
													"nativeSrc": "791:122:12",
													"nodeType": "YulBlock",
													"src": "791:122:12",
													"statements": [
														{
															"nativeSrc": "801:26:12",
															"nodeType": "YulAssignment",
															"src": "801:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "813:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "813:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "824:2:12",
																		"nodeType": "YulLiteral",
																		"src": "824:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "809:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:12"
																},
																"nativeSrc": "809:18:12",
																"nodeType": "YulFunctionCall",
																"src": "809:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "801:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "801:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "879:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "879:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "892:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "892:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "903:1:12",
																				"nodeType": "YulLiteral",
																				"src": "903:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "888:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "888:3:12"
																		},
																		"nativeSrc": "888:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "888:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nativeSrc": "837:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "837:41:12"
																},
																"nativeSrc": "837:69:12",
																"nodeType": "YulFunctionCall",
																"src": "837:69:12"
															},
															"nativeSrc": "837:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "837:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "695:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "763:9:12",
														"nodeType": "YulTypedName",
														"src": "763:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "775:6:12",
														"nodeType": "YulTypedName",
														"src": "775:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "786:4:12",
														"nodeType": "YulTypedName",
														"src": "786:4:12",
														"type": ""
													}
												],
												"src": "695:218:12"
											},
											{
												"body": {
													"nativeSrc": "959:35:12",
													"nodeType": "YulBlock",
													"src": "959:35:12",
													"statements": [
														{
															"nativeSrc": "969:19:12",
															"nodeType": "YulAssignment",
															"src": "969:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "985:2:12",
																		"nodeType": "YulLiteral",
																		"src": "985:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "979:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "979:5:12"
																},
																"nativeSrc": "979:9:12",
																"nodeType": "YulFunctionCall",
																"src": "979:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "969:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "969:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "919:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "952:6:12",
														"nodeType": "YulTypedName",
														"src": "952:6:12",
														"type": ""
													}
												],
												"src": "919:75:12"
											},
											{
												"body": {
													"nativeSrc": "1089:28:12",
													"nodeType": "YulBlock",
													"src": "1089:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1106:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1106:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1109:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1109:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1099:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1099:6:12"
																},
																"nativeSrc": "1099:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1099:12:12"
															},
															"nativeSrc": "1099:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1099:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1000:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1000:117:12"
											},
											{
												"body": {
													"nativeSrc": "1212:28:12",
													"nodeType": "YulBlock",
													"src": "1212:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1229:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1229:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1232:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1232:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1222:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1222:6:12"
																},
																"nativeSrc": "1222:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1222:12:12"
															},
															"nativeSrc": "1222:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1222:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1123:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1123:117:12"
											},
											{
												"body": {
													"nativeSrc": "1335:28:12",
													"nodeType": "YulBlock",
													"src": "1335:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1355:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:12"
																},
																"nativeSrc": "1345:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1345:12:12"
															},
															"nativeSrc": "1345:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1345:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1246:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1246:117:12"
											},
											{
												"body": {
													"nativeSrc": "1458:28:12",
													"nodeType": "YulBlock",
													"src": "1458:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1475:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1475:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1478:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1468:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1468:6:12"
																},
																"nativeSrc": "1468:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1468:12:12"
															},
															"nativeSrc": "1468:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1468:12:12"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1369:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1369:117:12"
											},
											{
												"body": {
													"nativeSrc": "1581:28:12",
													"nodeType": "YulBlock",
													"src": "1581:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1598:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1598:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1601:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1601:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1591:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:12"
																},
																"nativeSrc": "1591:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1591:12:12"
															},
															"nativeSrc": "1591:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1591:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1492:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1492:117:12"
											},
											{
												"body": {
													"nativeSrc": "1722:478:12",
													"nodeType": "YulBlock",
													"src": "1722:478:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1771:83:12",
																"nodeType": "YulBlock",
																"src": "1771:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1773:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1773:77:12"
																			},
																			"nativeSrc": "1773:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1773:79:12"
																		},
																		"nativeSrc": "1773:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1773:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1750:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1750:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1758:4:12",
																						"nodeType": "YulLiteral",
																						"src": "1758:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1746:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1746:3:12"
																				},
																				"nativeSrc": "1746:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1746:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1765:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1765:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:12"
																		},
																		"nativeSrc": "1742:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1742:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1735:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1735:6:12"
																},
																"nativeSrc": "1735:35:12",
																"nodeType": "YulFunctionCall",
																"src": "1735:35:12"
															},
															"nativeSrc": "1732:122:12",
															"nodeType": "YulIf",
															"src": "1732:122:12"
														},
														{
															"nativeSrc": "1863:30:12",
															"nodeType": "YulAssignment",
															"src": "1863:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1886:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1886:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1873:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1873:12:12"
																},
																"nativeSrc": "1873:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1873:20:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1863:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1863:6:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1936:83:12",
																"nodeType": "YulBlock",
																"src": "1936:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1938:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1938:77:12"
																			},
																			"nativeSrc": "1938:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1938:79:12"
																		},
																		"nativeSrc": "1938:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1938:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1908:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1908:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1916:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1905:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1905:2:12"
																},
																"nativeSrc": "1905:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1905:30:12"
															},
															"nativeSrc": "1902:117:12",
															"nodeType": "YulIf",
															"src": "1902:117:12"
														},
														{
															"nativeSrc": "2028:29:12",
															"nodeType": "YulAssignment",
															"src": "2028:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2052:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2052:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2040:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2040:3:12"
																},
																"nativeSrc": "2040:17:12",
																"nodeType": "YulFunctionCall",
																"src": "2040:17:12"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2028:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2028:8:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2111:83:12",
																"nodeType": "YulBlock",
																"src": "2111:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2113:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2113:77:12"
																			},
																			"nativeSrc": "2113:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2113:79:12"
																		},
																		"nativeSrc": "2113:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2113:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2076:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "2076:8:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2090:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2090:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2098:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2098:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2086:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2086:3:12"
																				},
																				"nativeSrc": "2086:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2086:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2072:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2072:3:12"
																		},
																		"nativeSrc": "2072:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2072:32:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2106:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2106:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2069:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2069:2:12"
																},
																"nativeSrc": "2069:41:12",
																"nodeType": "YulFunctionCall",
																"src": "2069:41:12"
															},
															"nativeSrc": "2066:128:12",
															"nodeType": "YulIf",
															"src": "2066:128:12"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "1632:568:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1689:6:12",
														"nodeType": "YulTypedName",
														"src": "1689:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1697:3:12",
														"nodeType": "YulTypedName",
														"src": "1697:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1705:8:12",
														"nodeType": "YulTypedName",
														"src": "1705:8:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1715:6:12",
														"nodeType": "YulTypedName",
														"src": "1715:6:12",
														"type": ""
													}
												],
												"src": "1632:568:12"
											},
											{
												"body": {
													"nativeSrc": "2307:458:12",
													"nodeType": "YulBlock",
													"src": "2307:458:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2353:83:12",
																"nodeType": "YulBlock",
																"src": "2353:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2355:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2355:77:12"
																			},
																			"nativeSrc": "2355:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2355:79:12"
																		},
																		"nativeSrc": "2355:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2355:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2328:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2328:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2337:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:12"
																		},
																		"nativeSrc": "2324:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2349:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2349:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2320:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:12"
																},
																"nativeSrc": "2320:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2320:32:12"
															},
															"nativeSrc": "2317:119:12",
															"nodeType": "YulIf",
															"src": "2317:119:12"
														},
														{
															"nativeSrc": "2446:312:12",
															"nodeType": "YulBlock",
															"src": "2446:312:12",
															"statements": [
																{
																	"nativeSrc": "2461:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2461:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2492:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2492:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2503:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2503:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2488:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2488:3:12"
																				},
																				"nativeSrc": "2488:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2488:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2475:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "2475:12:12"
																		},
																		"nativeSrc": "2475:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2475:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2465:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2465:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2553:83:12",
																		"nodeType": "YulBlock",
																		"src": "2553:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2555:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "2555:77:12"
																					},
																					"nativeSrc": "2555:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2555:79:12"
																				},
																				"nativeSrc": "2555:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2555:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2525:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2525:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2533:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2533:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2522:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2522:2:12"
																		},
																		"nativeSrc": "2522:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2522:30:12"
																	},
																	"nativeSrc": "2519:117:12",
																	"nodeType": "YulIf",
																	"src": "2519:117:12"
																},
																{
																	"nativeSrc": "2650:98:12",
																	"nodeType": "YulAssignment",
																	"src": "2650:98:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2720:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2720:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2731:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2731:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2716:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2716:3:12"
																				},
																				"nativeSrc": "2716:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2716:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2740:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2740:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "2668:47:12",
																			"nodeType": "YulIdentifier",
																			"src": "2668:47:12"
																		},
																		"nativeSrc": "2668:80:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2668:80:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2650:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2650:6:12"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "2658:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2658:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "2206:559:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2269:9:12",
														"nodeType": "YulTypedName",
														"src": "2269:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2280:7:12",
														"nodeType": "YulTypedName",
														"src": "2280:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2292:6:12",
														"nodeType": "YulTypedName",
														"src": "2292:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2300:6:12",
														"nodeType": "YulTypedName",
														"src": "2300:6:12",
														"type": ""
													}
												],
												"src": "2206:559:12"
											},
											{
												"body": {
													"nativeSrc": "2842:40:12",
													"nodeType": "YulBlock",
													"src": "2842:40:12",
													"statements": [
														{
															"nativeSrc": "2853:22:12",
															"nodeType": "YulAssignment",
															"src": "2853:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2869:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2869:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:12"
																},
																"nativeSrc": "2863:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2863:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2853:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2853:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
												"nativeSrc": "2771:111:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2825:5:12",
														"nodeType": "YulTypedName",
														"src": "2825:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2835:6:12",
														"nodeType": "YulTypedName",
														"src": "2835:6:12",
														"type": ""
													}
												],
												"src": "2771:111:12"
											},
											{
												"body": {
													"nativeSrc": "2996:73:12",
													"nodeType": "YulBlock",
													"src": "2996:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3013:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3013:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3018:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3018:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3006:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:12"
																},
																"nativeSrc": "3006:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3006:19:12"
															},
															"nativeSrc": "3006:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "3006:19:12"
														},
														{
															"nativeSrc": "3034:29:12",
															"nodeType": "YulAssignment",
															"src": "3034:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3053:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3053:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3058:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3058:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3049:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:12"
																},
																"nativeSrc": "3049:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3049:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3034:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "3034:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2888:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2968:3:12",
														"nodeType": "YulTypedName",
														"src": "2968:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2973:6:12",
														"nodeType": "YulTypedName",
														"src": "2973:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2984:11:12",
														"nodeType": "YulTypedName",
														"src": "2984:11:12",
														"type": ""
													}
												],
												"src": "2888:181:12"
											},
											{
												"body": {
													"nativeSrc": "3144:60:12",
													"nodeType": "YulBlock",
													"src": "3144:60:12",
													"statements": [
														{
															"nativeSrc": "3154:11:12",
															"nodeType": "YulAssignment",
															"src": "3154:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "3162:3:12",
																"nodeType": "YulIdentifier",
																"src": "3162:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3154:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3154:4:12"
																}
															]
														},
														{
															"nativeSrc": "3175:22:12",
															"nodeType": "YulAssignment",
															"src": "3175:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3187:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3187:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3192:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3192:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3183:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3183:3:12"
																},
																"nativeSrc": "3183:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3183:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3175:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3175:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
												"nativeSrc": "3075:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3131:3:12",
														"nodeType": "YulTypedName",
														"src": "3131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3139:4:12",
														"nodeType": "YulTypedName",
														"src": "3139:4:12",
														"type": ""
													}
												],
												"src": "3075:129:12"
											},
											{
												"body": {
													"nativeSrc": "3252:48:12",
													"nodeType": "YulBlock",
													"src": "3252:48:12",
													"statements": [
														{
															"nativeSrc": "3262:32:12",
															"nodeType": "YulAssignment",
															"src": "3262:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3287:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3287:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3280:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3280:6:12"
																		},
																		"nativeSrc": "3280:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3280:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3273:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:12"
																},
																"nativeSrc": "3273:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3273:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3262:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3262:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3210:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3234:5:12",
														"nodeType": "YulTypedName",
														"src": "3234:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3244:7:12",
														"nodeType": "YulTypedName",
														"src": "3244:7:12",
														"type": ""
													}
												],
												"src": "3210:90:12"
											},
											{
												"body": {
													"nativeSrc": "3355:50:12",
													"nodeType": "YulBlock",
													"src": "3355:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3372:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3372:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3392:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3377:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3377:14:12"
																		},
																		"nativeSrc": "3377:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3377:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3365:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3365:6:12"
																},
																"nativeSrc": "3365:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3365:34:12"
															},
															"nativeSrc": "3365:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3365:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "3306:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3343:5:12",
														"nodeType": "YulTypedName",
														"src": "3343:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3350:3:12",
														"nodeType": "YulTypedName",
														"src": "3350:3:12",
														"type": ""
													}
												],
												"src": "3306:99:12"
											},
											{
												"body": {
													"nativeSrc": "3485:93:12",
													"nodeType": "YulBlock",
													"src": "3485:93:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3523:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3523:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3531:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3531:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool",
																	"nativeSrc": "3495:27:12",
																	"nodeType": "YulIdentifier",
																	"src": "3495:27:12"
																},
																"nativeSrc": "3495:40:12",
																"nodeType": "YulFunctionCall",
																"src": "3495:40:12"
															},
															"nativeSrc": "3495:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "3495:40:12"
														},
														{
															"nativeSrc": "3544:28:12",
															"nodeType": "YulAssignment",
															"src": "3544:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3562:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3562:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3567:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3567:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3558:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:12"
																},
																"nativeSrc": "3558:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3558:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3544:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "3544:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
												"nativeSrc": "3411:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3458:6:12",
														"nodeType": "YulTypedName",
														"src": "3458:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3466:3:12",
														"nodeType": "YulTypedName",
														"src": "3466:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3474:10:12",
														"nodeType": "YulTypedName",
														"src": "3474:10:12",
														"type": ""
													}
												],
												"src": "3411:167:12"
											},
											{
												"body": {
													"nativeSrc": "3656:38:12",
													"nodeType": "YulBlock",
													"src": "3656:38:12",
													"statements": [
														{
															"nativeSrc": "3666:22:12",
															"nodeType": "YulAssignment",
															"src": "3666:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3678:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3678:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3683:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3683:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3674:3:12"
																},
																"nativeSrc": "3674:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3674:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3666:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3666:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
												"nativeSrc": "3584:110:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3643:3:12",
														"nodeType": "YulTypedName",
														"src": "3643:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3651:4:12",
														"nodeType": "YulTypedName",
														"src": "3651:4:12",
														"type": ""
													}
												],
												"src": "3584:110:12"
											},
											{
												"body": {
													"nativeSrc": "3842:590:12",
													"nodeType": "YulBlock",
													"src": "3842:590:12",
													"statements": [
														{
															"nativeSrc": "3852:65:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3852:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3911:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3911:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_bool_$dyn_memory_ptr",
																	"nativeSrc": "3866:44:12",
																	"nodeType": "YulIdentifier",
																	"src": "3866:44:12"
																},
																"nativeSrc": "3866:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3866:51:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3856:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3856:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3926:90:12",
															"nodeType": "YulAssignment",
															"src": "3926:90:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4004:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4004:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4009:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4009:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3933:70:12",
																	"nodeType": "YulIdentifier",
																	"src": "3933:70:12"
																},
																"nativeSrc": "3933:83:12",
																"nodeType": "YulFunctionCall",
																"src": "3933:83:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3926:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:12"
																}
															]
														},
														{
															"nativeSrc": "4025:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4025:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4087:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4087:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_bool_$dyn_memory_ptr",
																	"nativeSrc": "4040:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "4040:46:12"
																},
																"nativeSrc": "4040:53:12",
																"nodeType": "YulFunctionCall",
																"src": "4040:53:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4029:7:12",
																	"nodeType": "YulTypedName",
																	"src": "4029:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4102:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4102:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4116:7:12",
																"nodeType": "YulIdentifier",
																"src": "4116:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4106:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4106:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4192:215:12",
																"nodeType": "YulBlock",
																"src": "4192:215:12",
																"statements": [
																	{
																		"nativeSrc": "4206:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4206:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4233:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4233:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4227:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4227:5:12"
																			},
																			"nativeSrc": "4227:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4227:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4210:13:12",
																				"nodeType": "YulTypedName",
																				"src": "4210:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4253:64:12",
																		"nodeType": "YulAssignment",
																		"src": "4253:64:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4298:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "4298:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4313:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4313:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_bool_to_t_bool",
																				"nativeSrc": "4260:37:12",
																				"nodeType": "YulIdentifier",
																				"src": "4260:37:12"
																			},
																			"nativeSrc": "4260:57:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4260:57:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4253:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4253:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4330:67:12",
																		"nodeType": "YulAssignment",
																		"src": "4330:67:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4390:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4390:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_bool_$dyn_memory_ptr",
																				"nativeSrc": "4340:49:12",
																				"nodeType": "YulIdentifier",
																				"src": "4340:49:12"
																			},
																			"nativeSrc": "4340:57:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4340:57:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4330:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4330:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4154:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4154:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4157:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4157:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4151:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4151:2:12"
																},
																"nativeSrc": "4151:13:12",
																"nodeType": "YulFunctionCall",
																"src": "4151:13:12"
															},
															"nativeSrc": "4132:275:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4165:18:12",
																"nodeType": "YulBlock",
																"src": "4165:18:12",
																"statements": [
																	{
																		"nativeSrc": "4167:14:12",
																		"nodeType": "YulAssignment",
																		"src": "4167:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4176:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "4176:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4179:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4179:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4172:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4172:3:12"
																			},
																			"nativeSrc": "4172:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4172:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4167:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4167:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4136:14:12",
																"nodeType": "YulBlock",
																"src": "4136:14:12",
																"statements": [
																	{
																		"nativeSrc": "4138:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4138:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4147:1:12",
																			"nodeType": "YulLiteral",
																			"src": "4147:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4142:1:12",
																				"nodeType": "YulTypedName",
																				"src": "4142:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4132:275:12"
														},
														{
															"nativeSrc": "4416:10:12",
															"nodeType": "YulAssignment",
															"src": "4416:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "4423:3:12",
																"nodeType": "YulIdentifier",
																"src": "4423:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4416:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4416:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3724:708:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3821:5:12",
														"nodeType": "YulTypedName",
														"src": "3821:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3828:3:12",
														"nodeType": "YulTypedName",
														"src": "3828:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3837:3:12",
														"nodeType": "YulTypedName",
														"src": "3837:3:12",
														"type": ""
													}
												],
												"src": "3724:708:12"
											},
											{
												"body": {
													"nativeSrc": "4580:219:12",
													"nodeType": "YulBlock",
													"src": "4580:219:12",
													"statements": [
														{
															"nativeSrc": "4590:26:12",
															"nodeType": "YulAssignment",
															"src": "4590:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4602:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4602:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4613:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4613:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4598:3:12"
																},
																"nativeSrc": "4598:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4598:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4590:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4590:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4637:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4637:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4648:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4648:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4633:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4633:3:12"
																		},
																		"nativeSrc": "4633:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4633:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4656:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4656:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4662:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4662:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4652:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:12"
																		},
																		"nativeSrc": "4652:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4652:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:12"
																},
																"nativeSrc": "4626:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4626:47:12"
															},
															"nativeSrc": "4626:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4626:47:12"
														},
														{
															"nativeSrc": "4682:110:12",
															"nodeType": "YulAssignment",
															"src": "4682:110:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4778:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4778:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4787:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4787:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4690:87:12",
																	"nodeType": "YulIdentifier",
																	"src": "4690:87:12"
																},
																"nativeSrc": "4690:102:12",
																"nodeType": "YulFunctionCall",
																"src": "4690:102:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4682:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4682:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4438:361:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4552:9:12",
														"nodeType": "YulTypedName",
														"src": "4552:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4564:6:12",
														"nodeType": "YulTypedName",
														"src": "4564:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4575:4:12",
														"nodeType": "YulTypedName",
														"src": "4575:4:12",
														"type": ""
													}
												],
												"src": "4438:361:12"
											},
											{
												"body": {
													"nativeSrc": "4953:282:12",
													"nodeType": "YulBlock",
													"src": "4953:282:12",
													"statements": [
														{
															"nativeSrc": "4963:26:12",
															"nodeType": "YulAssignment",
															"src": "4963:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4975:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4975:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4986:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4986:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4971:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4971:3:12"
																},
																"nativeSrc": "4971:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4971:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4963:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4963:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:12"
																		},
																		"nativeSrc": "5050:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nativeSrc": "4999:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "4999:41:12"
																},
																"nativeSrc": "4999:69:12",
																"nodeType": "YulFunctionCall",
																"src": "4999:69:12"
															},
															"nativeSrc": "4999:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "4999:69:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5120:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5120:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:12"
																		},
																		"nativeSrc": "5129:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nativeSrc": "5078:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "5078:41:12"
																},
																"nativeSrc": "5078:70:12",
																"nodeType": "YulFunctionCall",
																"src": "5078:70:12"
															},
															"nativeSrc": "5078:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "5078:70:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5200:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5200:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5213:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5213:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5224:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5224:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5209:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5209:3:12"
																		},
																		"nativeSrc": "5209:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5209:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "5158:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "5158:41:12"
																},
																"nativeSrc": "5158:70:12",
																"nodeType": "YulFunctionCall",
																"src": "5158:70:12"
															},
															"nativeSrc": "5158:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "5158:70:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint96_t_uint64__to_t_uint96_t_uint96_t_uint64__fromStack_reversed",
												"nativeSrc": "4805:430:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4909:9:12",
														"nodeType": "YulTypedName",
														"src": "4909:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4921:6:12",
														"nodeType": "YulTypedName",
														"src": "4921:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4929:6:12",
														"nodeType": "YulTypedName",
														"src": "4929:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4937:6:12",
														"nodeType": "YulTypedName",
														"src": "4937:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4948:4:12",
														"nodeType": "YulTypedName",
														"src": "4948:4:12",
														"type": ""
													}
												],
												"src": "4805:430:12"
											},
											{
												"body": {
													"nativeSrc": "5286:81:12",
													"nodeType": "YulBlock",
													"src": "5286:81:12",
													"statements": [
														{
															"nativeSrc": "5296:65:12",
															"nodeType": "YulAssignment",
															"src": "5296:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5311:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5311:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5318:42:12",
																		"nodeType": "YulLiteral",
																		"src": "5318:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5307:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5307:3:12"
																},
																"nativeSrc": "5307:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5307:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5296:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5296:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5241:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5268:5:12",
														"nodeType": "YulTypedName",
														"src": "5268:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5278:7:12",
														"nodeType": "YulTypedName",
														"src": "5278:7:12",
														"type": ""
													}
												],
												"src": "5241:126:12"
											},
											{
												"body": {
													"nativeSrc": "5418:51:12",
													"nodeType": "YulBlock",
													"src": "5418:51:12",
													"statements": [
														{
															"nativeSrc": "5428:35:12",
															"nodeType": "YulAssignment",
															"src": "5428:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5457:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5457:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5439:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5439:17:12"
																},
																"nativeSrc": "5439:24:12",
																"nodeType": "YulFunctionCall",
																"src": "5439:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5428:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5428:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5373:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5400:5:12",
														"nodeType": "YulTypedName",
														"src": "5400:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5410:7:12",
														"nodeType": "YulTypedName",
														"src": "5410:7:12",
														"type": ""
													}
												],
												"src": "5373:96:12"
											},
											{
												"body": {
													"nativeSrc": "5540:53:12",
													"nodeType": "YulBlock",
													"src": "5540:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5557:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5557:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5580:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5580:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5562:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5562:17:12"
																		},
																		"nativeSrc": "5562:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5562:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5550:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:12"
																},
																"nativeSrc": "5550:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5550:37:12"
															},
															"nativeSrc": "5550:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5550:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5475:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5528:5:12",
														"nodeType": "YulTypedName",
														"src": "5528:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5535:3:12",
														"nodeType": "YulTypedName",
														"src": "5535:3:12",
														"type": ""
													}
												],
												"src": "5475:118:12"
											},
											{
												"body": {
													"nativeSrc": "5697:124:12",
													"nodeType": "YulBlock",
													"src": "5697:124:12",
													"statements": [
														{
															"nativeSrc": "5707:26:12",
															"nodeType": "YulAssignment",
															"src": "5707:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5719:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5719:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5730:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5715:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5715:3:12"
																},
																"nativeSrc": "5715:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5715:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5707:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5707:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5787:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5787:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5800:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5800:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5811:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5811:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5796:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5796:3:12"
																		},
																		"nativeSrc": "5796:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5796:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5743:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5743:43:12"
																},
																"nativeSrc": "5743:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5743:71:12"
															},
															"nativeSrc": "5743:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5743:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5599:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5669:9:12",
														"nodeType": "YulTypedName",
														"src": "5669:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5681:6:12",
														"nodeType": "YulTypedName",
														"src": "5681:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5692:4:12",
														"nodeType": "YulTypedName",
														"src": "5692:4:12",
														"type": ""
													}
												],
												"src": "5599:222:12"
											},
											{
												"body": {
													"nativeSrc": "5870:79:12",
													"nodeType": "YulBlock",
													"src": "5870:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5927:16:12",
																"nodeType": "YulBlock",
																"src": "5927:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5936:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5936:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5939:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5939:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5929:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5929:6:12"
																			},
																			"nativeSrc": "5929:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5929:12:12"
																		},
																		"nativeSrc": "5929:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5929:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5893:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5893:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5918:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5918:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5900:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5900:17:12"
																				},
																				"nativeSrc": "5900:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5900:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5890:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5890:2:12"
																		},
																		"nativeSrc": "5890:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5890:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5883:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5883:6:12"
																},
																"nativeSrc": "5883:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5883:43:12"
															},
															"nativeSrc": "5880:63:12",
															"nodeType": "YulIf",
															"src": "5880:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5827:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5863:5:12",
														"nodeType": "YulTypedName",
														"src": "5863:5:12",
														"type": ""
													}
												],
												"src": "5827:122:12"
											},
											{
												"body": {
													"nativeSrc": "6007:87:12",
													"nodeType": "YulBlock",
													"src": "6007:87:12",
													"statements": [
														{
															"nativeSrc": "6017:29:12",
															"nodeType": "YulAssignment",
															"src": "6017:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6039:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6039:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6026:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6026:12:12"
																},
																"nativeSrc": "6026:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6026:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6017:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6017:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6082:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6082:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6055:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "6055:26:12"
																},
																"nativeSrc": "6055:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6055:33:12"
															},
															"nativeSrc": "6055:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "6055:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "5955:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5985:6:12",
														"nodeType": "YulTypedName",
														"src": "5985:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5993:3:12",
														"nodeType": "YulTypedName",
														"src": "5993:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6001:5:12",
														"nodeType": "YulTypedName",
														"src": "6001:5:12",
														"type": ""
													}
												],
												"src": "5955:139:12"
											},
											{
												"body": {
													"nativeSrc": "6166:263:12",
													"nodeType": "YulBlock",
													"src": "6166:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6212:83:12",
																"nodeType": "YulBlock",
																"src": "6212:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6214:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6214:77:12"
																			},
																			"nativeSrc": "6214:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6214:79:12"
																		},
																		"nativeSrc": "6214:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6214:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6187:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6187:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6183:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6183:3:12"
																		},
																		"nativeSrc": "6183:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6183:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6208:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6208:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6179:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6179:3:12"
																},
																"nativeSrc": "6179:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6179:32:12"
															},
															"nativeSrc": "6176:119:12",
															"nodeType": "YulIf",
															"src": "6176:119:12"
														},
														{
															"nativeSrc": "6305:117:12",
															"nodeType": "YulBlock",
															"src": "6305:117:12",
															"statements": [
																{
																	"nativeSrc": "6320:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6320:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6334:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6324:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6324:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6349:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6349:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6384:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6384:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6395:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6395:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6380:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6380:3:12"
																				},
																				"nativeSrc": "6380:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6380:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6404:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6404:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6359:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6359:20:12"
																		},
																		"nativeSrc": "6359:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6359:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6349:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6349:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6100:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6136:9:12",
														"nodeType": "YulTypedName",
														"src": "6136:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6147:7:12",
														"nodeType": "YulTypedName",
														"src": "6147:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6159:6:12",
														"nodeType": "YulTypedName",
														"src": "6159:6:12",
														"type": ""
													}
												],
												"src": "6100:329:12"
											},
											{
												"body": {
													"nativeSrc": "6467:28:12",
													"nodeType": "YulBlock",
													"src": "6467:28:12",
													"statements": [
														{
															"nativeSrc": "6477:12:12",
															"nodeType": "YulAssignment",
															"src": "6477:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "6484:5:12",
																"nodeType": "YulIdentifier",
																"src": "6484:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6477:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6477:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6435:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6453:5:12",
														"nodeType": "YulTypedName",
														"src": "6453:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6463:3:12",
														"nodeType": "YulTypedName",
														"src": "6463:3:12",
														"type": ""
													}
												],
												"src": "6435:60:12"
											},
											{
												"body": {
													"nativeSrc": "6561:82:12",
													"nodeType": "YulBlock",
													"src": "6561:82:12",
													"statements": [
														{
															"nativeSrc": "6571:66:12",
															"nodeType": "YulAssignment",
															"src": "6571:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6629:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6629:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6611:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "6611:17:12"
																				},
																				"nativeSrc": "6611:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6611:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6602:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "6602:8:12"
																		},
																		"nativeSrc": "6602:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6602:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6584:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6584:17:12"
																},
																"nativeSrc": "6584:53:12",
																"nodeType": "YulFunctionCall",
																"src": "6584:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6571:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6571:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6501:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6541:5:12",
														"nodeType": "YulTypedName",
														"src": "6541:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6551:9:12",
														"nodeType": "YulTypedName",
														"src": "6551:9:12",
														"type": ""
													}
												],
												"src": "6501:142:12"
											},
											{
												"body": {
													"nativeSrc": "6709:66:12",
													"nodeType": "YulBlock",
													"src": "6709:66:12",
													"statements": [
														{
															"nativeSrc": "6719:50:12",
															"nodeType": "YulAssignment",
															"src": "6719:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6763:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6763:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6732:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6732:30:12"
																},
																"nativeSrc": "6732:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6732:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6719:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6719:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6649:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6689:5:12",
														"nodeType": "YulTypedName",
														"src": "6689:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6699:9:12",
														"nodeType": "YulTypedName",
														"src": "6699:9:12",
														"type": ""
													}
												],
												"src": "6649:126:12"
											},
											{
												"body": {
													"nativeSrc": "6855:66:12",
													"nodeType": "YulBlock",
													"src": "6855:66:12",
													"statements": [
														{
															"nativeSrc": "6865:50:12",
															"nodeType": "YulAssignment",
															"src": "6865:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6909:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6909:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6878:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6878:30:12"
																},
																"nativeSrc": "6878:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6878:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6865:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6865:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "6781:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6835:5:12",
														"nodeType": "YulTypedName",
														"src": "6835:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6845:9:12",
														"nodeType": "YulTypedName",
														"src": "6845:9:12",
														"type": ""
													}
												],
												"src": "6781:140:12"
											},
											{
												"body": {
													"nativeSrc": "7006:80:12",
													"nodeType": "YulBlock",
													"src": "7006:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7023:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7023:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7073:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7073:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "7028:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "7028:44:12"
																		},
																		"nativeSrc": "7028:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7028:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7016:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7016:6:12"
																},
																"nativeSrc": "7016:64:12",
																"nodeType": "YulFunctionCall",
																"src": "7016:64:12"
															},
															"nativeSrc": "7016:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "7016:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "6927:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6994:5:12",
														"nodeType": "YulTypedName",
														"src": "6994:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7001:3:12",
														"nodeType": "YulTypedName",
														"src": "7001:3:12",
														"type": ""
													}
												],
												"src": "6927:159:12"
											},
											{
												"body": {
													"nativeSrc": "7204:138:12",
													"nodeType": "YulBlock",
													"src": "7204:138:12",
													"statements": [
														{
															"nativeSrc": "7214:26:12",
															"nodeType": "YulAssignment",
															"src": "7214:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7226:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7226:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7237:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7237:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7222:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7222:3:12"
																},
																"nativeSrc": "7222:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7222:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7214:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7214:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7308:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7308:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7321:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7321:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7332:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7332:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7317:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7317:3:12"
																		},
																		"nativeSrc": "7317:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7317:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "7250:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "7250:57:12"
																},
																"nativeSrc": "7250:85:12",
																"nodeType": "YulFunctionCall",
																"src": "7250:85:12"
															},
															"nativeSrc": "7250:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "7250:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "7092:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7176:9:12",
														"nodeType": "YulTypedName",
														"src": "7176:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7188:6:12",
														"nodeType": "YulTypedName",
														"src": "7188:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7199:4:12",
														"nodeType": "YulTypedName",
														"src": "7199:4:12",
														"type": ""
													}
												],
												"src": "7092:250:12"
											},
											{
												"body": {
													"nativeSrc": "7376:152:12",
													"nodeType": "YulBlock",
													"src": "7376:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7393:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7393:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7396:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7396:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7386:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:12"
																},
																"nativeSrc": "7386:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7386:88:12"
															},
															"nativeSrc": "7386:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7386:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7490:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7490:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7493:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7493:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7483:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7483:6:12"
																},
																"nativeSrc": "7483:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7483:15:12"
															},
															"nativeSrc": "7483:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7483:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7514:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7514:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7517:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7517:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7507:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:12"
																},
																"nativeSrc": "7507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7507:15:12"
															},
															"nativeSrc": "7507:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7507:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7348:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7348:180:12"
											},
											{
												"body": {
													"nativeSrc": "7562:152:12",
													"nodeType": "YulBlock",
													"src": "7562:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7579:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7579:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7582:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7582:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7572:6:12"
																},
																"nativeSrc": "7572:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7572:88:12"
															},
															"nativeSrc": "7572:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7572:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7676:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7676:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7679:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7679:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7669:6:12"
																},
																"nativeSrc": "7669:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7669:15:12"
															},
															"nativeSrc": "7669:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7669:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7700:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7700:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7703:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7703:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7693:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7693:6:12"
																},
																"nativeSrc": "7693:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7693:15:12"
															},
															"nativeSrc": "7693:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7693:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7534:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7534:180:12"
											},
											{
												"body": {
													"nativeSrc": "7765:32:12",
													"nodeType": "YulBlock",
													"src": "7765:32:12",
													"statements": [
														{
															"nativeSrc": "7775:16:12",
															"nodeType": "YulAssignment",
															"src": "7775:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "7786:5:12",
																"nodeType": "YulIdentifier",
																"src": "7786:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7775:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7775:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7720:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7747:5:12",
														"nodeType": "YulTypedName",
														"src": "7747:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7757:7:12",
														"nodeType": "YulTypedName",
														"src": "7757:7:12",
														"type": ""
													}
												],
												"src": "7720:77:12"
											},
											{
												"body": {
													"nativeSrc": "7846:79:12",
													"nodeType": "YulBlock",
													"src": "7846:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7903:16:12",
																"nodeType": "YulBlock",
																"src": "7903:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7912:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7912:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7915:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7915:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7905:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7905:6:12"
																			},
																			"nativeSrc": "7905:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7905:12:12"
																		},
																		"nativeSrc": "7905:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7905:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7869:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7894:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7894:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7876:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "7876:17:12"
																				},
																				"nativeSrc": "7876:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7876:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7866:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7866:2:12"
																		},
																		"nativeSrc": "7866:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7866:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7859:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:12"
																},
																"nativeSrc": "7859:43:12",
																"nodeType": "YulFunctionCall",
																"src": "7859:43:12"
															},
															"nativeSrc": "7856:63:12",
															"nodeType": "YulIf",
															"src": "7856:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7803:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7839:5:12",
														"nodeType": "YulTypedName",
														"src": "7839:5:12",
														"type": ""
													}
												],
												"src": "7803:122:12"
											},
											{
												"body": {
													"nativeSrc": "7994:80:12",
													"nodeType": "YulBlock",
													"src": "7994:80:12",
													"statements": [
														{
															"nativeSrc": "8004:22:12",
															"nodeType": "YulAssignment",
															"src": "8004:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8019:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8019:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8013:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8013:5:12"
																},
																"nativeSrc": "8013:13:12",
																"nodeType": "YulFunctionCall",
																"src": "8013:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8004:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8004:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8062:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8062:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8035:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "8035:26:12"
																},
																"nativeSrc": "8035:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8035:33:12"
															},
															"nativeSrc": "8035:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "8035:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7931:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7972:6:12",
														"nodeType": "YulTypedName",
														"src": "7972:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7980:3:12",
														"nodeType": "YulTypedName",
														"src": "7980:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7988:5:12",
														"nodeType": "YulTypedName",
														"src": "7988:5:12",
														"type": ""
													}
												],
												"src": "7931:143:12"
											},
											{
												"body": {
													"nativeSrc": "8157:274:12",
													"nodeType": "YulBlock",
													"src": "8157:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8203:83:12",
																"nodeType": "YulBlock",
																"src": "8203:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8205:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8205:77:12"
																			},
																			"nativeSrc": "8205:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8205:79:12"
																		},
																		"nativeSrc": "8205:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8205:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8178:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8178:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8187:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8187:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8174:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8174:3:12"
																		},
																		"nativeSrc": "8174:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8174:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8199:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8199:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8170:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8170:3:12"
																},
																"nativeSrc": "8170:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8170:32:12"
															},
															"nativeSrc": "8167:119:12",
															"nodeType": "YulIf",
															"src": "8167:119:12"
														},
														{
															"nativeSrc": "8296:128:12",
															"nodeType": "YulBlock",
															"src": "8296:128:12",
															"statements": [
																{
																	"nativeSrc": "8311:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8311:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8325:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8325:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8315:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8315:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8340:74:12",
																	"nodeType": "YulAssignment",
																	"src": "8340:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8386:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8386:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8397:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8397:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8382:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8382:3:12"
																				},
																				"nativeSrc": "8382:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8382:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8406:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8406:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8350:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "8350:31:12"
																		},
																		"nativeSrc": "8350:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8350:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8340:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8340:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8080:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8127:9:12",
														"nodeType": "YulTypedName",
														"src": "8127:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8138:7:12",
														"nodeType": "YulTypedName",
														"src": "8138:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8150:6:12",
														"nodeType": "YulTypedName",
														"src": "8150:6:12",
														"type": ""
													}
												],
												"src": "8080:351:12"
											},
											{
												"body": {
													"nativeSrc": "8465:152:12",
													"nodeType": "YulBlock",
													"src": "8465:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8482:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8482:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8485:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8485:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8475:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8475:6:12"
																},
																"nativeSrc": "8475:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8475:88:12"
															},
															"nativeSrc": "8475:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8475:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8579:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8579:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8582:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8582:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8572:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8572:6:12"
																},
																"nativeSrc": "8572:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8572:15:12"
															},
															"nativeSrc": "8572:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8572:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8603:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8603:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8606:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8606:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8596:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8596:6:12"
																},
																"nativeSrc": "8596:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8596:15:12"
															},
															"nativeSrc": "8596:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8596:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8437:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8437:180:12"
											},
											{
												"body": {
													"nativeSrc": "8666:170:12",
													"nodeType": "YulBlock",
													"src": "8666:170:12",
													"statements": [
														{
															"nativeSrc": "8676:24:12",
															"nodeType": "YulAssignment",
															"src": "8676:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8698:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8698:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nativeSrc": "8681:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "8681:16:12"
																},
																"nativeSrc": "8681:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8681:19:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8676:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8676:1:12"
																}
															]
														},
														{
															"nativeSrc": "8709:24:12",
															"nodeType": "YulAssignment",
															"src": "8709:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8731:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8731:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nativeSrc": "8714:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "8714:16:12"
																},
																"nativeSrc": "8714:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8714:19:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8709:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8709:1:12"
																}
															]
														},
														{
															"nativeSrc": "8742:16:12",
															"nodeType": "YulAssignment",
															"src": "8742:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8753:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8753:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8756:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8756:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8749:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8749:3:12"
																},
																"nativeSrc": "8749:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8749:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8742:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8742:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8807:22:12",
																"nodeType": "YulBlock",
																"src": "8807:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8809:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8809:16:12"
																			},
																			"nativeSrc": "8809:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8809:18:12"
																		},
																		"nativeSrc": "8809:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8809:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "8774:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8774:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8779:26:12",
																		"nodeType": "YulLiteral",
																		"src": "8779:26:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8771:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8771:2:12"
																},
																"nativeSrc": "8771:35:12",
																"nodeType": "YulFunctionCall",
																"src": "8771:35:12"
															},
															"nativeSrc": "8768:61:12",
															"nodeType": "YulIf",
															"src": "8768:61:12"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "8623:213:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8653:1:12",
														"nodeType": "YulTypedName",
														"src": "8653:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8656:1:12",
														"nodeType": "YulTypedName",
														"src": "8656:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8662:3:12",
														"nodeType": "YulTypedName",
														"src": "8662:3:12",
														"type": ""
													}
												],
												"src": "8623:213:12"
											},
											{
												"body": {
													"nativeSrc": "8938:73:12",
													"nodeType": "YulBlock",
													"src": "8938:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8955:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8955:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8960:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8960:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8948:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:12"
																},
																"nativeSrc": "8948:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8948:19:12"
															},
															"nativeSrc": "8948:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8948:19:12"
														},
														{
															"nativeSrc": "8976:29:12",
															"nodeType": "YulAssignment",
															"src": "8976:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8995:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8995:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9000:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9000:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8991:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8991:3:12"
																},
																"nativeSrc": "8991:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8991:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8976:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "8976:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8842:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8910:3:12",
														"nodeType": "YulTypedName",
														"src": "8910:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8915:6:12",
														"nodeType": "YulTypedName",
														"src": "8915:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8926:11:12",
														"nodeType": "YulTypedName",
														"src": "8926:11:12",
														"type": ""
													}
												],
												"src": "8842:169:12"
											},
											{
												"body": {
													"nativeSrc": "9123:75:12",
													"nodeType": "YulBlock",
													"src": "9123:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9145:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9145:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9153:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9153:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9141:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:12"
																		},
																		"nativeSrc": "9141:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9157:33:12",
																		"nodeType": "YulLiteral",
																		"src": "9157:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9134:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9134:6:12"
																},
																"nativeSrc": "9134:57:12",
																"nodeType": "YulFunctionCall",
																"src": "9134:57:12"
															},
															"nativeSrc": "9134:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "9134:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "9017:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9115:6:12",
														"nodeType": "YulTypedName",
														"src": "9115:6:12",
														"type": ""
													}
												],
												"src": "9017:181:12"
											},
											{
												"body": {
													"nativeSrc": "9350:220:12",
													"nodeType": "YulBlock",
													"src": "9350:220:12",
													"statements": [
														{
															"nativeSrc": "9360:74:12",
															"nodeType": "YulAssignment",
															"src": "9360:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9426:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9426:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9431:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9431:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9367:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9367:58:12"
																},
																"nativeSrc": "9367:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9367:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9360:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9360:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9532:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9532:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "9443:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9443:88:12"
																},
																"nativeSrc": "9443:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9443:93:12"
															},
															"nativeSrc": "9443:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9443:93:12"
														},
														{
															"nativeSrc": "9545:19:12",
															"nodeType": "YulAssignment",
															"src": "9545:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9556:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9556:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9561:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9561:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9552:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9552:3:12"
																},
																"nativeSrc": "9552:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9552:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9545:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9545:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9204:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9338:3:12",
														"nodeType": "YulTypedName",
														"src": "9338:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9346:3:12",
														"nodeType": "YulTypedName",
														"src": "9346:3:12",
														"type": ""
													}
												],
												"src": "9204:366:12"
											},
											{
												"body": {
													"nativeSrc": "9747:248:12",
													"nodeType": "YulBlock",
													"src": "9747:248:12",
													"statements": [
														{
															"nativeSrc": "9757:26:12",
															"nodeType": "YulAssignment",
															"src": "9757:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9769:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9769:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9780:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9780:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9765:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9765:3:12"
																},
																"nativeSrc": "9765:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9765:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9757:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9757:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9804:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9804:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9815:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9815:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9800:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:12"
																		},
																		"nativeSrc": "9800:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9800:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9823:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9823:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9829:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9829:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9819:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9819:3:12"
																		},
																		"nativeSrc": "9819:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9819:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9793:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:12"
																},
																"nativeSrc": "9793:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9793:47:12"
															},
															"nativeSrc": "9793:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9793:47:12"
														},
														{
															"nativeSrc": "9849:139:12",
															"nodeType": "YulAssignment",
															"src": "9849:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9983:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9983:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9857:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9857:124:12"
																},
																"nativeSrc": "9857:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9857:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9849:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9849:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9576:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9727:9:12",
														"nodeType": "YulTypedName",
														"src": "9727:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9742:4:12",
														"nodeType": "YulTypedName",
														"src": "9742:4:12",
														"type": ""
													}
												],
												"src": "9576:419:12"
											},
											{
												"body": {
													"nativeSrc": "10066:53:12",
													"nodeType": "YulBlock",
													"src": "10066:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10083:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10083:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10106:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10106:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10088:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "10088:17:12"
																		},
																		"nativeSrc": "10088:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10088:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10076:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:12"
																},
																"nativeSrc": "10076:37:12",
																"nodeType": "YulFunctionCall",
																"src": "10076:37:12"
															},
															"nativeSrc": "10076:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "10076:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10001:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10054:5:12",
														"nodeType": "YulTypedName",
														"src": "10054:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10061:3:12",
														"nodeType": "YulTypedName",
														"src": "10061:3:12",
														"type": ""
													}
												],
												"src": "10001:118:12"
											},
											{
												"body": {
													"nativeSrc": "10251:206:12",
													"nodeType": "YulBlock",
													"src": "10251:206:12",
													"statements": [
														{
															"nativeSrc": "10261:26:12",
															"nodeType": "YulAssignment",
															"src": "10261:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10273:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10273:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10284:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10284:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10269:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10269:3:12"
																},
																"nativeSrc": "10269:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10269:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10261:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10261:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10341:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10341:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10354:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10354:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10365:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10365:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10350:3:12"
																		},
																		"nativeSrc": "10350:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10350:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10297:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10297:43:12"
																},
																"nativeSrc": "10297:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10297:71:12"
															},
															"nativeSrc": "10297:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10297:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10422:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10422:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10435:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10435:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10446:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10446:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10431:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10431:3:12"
																		},
																		"nativeSrc": "10431:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10431:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10378:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10378:43:12"
																},
																"nativeSrc": "10378:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10378:72:12"
															},
															"nativeSrc": "10378:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10378:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10125:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10215:9:12",
														"nodeType": "YulTypedName",
														"src": "10215:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10227:6:12",
														"nodeType": "YulTypedName",
														"src": "10227:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10235:6:12",
														"nodeType": "YulTypedName",
														"src": "10235:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10246:4:12",
														"nodeType": "YulTypedName",
														"src": "10246:4:12",
														"type": ""
													}
												],
												"src": "10125:332:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bool_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bool_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bool_to_t_bool(value0, pos) -> updatedPos {\n        abi_encode_t_bool_to_t_bool(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bool_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bool[] -> bool[]\n    function abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bool_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bool_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bool_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bool_to_t_bool(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bool_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bool_$dyn_memory_ptr_to_t_array$_t_bool_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96_t_uint64__to_t_uint96_t_uint96_t_uint64__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1212": [
									{
										"length": 32,
										"start": 928
									},
									{
										"length": 32,
										"start": 1295
									},
									{
										"length": 32,
										"start": 1511
									},
									{
										"length": 32,
										"start": 1716
									}
								],
								"1214": [
									{
										"length": 32,
										"start": 486
									},
									{
										"length": 32,
										"start": 1839
									},
									{
										"length": 32,
										"start": 2419
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79502C55 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x79502C55 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x806019C1 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AD JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x40306FB6 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x43074C7F EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x58262359 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5B88349D EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x121 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD1 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x10EA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x255 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH2 0x29A DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x1117 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST DUP4 PUSH2 0x6D6 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AD JUMPI PUSH2 0x2AC PUSH2 0x1117 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x25E JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DA PUSH2 0x83E JUMP JUMPDEST PUSH2 0x2E3 CALLER PUSH2 0x88D JUMP JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x311 DUP2 PUSH1 0x3 PUSH2 0xAA4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH1 0x18 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3E4 CALLER PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xADC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x61302C72DF1000CA12D41C5583685720A0CBD3233372643A553EB042D670F076 PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x456 PUSH2 0xB5B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x460 PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x469 PUSH0 PUSH2 0xBEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x50C PUSH2 0xB64 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x5E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62B CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xADC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x636 PUSH2 0xB64 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AF DUP2 PUSH2 0xBEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI POP PUSH1 0x4 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP3 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x777 JUMPI POP PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7AA JUMPI POP PUSH2 0x7A8 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xCAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x836 JUMPI POP PUSH1 0x2 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x825 SWAP2 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x8D9 JUMPI POP PUSH1 0x4 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x80CB55E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xCAC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x646CF55800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD05CB60900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP3 SWAP1 SHR SWAP1 POP PUSH0 PUSH1 0xFF DUP4 AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD OR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB56 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB0F SWAP3 SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xCE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB6C PUSH2 0xD7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB8A PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE9 JUMPI PUSH2 0xBAD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 DUP4 SWAP1 SHR SWAP1 POP PUSH0 PUSH1 0xFF DUP5 AND PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH0 DUP2 DUP7 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND EQ ISZERO SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xD1A JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xD35 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xD77 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA0 DUP2 PUSH2 0xD84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xD97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDDF DUP2 PUSH2 0xDBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF8 PUSH0 DUP4 ADD DUP5 PUSH2 0xDD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE27 JUMPI PUSH2 0xE26 PUSH2 0xE06 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0xE0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE60 JUMPI PUSH2 0xE5F PUSH2 0xE0E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xE02 JUMP JUMPDEST JUMPDEST PUSH2 0xEA6 DUP6 DUP3 DUP7 ADD PUSH2 0xE12 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEF DUP2 PUSH2 0xEDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF00 DUP4 DUP4 PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF22 DUP3 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0xF2C DUP2 DUP6 PUSH2 0xEBC JUMP JUMPDEST SWAP4 POP PUSH2 0xF37 DUP4 PUSH2 0xECC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF67 JUMPI DUP2 MLOAD PUSH2 0xF4E DUP9 DUP3 PUSH2 0xEF5 JUMP JUMPDEST SWAP8 POP PUSH2 0xF59 DUP4 PUSH2 0xF0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xF3A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF8C DUP2 DUP5 PUSH2 0xF18 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFA7 PUSH0 DUP4 ADD DUP7 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xFB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xFC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD97 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFF2 DUP3 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1002 DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101B PUSH0 DUP4 ADD DUP5 PUSH2 0xFF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x102A DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1034 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1045 DUP2 PUSH2 0x1021 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1060 JUMPI PUSH2 0x105F PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x106D DUP5 DUP3 DUP6 ADD PUSH2 0x1037 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1099 PUSH2 0x1094 PUSH2 0x108F DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x1076 JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AA DUP3 PUSH2 0x107F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10BB DUP3 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CB DUP2 PUSH2 0x10B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x10C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1156 DUP2 PUSH2 0x1144 JUMP JUMPDEST DUP2 EQ PUSH2 0x1160 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1171 DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH2 0x118B PUSH2 0xDFE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1199 DUP5 DUP3 DUP6 ADD PUSH2 0x1163 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11D9 DUP3 PUSH2 0xDBF JUMP JUMPDEST SWAP2 POP PUSH2 0x11E4 DUP4 PUSH2 0xDBF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x1207 PUSH2 0x11A2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1252 PUSH1 0x1F DUP4 PUSH2 0x120E JUMP JUMPDEST SWAP2 POP PUSH2 0x125D DUP3 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x127F DUP2 PUSH2 0x1246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128F DUP2 PUSH2 0x1144 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12A8 PUSH0 DUP4 ADD DUP6 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x12B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1286 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 INVALID 0xD0 0xC8 0xA7 0xC4 PUSH5 0x65C9BC7922 0xD0 0xBE SLOAD 0xBC 0xC6 GT PUSH20 0xB989BAF820086DD0E6C2B41E5D64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1044:4850:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1240:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4617:382;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3284:444;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1417:27:11;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1534:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5674:218:11;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1205:29:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1498:30;;;;;;;;;;;;;:::o;1240:38::-;;;:::o;4617:382::-;4701:25;4768:5;;:12;;4757:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4743:38;;4791:19;4813:15;4791:37;;4852:9;4847:146;4871:5;;:12;;4867:1;:16;4847:146;;;4917:34;4929:5;;4935:1;4929:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4939:11;4917;:34::i;:::-;4900:11;4912:1;4900:14;;;;;;;;:::i;:::-;;;;;;;:51;;;;;;;;;;;4977:3;;;;;4847:146;;;;4733:266;4617:382;;;;:::o;3284:444::-;2261:21:4;:19;:21::i;:::-;3340:26:11::1;3355:10;3340:14;:26::i;:::-;3385:17;3421:10;3405:28;;3385:48;;3443:28;3461:9;3443:13;:17;;:28;;;;:::i;:::-;3547:6;:20;;;;;;;;;;;;3514:6;:22;;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3597:52;3616:10;3628:6;:20;;;;;;;;;;;;3597:52;;:5;:18;;;;:52;;;;;:::i;:::-;3688:10;3673:48;;;3700:6;:20;;;;;;;;;;;;3673:48;;;;;;:::i;:::-;;;;;;;;3330:398;2303:20:4::0;:18;:20::i;:::-;3284:444:11:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1417:27:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1534:28::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;5674:218:11:-;1531:13:0;:11;:13::i;:::-;5732:15:11::1;5750:5;:15;;;5774:4;5750:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5732:48;;5805:1;5794:7;:12:::0;5790:46:::1;;5815:21;;;;;;;;;;;;;;5790:46;5846:39;5865:10;5877:7;5846:5;:18;;;;:39;;;;;:::i;:::-;5722:170;5674:218::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1205:29:11:-;;;:::o;5191:391::-;5269:4;5320:16;;;;;;;;;;;5305:31;;:11;:31;;:76;;;;;5367:14;;;;;;;;;;;5352:29;;:11;:29;;5305:76;:122;;;;;5413:14;5397:30;;:4;:12;;;:30;;5305:122;:180;;;;;5444:41;5478:4;5462:22;;5444:13;:17;;:41;;;;:::i;:::-;5443:42;5305:180;:270;;;;;5551:6;:23;;;;;;;;;;;;5502:72;;5527:6;:20;;;;;;;;;;;;5502:6;:22;;;;;;;;;;;;:45;;;;;;:::i;:::-;:72;;;;5305:270;5285:290;;5191:391;;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;3832:592:11:-;3915:16;;;;;;;;;;;3897:34;;:15;:34;:70;;;;3953:14;;;;;;;;;;;3935:32;;:15;:32;3897:70;3893:119;;;3990:11;;;;;;;;;;;;;;3893:119;4034:41;4068:4;4052:22;;4034:13;:17;;:41;;;;:::i;:::-;4030:95;;;4098:16;;;;;;;;;;;;;;4030:95;4162:14;4147:29;;:4;:12;;;:29;4143:88;;;4199:21;;;;;;;;;;;;;;4143:88;4325:6;:23;;;;;;;;;;;;4277:71;;4302:6;:20;;;;;;;;;;;;4277:6;:22;;;;;;;;;;;;:45;;;:71;;;4273:135;;;4375:18;;;;;;;;;;;;;;4273:135;3832:592;:::o;741:176::-;805:14;831:1;822:5;:10;;805:27;;842:12;871:4;863:5;:12;857:1;:19;;842:34;;906:4;886:3;:8;;:16;895:6;886:16;;;;;;;;;;;;:24;;;;;;;;;;;795:122;;741:176;;:::o;1271:160:6:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;528:207:11:-;596:4;612:14;638:1;629:5;:10;;612:27;;649:12;678:4;670:5;:12;664:1;:19;;649:34;;727:1;719:4;700:3;:8;;:16;709:6;700:16;;;;;;;;;;;;:23;:28;;693:35;;;;528:207;;;;:::o;7738:720:6:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:101:12:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;459:109::-;495:7;535:26;528:5;524:38;513:49;;459:109;;;:::o;574:115::-;659:23;676:5;659:23;:::i;:::-;654:3;647:36;574:115;;:::o;695:218::-;786:4;824:2;813:9;809:18;801:26;;837:69;903:1;892:9;888:17;879:6;837:69;:::i;:::-;695:218;;;;:::o;1000:117::-;1109:1;1106;1099:12;1123:117;1232:1;1229;1222:12;1246:117;1355:1;1352;1345:12;1369:117;1478:1;1475;1468:12;1492:117;1601:1;1598;1591:12;1632:568;1705:8;1715:6;1765:3;1758:4;1750:6;1746:17;1742:27;1732:122;;1773:79;;:::i;:::-;1732:122;1886:6;1873:20;1863:30;;1916:18;1908:6;1905:30;1902:117;;;1938:79;;:::i;:::-;1902:117;2052:4;2044:6;2040:17;2028:29;;2106:3;2098:4;2090:6;2086:17;2076:8;2072:32;2069:41;2066:128;;;2113:79;;:::i;:::-;2066:128;1632:568;;;;;:::o;2206:559::-;2292:6;2300;2349:2;2337:9;2328:7;2324:23;2320:32;2317:119;;;2355:79;;:::i;:::-;2317:119;2503:1;2492:9;2488:17;2475:31;2533:18;2525:6;2522:30;2519:117;;;2555:79;;:::i;:::-;2519:117;2668:80;2740:7;2731:6;2720:9;2716:22;2668:80;:::i;:::-;2650:98;;;;2446:312;2206:559;;;;;:::o;2771:111::-;2835:6;2869:5;2863:12;2853:22;;2771:111;;;:::o;2888:181::-;2984:11;3018:6;3013:3;3006:19;3058:4;3053:3;3049:14;3034:29;;2888:181;;;;:::o;3075:129::-;3139:4;3162:3;3154:11;;3192:4;3187:3;3183:14;3175:22;;3075:129;;;:::o;3210:90::-;3244:7;3287:5;3280:13;3273:21;3262:32;;3210:90;;;:::o;3306:99::-;3377:21;3392:5;3377:21;:::i;:::-;3372:3;3365:34;3306:99;;:::o;3411:167::-;3474:10;3495:40;3531:3;3523:6;3495:40;:::i;:::-;3567:4;3562:3;3558:14;3544:28;;3411:167;;;;:::o;3584:110::-;3651:4;3683;3678:3;3674:14;3666:22;;3584:110;;;:::o;3724:708::-;3837:3;3866:51;3911:5;3866:51;:::i;:::-;3933:83;4009:6;4004:3;3933:83;:::i;:::-;3926:90;;4040:53;4087:5;4040:53;:::i;:::-;4116:7;4147:1;4132:275;4157:6;4154:1;4151:13;4132:275;;;4233:6;4227:13;4260:57;4313:3;4298:13;4260:57;:::i;:::-;4253:64;;4340:57;4390:6;4340:57;:::i;:::-;4330:67;;4192:215;4179:1;4176;4172:9;4167:14;;4132:275;;;4136:14;4423:3;4416:10;;3842:590;;;3724:708;;;;:::o;4438:361::-;4575:4;4613:2;4602:9;4598:18;4590:26;;4662:9;4656:4;4652:20;4648:1;4637:9;4633:17;4626:47;4690:102;4787:4;4778:6;4690:102;:::i;:::-;4682:110;;4438:361;;;;:::o;4805:430::-;4948:4;4986:2;4975:9;4971:18;4963:26;;4999:69;5065:1;5054:9;5050:17;5041:6;4999:69;:::i;:::-;5078:70;5144:2;5133:9;5129:18;5120:6;5078:70;:::i;:::-;5158;5224:2;5213:9;5209:18;5200:6;5158:70;:::i;:::-;4805:430;;;;;;:::o;5241:126::-;5278:7;5318:42;5311:5;5307:54;5296:65;;5241:126;;;:::o;5373:96::-;5410:7;5439:24;5457:5;5439:24;:::i;:::-;5428:35;;5373:96;;;:::o;5475:118::-;5562:24;5580:5;5562:24;:::i;:::-;5557:3;5550:37;5475:118;;:::o;5599:222::-;5692:4;5730:2;5719:9;5715:18;5707:26;;5743:71;5811:1;5800:9;5796:17;5787:6;5743:71;:::i;:::-;5599:222;;;;:::o;5827:122::-;5900:24;5918:5;5900:24;:::i;:::-;5893:5;5890:35;5880:63;;5939:1;5936;5929:12;5880:63;5827:122;:::o;5955:139::-;6001:5;6039:6;6026:20;6017:29;;6055:33;6082:5;6055:33;:::i;:::-;5955:139;;;;:::o;6100:329::-;6159:6;6208:2;6196:9;6187:7;6183:23;6179:32;6176:119;;;6214:79;;:::i;:::-;6176:119;6334:1;6359:53;6404:7;6395:6;6384:9;6380:22;6359:53;:::i;:::-;6349:63;;6305:117;6100:329;;;;:::o;6435:60::-;6463:3;6484:5;6477:12;;6435:60;;;:::o;6501:142::-;6551:9;6584:53;6602:34;6611:24;6629:5;6611:24;:::i;:::-;6602:34;:::i;:::-;6584:53;:::i;:::-;6571:66;;6501:142;;;:::o;6649:126::-;6699:9;6732:37;6763:5;6732:37;:::i;:::-;6719:50;;6649:126;;;:::o;6781:140::-;6845:9;6878:37;6909:5;6878:37;:::i;:::-;6865:50;;6781:140;;;:::o;6927:159::-;7028:51;7073:5;7028:51;:::i;:::-;7023:3;7016:64;6927:159;;:::o;7092:250::-;7199:4;7237:2;7226:9;7222:18;7214:26;;7250:85;7332:1;7321:9;7317:17;7308:6;7250:85;:::i;:::-;7092:250;;;;:::o;7348:180::-;7396:77;7393:1;7386:88;7493:4;7490:1;7483:15;7517:4;7514:1;7507:15;7534:180;7582:77;7579:1;7572:88;7679:4;7676:1;7669:15;7703:4;7700:1;7693:15;7720:77;7757:7;7786:5;7775:16;;7720:77;;;:::o;7803:122::-;7876:24;7894:5;7876:24;:::i;:::-;7869:5;7866:35;7856:63;;7915:1;7912;7905:12;7856:63;7803:122;:::o;7931:143::-;7988:5;8019:6;8013:13;8004:22;;8035:33;8062:5;8035:33;:::i;:::-;7931:143;;;;:::o;8080:351::-;8150:6;8199:2;8187:9;8178:7;8174:23;8170:32;8167:119;;;8205:79;;:::i;:::-;8167:119;8325:1;8350:64;8406:7;8397:6;8386:9;8382:22;8350:64;:::i;:::-;8340:74;;8296:128;8080:351;;;;:::o;8437:180::-;8485:77;8482:1;8475:88;8582:4;8579:1;8572:15;8606:4;8603:1;8596:15;8623:213;8662:3;8681:19;8698:1;8681:19;:::i;:::-;8676:24;;8714:19;8731:1;8714:19;:::i;:::-;8709:24;;8756:1;8753;8749:9;8742:16;;8779:26;8774:3;8771:35;8768:61;;;8809:18;;:::i;:::-;8768:61;8623:213;;;;:::o;8842:169::-;8926:11;8960:6;8955:3;8948:19;9000:4;8995:3;8991:14;8976:29;;8842:169;;;;:::o;9017:181::-;9157:33;9153:1;9145:6;9141:14;9134:57;9017:181;:::o;9204:366::-;9346:3;9367:67;9431:2;9426:3;9367:67;:::i;:::-;9360:74;;9443:93;9532:3;9443:93;:::i;:::-;9561:2;9556:3;9552:12;9545:19;;9204:366;;;:::o;9576:419::-;9742:4;9780:2;9769:9;9765:18;9757:26;;9829:9;9823:4;9819:20;9815:1;9804:9;9800:17;9793:47;9857:131;9983:4;9857:131;:::i;:::-;9849:139;;9576:419;;;:::o;10001:118::-;10088:24;10106:5;10088:24;:::i;:::-;10083:3;10076:37;10001:118;;:::o;10125:332::-;10246:4;10284:2;10273:9;10269:18;10261:26;;10297:71;10365:1;10354:9;10350:17;10341:6;10297:71;:::i;:::-;10378:72;10446:2;10435:9;10431:18;10422:6;10378:72;:::i;:::-;10125:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "970000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"airdropEndTime()": "2539",
								"airdropStartTime()": "2467",
								"checkEligibility(address[])": "infinite",
								"claimAirdrop()": "infinite",
								"config()": "infinite",
								"emergencyWithdraw()": "infinite",
								"minEthRequired()": "infinite",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_isEligible(address,uint256)": "infinite",
								"_validateClaim(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2303,
									"end": 3158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1084,
									"end": 1094,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2543,
									"end": 2544,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2545,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2545,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2525,
									"end": 2545,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2545,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2525,
									"end": 2545,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2521,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2521,
									"end": 2570,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "PUSH",
									"source": 11,
									"value": "E6C4247B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2554,
									"end": 2570,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2521,
									"end": 2570,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2521,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2602,
									"end": 2603,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2584,
									"end": 2598,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2584,
									"end": 2603,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2584,
									"end": 2603,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2584,
									"end": 2603,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2580,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 2580,
									"end": 2627,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "PUSH",
									"source": 11,
									"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2627,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2580,
									"end": 2627,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 2580,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2654,
									"end": 2668,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2641,
									"end": 2668,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2641,
									"end": 2668,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2641,
									"end": 2651,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2641,
									"end": 2668,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2641,
									"end": 2668,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2641,
									"end": 2668,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2637,
									"end": 2692,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2637,
									"end": 2692,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2637,
									"end": 2692,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "PUSH",
									"source": 11,
									"value": "2C5211C600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 2692,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2637,
									"end": 2692,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2637,
									"end": 2692,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2720,
									"end": 2728,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2706,
									"end": 2716,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2702,
									"end": 2750,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "PUSH",
									"source": 11,
									"value": "6F7EAC2600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2737,
									"end": 2750,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2750,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 2702,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 2792,
									"name": "TIMESTAMP",
									"source": 11
								},
								{
									"begin": 2764,
									"end": 2774,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2764,
									"end": 2792,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2764,
									"end": 2792,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2764,
									"end": 2792,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2760,
									"end": 2814,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2760,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 2760,
									"end": 2814,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "PUSH",
									"source": 11,
									"value": "6F7EAC2600000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2814,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2760,
									"end": 2814,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 2760,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2881,
									"end": 2887,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2866,
									"end": 2888,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2915,
									"end": 2930,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2898,
									"end": 2930,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2972,
									"end": 2986,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2949,
									"end": 2986,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3032,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3002,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2996,
									"end": 3019,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2996,
									"end": 3019,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3019,
									"name": "PUSH",
									"source": 11,
									"value": "C"
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3032,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3067,
									"end": 3068,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3042,
									"end": 3048,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3042,
									"end": 3064,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3042,
									"end": 3064,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3064,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3068,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3106,
									"end": 3116,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3103,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3087,
									"end": 3103,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3116,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3143,
									"end": 3151,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3140,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3126,
									"end": 3140,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3126,
									"end": 3151,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2303,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 954,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 845,
									"end": 954,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 947,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 910,
									"end": 948,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 899,
									"end": 948,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 899,
									"end": 948,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 954,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 954,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 960,
									"end": 1080,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 960,
									"end": 1080,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1049,
									"end": 1054,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1032,
									"end": 1055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1055,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1032,
									"end": 1055,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1030,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1056,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1012,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1012,
									"end": 1074,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1070,
									"end": 1071,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 1068,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1060,
									"end": 1072,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1012,
									"end": 1074,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1012,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 960,
									"end": 1080,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 960,
									"end": 1080,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1227,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1086,
									"end": 1227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1142,
									"end": 1147,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 1179,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1167,
									"end": 1180,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1158,
									"end": 1180,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1158,
									"end": 1180,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1189,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1215,
									"end": 1220,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1189,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1189,
									"end": 1221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1189,
									"end": 1221,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1189,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1227,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1227,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1227,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1227,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1086,
									"end": 1227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1334,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1233,
									"end": 1334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1269,
									"end": 1276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1327,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1302,
									"end": 1307,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1298,
									"end": 1328,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1287,
									"end": 1328,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1287,
									"end": 1328,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1334,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1334,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1334,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1340,
									"end": 1460,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1340,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1412,
									"end": 1435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1429,
									"end": 1434,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1412,
									"end": 1435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1412,
									"end": 1435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1412,
									"end": 1435,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1412,
									"end": 1435,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1405,
									"end": 1410,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1402,
									"end": 1436,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1392,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1392,
									"end": 1454,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1392,
									"end": 1454,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1392,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1340,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1340,
									"end": 1460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1466,
									"end": 1607,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1466,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1522,
									"end": 1527,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1547,
									"end": 1560,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1538,
									"end": 1560,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1538,
									"end": 1560,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1569,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1595,
									"end": 1600,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1569,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1569,
									"end": 1601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1569,
									"end": 1601,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1569,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1466,
									"end": 1607,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1466,
									"end": 1607,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1466,
									"end": 1607,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1466,
									"end": 1607,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1466,
									"end": 1607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1739,
									"end": 1745,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 1761,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1763,
									"end": 1769,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1812,
									"end": 1815,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 1800,
									"end": 1809,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1791,
									"end": 1798,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1810,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1783,
									"end": 1816,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1780,
									"end": 1900,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1780,
									"end": 1900,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1780,
									"end": 1900,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 1898,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1819,
									"end": 1898,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1819,
									"end": 1898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1819,
									"end": 1898,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1819,
									"end": 1898,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1780,
									"end": 1900,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 1780,
									"end": 1900,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1939,
									"end": 1940,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 2028,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2020,
									"end": 2027,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 2011,
									"end": 2017,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2000,
									"end": 2009,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 1996,
									"end": 2018,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 2028,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1964,
									"end": 2028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 2028,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1964,
									"end": 2028,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1954,
									"end": 2028,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 1954,
									"end": 2028,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1910,
									"end": 2038,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2077,
									"end": 2079,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2103,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2158,
									"end": 2165,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2138,
									"end": 2147,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 2156,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2103,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2103,
									"end": 2166,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2103,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2093,
									"end": 2166,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 2093,
									"end": 2166,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2048,
									"end": 2176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2215,
									"end": 2217,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2241,
									"end": 2304,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2296,
									"end": 2303,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2293,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2285,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 2272,
									"end": 2294,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2241,
									"end": 2304,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2241,
									"end": 2304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2241,
									"end": 2304,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2241,
									"end": 2304,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2231,
									"end": 2304,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2231,
									"end": 2304,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2186,
									"end": 2314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2355,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2379,
									"end": 2442,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2434,
									"end": 2441,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2431,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2414,
									"end": 2423,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 2410,
									"end": 2432,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2379,
									"end": 2442,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2379,
									"end": 2442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2379,
									"end": 2442,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2379,
									"end": 2442,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2369,
									"end": 2442,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2369,
									"end": 2442,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2324,
									"end": 2452,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2494,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2518,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2573,
									"end": 2580,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 2564,
									"end": 2570,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2553,
									"end": 2562,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 2549,
									"end": 2571,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2518,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2518,
									"end": 2581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2518,
									"end": 2581,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2518,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2508,
									"end": 2581,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2508,
									"end": 2581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2591,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2630,
									"end": 2633,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 2657,
									"end": 2720,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2712,
									"end": 2719,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 2703,
									"end": 2709,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2710,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2657,
									"end": 2720,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2657,
									"end": 2720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2657,
									"end": 2720,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2657,
									"end": 2720,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2647,
									"end": 2720,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2647,
									"end": 2720,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2601,
									"end": 2730,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1613,
									"end": 2737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2861,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2743,
									"end": 2861,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2830,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2848,
									"end": 2853,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2830,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2830,
									"end": 2854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2830,
									"end": 2854,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2830,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2825,
									"end": 2828,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2818,
									"end": 2855,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2861,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 3089,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2867,
									"end": 3089,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2960,
									"end": 2964,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2998,
									"end": 3000,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2987,
									"end": 2996,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2975,
									"end": 3001,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2975,
									"end": 3001,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3011,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3079,
									"end": 3080,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3064,
									"end": 3081,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3055,
									"end": 3061,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3011,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3011,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3011,
									"end": 3082,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3011,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 3089,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 3089,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 3089,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 3089,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 3089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1214"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1212"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 5894,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020fed0c8a7c46465c9bc7922d0be54bcc61173b989baf820086dd0e6c2b41e5d64736f6c634300081a0033",
									".code": [
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "79502C55"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "79502C55"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "806019C1"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "DB2E21BC"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "FC0C546A"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "40306FB6"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "43074C7F"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "58262359"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "5B88349D"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1044,
											"end": 5894,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1498,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1498,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1240,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4617,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4617,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 4617,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3284,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1417,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1417,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1534,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1534,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 5674,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1205,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1205,
											"end": 1234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1214"
										},
										{
											"begin": 1240,
											"end": 1278,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4701,
											"end": 4726,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4768,
											"end": 4773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4757,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 4781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4781,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4781,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4791,
											"end": 4810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 4828,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4791,
											"end": 4828,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4791,
											"end": 4828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4852,
											"end": 4861,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4871,
											"end": 4876,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4871,
											"end": 4876,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4883,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4929,
											"end": 4934,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4934,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4936,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4929,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 4929,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4929,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4939,
											"end": 4950,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4917,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4951,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4917,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4911,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4900,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4847,
											"end": 4993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4733,
											"end": 4999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3284,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3340,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3355,
											"end": 3365,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3340,
											"end": 3366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3340,
											"end": 3366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3431,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3405,
											"end": 3433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3385,
											"end": 3433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3461,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3443,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3443,
											"end": 3460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3471,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3514,
											"end": 3536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3536,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3514,
											"end": 3568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3616,
											"end": 3626,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3628,
											"end": 3648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1212"
										},
										{
											"begin": 3597,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3597,
											"end": 3615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 3597,
											"end": 3615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3597,
											"end": 3649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3688,
											"end": 3698,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "61302C72DF1000CA12D41C5583685720A0CBD3233372643A553EB042D670F076"
										},
										{
											"begin": 3700,
											"end": 3706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 3673,
											"end": 3721,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3673,
											"end": 3721,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3728,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3284,
											"end": 3728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1534,
											"end": 1562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 5674,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5732,
											"end": 5747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5755,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1212"
										},
										{
											"begin": 5750,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5750,
											"end": 5765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 5774,
											"end": 5778,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5750,
											"end": 5780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5780,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 5750,
											"end": 5780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5750,
											"end": 5780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5732,
											"end": 5780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5732,
											"end": 5780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5801,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5806,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5790,
											"end": 5836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 5790,
											"end": 5836,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F4D678B800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5815,
											"end": 5836,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5790,
											"end": 5836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 5790,
											"end": 5836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 5865,
											"end": 5875,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5877,
											"end": 5884,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5851,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1212"
										},
										{
											"begin": 5846,
											"end": 5864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5846,
											"end": 5864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 5846,
											"end": 5864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 5846,
											"end": 5885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5722,
											"end": 5892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5674,
											"end": 5892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1212"
										},
										{
											"begin": 1205,
											"end": 1234,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1205,
											"end": 1234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5191,
											"end": 5582,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5191,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5269,
											"end": 5273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5336,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5305,
											"end": 5336,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5316,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5336,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5336,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5381,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5381,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5305,
											"end": 5381,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5381,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5352,
											"end": 5381,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5363,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5381,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5352,
											"end": 5381,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5381,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5305,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5427,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5427,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5305,
											"end": 5427,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5427,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1214"
										},
										{
											"begin": 5397,
											"end": 5427,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5427,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5409,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5409,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5409,
											"name": "BALANCE",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5427,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5427,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5427,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 5305,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5305,
											"end": 5485,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 5478,
											"end": 5482,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5462,
											"end": 5484,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5462,
											"end": 5484,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5457,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5444,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5444,
											"end": 5461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5485,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5485,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5485,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5485,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 5444,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5485,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5305,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5575,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5575,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5305,
											"end": 5575,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5502,
											"end": 5574,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5527,
											"end": 5547,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5502,
											"end": 5524,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 5502,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5502,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5574,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5502,
											"end": 5574,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5574,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5574,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5575,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5305,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5191,
											"end": 5582,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5191,
											"end": 5582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5191,
											"end": 5582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5191,
											"end": 5582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5191,
											"end": 5582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 4424,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3832,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3915,
											"end": 3931,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3931,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3897,
											"end": 3931,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3912,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3931,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3967,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3897,
											"end": 3967,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3967,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3935,
											"end": 3967,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 3967,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3935,
											"end": 3950,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3935,
											"end": 3967,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3967,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3897,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3893,
											"end": 4012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3893,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3893,
											"end": 4012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "80CB55E200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3893,
											"end": 4012,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3893,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4068,
											"end": 4072,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4052,
											"end": 4074,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4052,
											"end": 4074,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4047,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4034,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4034,
											"end": 4051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4075,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4034,
											"end": 4075,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4075,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 4034,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "PUSH",
											"source": 11,
											"value": "646CF55800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4098,
											"end": 4114,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4030,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4162,
											"end": 4176,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1214"
										},
										{
											"begin": 4147,
											"end": 4176,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4176,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4151,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4159,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4159,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4159,
											"name": "BALANCE",
											"source": 11
										},
										{
											"begin": 4147,
											"end": 4176,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4231,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4143,
											"end": 4231,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "PUSH",
											"source": 11,
											"value": "F4D678B800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4220,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4231,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4143,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4331,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "PUSH",
											"source": 11,
											"value": "C"
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4325,
											"end": 4348,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4302,
											"end": 4322,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4283,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4299,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4322,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4322,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4322,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4273,
											"end": 4408,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4273,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4273,
											"end": 4408,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "PUSH",
											"source": 11,
											"value": "D05CB60900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4273,
											"end": 4408,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4273,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 4424,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 4424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 741,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 741,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 805,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 832,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 822,
											"end": 832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 822,
											"end": 832,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 805,
											"end": 832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 805,
											"end": 832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 842,
											"end": 854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 875,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 863,
											"end": 875,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 857,
											"end": 858,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 857,
											"end": 876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 857,
											"end": 876,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 842,
											"end": 876,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 842,
											"end": 876,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 906,
											"end": 910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 889,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 886,
											"end": 894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 894,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 901,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 902,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 886,
											"end": 902,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 910,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 886,
											"end": 910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 795,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 795,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 741,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 741,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 741,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 735,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 528,
											"end": 735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 596,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 626,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 638,
											"end": 639,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 629,
											"end": 634,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 629,
											"end": 639,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 629,
											"end": 639,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 612,
											"end": 639,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 612,
											"end": 639,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 649,
											"end": 661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 670,
											"end": 682,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 664,
											"end": 683,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 664,
											"end": 683,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 649,
											"end": 683,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 649,
											"end": 683,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 723,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 700,
											"end": 708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 716,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 700,
											"end": 716,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 700,
											"end": 723,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 700,
											"end": 728,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 700,
											"end": 728,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 693,
											"end": 728,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 693,
											"end": 728,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 693,
											"end": 728,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 693,
											"end": 728,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 528,
											"end": 735,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 528,
											"end": 735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 528,
											"end": 735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 528,
											"end": 735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 528,
											"end": 735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 108,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 7,
											"end": 108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 101,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 72,
											"end": 102,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 61,
											"end": 102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 61,
											"end": 102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 108,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 108,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 114,
											"end": 229,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 114,
											"end": 229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 199,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 216,
											"end": 221,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 199,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 199,
											"end": 222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 199,
											"end": 222,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 199,
											"end": 222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 194,
											"end": 197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 187,
											"end": 223,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 114,
											"end": 229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 114,
											"end": 229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 114,
											"end": 229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 235,
											"end": 453,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 235,
											"end": 453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 326,
											"end": 330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 366,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 349,
											"end": 367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 341,
											"end": 367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 341,
											"end": 367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 377,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 441,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 428,
											"end": 445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 419,
											"end": 425,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 377,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 377,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 377,
											"end": 446,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 377,
											"end": 446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 235,
											"end": 453,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 235,
											"end": 453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 235,
											"end": 453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 235,
											"end": 453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 235,
											"end": 453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 459,
											"end": 568,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 459,
											"end": 568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 495,
											"end": 502,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 561,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 524,
											"end": 562,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 513,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 513,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 459,
											"end": 568,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 459,
											"end": 568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 459,
											"end": 568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 459,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 689,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 574,
											"end": 689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 659,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 659,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 659,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 659,
											"end": 682,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 659,
											"end": 682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 654,
											"end": 657,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 647,
											"end": 683,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 574,
											"end": 689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 574,
											"end": 689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 695,
											"end": 913,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 695,
											"end": 913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 822,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 809,
											"end": 827,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 801,
											"end": 827,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 801,
											"end": 827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 837,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 901,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 888,
											"end": 905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 879,
											"end": 885,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 837,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 837,
											"end": 906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 837,
											"end": 906,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 837,
											"end": 906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 695,
											"end": 913,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 695,
											"end": 913,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 695,
											"end": 913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 695,
											"end": 913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1000,
											"end": 1117,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1000,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1107,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1099,
											"end": 1111,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1240,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1123,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1230,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1222,
											"end": 1234,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1363,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1246,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1353,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1345,
											"end": 1357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1369,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1480,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1609,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1492,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 2200,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1632,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1705,
											"end": 1713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 1768,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 1769,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1732,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1732,
											"end": 1854,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1773,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1732,
											"end": 1854,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 1732,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1873,
											"end": 1893,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1935,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 2019,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1902,
											"end": 2019,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1938,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1938,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1938,
											"end": 2017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1938,
											"end": 2017,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1938,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 2019,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 1902,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2050,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2057,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2106,
											"end": 2109,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2103,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2072,
											"end": 2104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2069,
											"end": 2110,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2066,
											"end": 2194,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2066,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 2066,
											"end": 2194,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 2113,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2113,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2192,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 2113,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2066,
											"end": 2194,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 2066,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 2200,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 2200,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 2200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 2200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2765,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2206,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2351,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2335,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2347,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2352,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2436,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 2317,
											"end": 2436,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 2355,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2355,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2434,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 2355,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2436,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 2317,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2475,
											"end": 2506,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2552,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2519,
											"end": 2636,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2519,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2519,
											"end": 2636,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2555,
											"end": 2634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2519,
											"end": 2636,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2519,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2740,
											"end": 2747,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2720,
											"end": 2729,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 2738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2668,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2748,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2748,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2650,
											"end": 2748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2765,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2765,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2771,
											"end": 2882,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2771,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2863,
											"end": 2875,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2875,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2771,
											"end": 2882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2771,
											"end": 2882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2771,
											"end": 2882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2771,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3069,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2888,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2984,
											"end": 2995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3013,
											"end": 3016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3025,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3062,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3034,
											"end": 3063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3069,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3069,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3204,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3075,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3139,
											"end": 3143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3165,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3165,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3196,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3183,
											"end": 3197,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3197,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3204,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3300,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3210,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3273,
											"end": 3294,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3262,
											"end": 3294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3262,
											"end": 3294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3405,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 3306,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3377,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3398,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3377,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3399,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3306,
											"end": 3405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3578,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 3411,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3531,
											"end": 3534,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3495,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 3495,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3495,
											"end": 3535,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3495,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3571,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3544,
											"end": 3572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3544,
											"end": 3572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3578,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3578,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3584,
											"end": 3694,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3584,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3674,
											"end": 3688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3666,
											"end": 3688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3666,
											"end": 3688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3584,
											"end": 3694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3584,
											"end": 3694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3584,
											"end": 3694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3584,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3724,
											"end": 4432,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 3724,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3911,
											"end": 3916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3866,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 3917,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3866,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 4009,
											"end": 4015,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4004,
											"end": 4007,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3933,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 4016,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3933,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3926,
											"end": 4016,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3926,
											"end": 4016,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4040,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 4087,
											"end": 4092,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4040,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 4040,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4040,
											"end": 4093,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 4040,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4147,
											"end": 4148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4151,
											"end": 4164,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4233,
											"end": 4239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4227,
											"end": 4240,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4260,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 4313,
											"end": 4316,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4311,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4260,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 4260,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4260,
											"end": 4317,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 4260,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4317,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4340,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4340,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 4340,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4340,
											"end": 4397,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4340,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4397,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4397,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4192,
											"end": 4407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4176,
											"end": 4177,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4172,
											"end": 4181,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4167,
											"end": 4181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4167,
											"end": 4181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 4132,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4136,
											"end": 4150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4416,
											"end": 4426,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4416,
											"end": 4426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 4432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 4432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 4432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3724,
											"end": 4432,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3724,
											"end": 4432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3724,
											"end": 4432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3724,
											"end": 4432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3724,
											"end": 4432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4438,
											"end": 4799,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 4438,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4575,
											"end": 4579,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4590,
											"end": 4616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4590,
											"end": 4616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4671,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4656,
											"end": 4660,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4672,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4626,
											"end": 4673,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4690,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 4787,
											"end": 4791,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4778,
											"end": 4784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4690,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 4690,
											"end": 4792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4690,
											"end": 4792,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 4690,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 4792,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 4792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4438,
											"end": 4799,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4438,
											"end": 4799,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4438,
											"end": 4799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4438,
											"end": 4799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4438,
											"end": 4799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4988,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4975,
											"end": 4984,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 4989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4963,
											"end": 4989,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4963,
											"end": 4989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 4999,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5068,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 4999,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5078,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5078,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 5078,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5078,
											"end": 5148,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5078,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5224,
											"end": 5226,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5206,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 5158,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5158,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 5235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5367,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5241,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5278,
											"end": 5285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5360,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5316,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5307,
											"end": 5361,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5367,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5241,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5469,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5373,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5439,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 5457,
											"end": 5462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5439,
											"end": 5463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 5439,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5428,
											"end": 5463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5428,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5469,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5469,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5373,
											"end": 5469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5593,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5475,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5580,
											"end": 5585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5562,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 5560,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5550,
											"end": 5587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5475,
											"end": 5593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5599,
											"end": 5821,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 5599,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5692,
											"end": 5696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5715,
											"end": 5733,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5707,
											"end": 5733,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5707,
											"end": 5733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 5811,
											"end": 5812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5796,
											"end": 5813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5743,
											"end": 5814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5743,
											"end": 5814,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 5743,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5599,
											"end": 5821,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5599,
											"end": 5821,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5599,
											"end": 5821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5599,
											"end": 5821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5599,
											"end": 5821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5949,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5827,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 5918,
											"end": 5923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5900,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 5898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5890,
											"end": 5925,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 5880,
											"end": 5943,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5941,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5880,
											"end": 5943,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 5880,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6026,
											"end": 6046,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 6082,
											"end": 6087,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 6055,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6088,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 6055,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 6094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6429,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 6100,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6187,
											"end": 6194,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6206,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6179,
											"end": 6211,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6176,
											"end": 6295,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6176,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 6176,
											"end": 6295,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6214,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 6214,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6293,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6214,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6176,
											"end": 6295,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 6176,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 6404,
											"end": 6411,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6380,
											"end": 6402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6359,
											"end": 6412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6359,
											"end": 6412,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 6359,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6349,
											"end": 6412,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6349,
											"end": 6412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6305,
											"end": 6422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6429,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6435,
											"end": 6495,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6435,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6484,
											"end": 6489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6477,
											"end": 6489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6435,
											"end": 6495,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6435,
											"end": 6495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6435,
											"end": 6495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6435,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6643,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 6501,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6551,
											"end": 6560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6602,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 6611,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 6629,
											"end": 6634,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6611,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6611,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6611,
											"end": 6635,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 6611,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6602,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6602,
											"end": 6636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6602,
											"end": 6636,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 6602,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6584,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6584,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6584,
											"end": 6637,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6584,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6571,
											"end": 6637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6571,
											"end": 6637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6643,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6501,
											"end": 6643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6775,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 6649,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 6763,
											"end": 6768,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6732,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 6732,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6732,
											"end": 6769,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 6732,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6719,
											"end": 6769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6719,
											"end": 6769,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6775,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6775,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6775,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6781,
											"end": 6921,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 6781,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6909,
											"end": 6914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 6878,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6915,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6878,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6781,
											"end": 6921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6781,
											"end": 6921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6781,
											"end": 6921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6781,
											"end": 6921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 7086,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 6927,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 7073,
											"end": 7078,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 7028,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7028,
											"end": 7079,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 7028,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7016,
											"end": 7080,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 7086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 7086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7342,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 7092,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7239,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7214,
											"end": 7240,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7214,
											"end": 7240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 7332,
											"end": 7333,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7330,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7317,
											"end": 7334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7308,
											"end": 7314,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 7250,
											"end": 7335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7335,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 7250,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7342,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7342,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 7528,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 7348,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7473,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7386,
											"end": 7474,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7493,
											"end": 7497,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7483,
											"end": 7498,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7521,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7514,
											"end": 7515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7522,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7714,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 7534,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7659,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7579,
											"end": 7580,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7660,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7683,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 7676,
											"end": 7677,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7669,
											"end": 7684,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7707,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7700,
											"end": 7701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7797,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 7720,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7791,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 7791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 7791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7803,
											"end": 7925,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 7803,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 7894,
											"end": 7899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 7876,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7900,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 7876,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7866,
											"end": 7901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7856,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 7856,
											"end": 7919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7915,
											"end": 7916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7913,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7917,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7856,
											"end": 7919,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 7856,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7803,
											"end": 7925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7803,
											"end": 7925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 8074,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 7931,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7988,
											"end": 7993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8013,
											"end": 8026,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8004,
											"end": 8026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8004,
											"end": 8026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 8062,
											"end": 8067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 8035,
											"end": 8068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 8035,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 8074,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 8074,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 8074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 8074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 8074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8431,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 8080,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8150,
											"end": 8156,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8201,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8187,
											"end": 8196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8178,
											"end": 8185,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8174,
											"end": 8197,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8170,
											"end": 8202,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8167,
											"end": 8286,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8167,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 8167,
											"end": 8286,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 8205,
											"end": 8284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 8205,
											"end": 8284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8284,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 8205,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8167,
											"end": 8286,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 8167,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8350,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 8406,
											"end": 8413,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8397,
											"end": 8403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8386,
											"end": 8395,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8382,
											"end": 8404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 8350,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8414,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 8350,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8340,
											"end": 8414,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8340,
											"end": 8414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8431,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8080,
											"end": 8431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8437,
											"end": 8617,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 8437,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8485,
											"end": 8562,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8482,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8475,
											"end": 8563,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8582,
											"end": 8586,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8572,
											"end": 8587,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8603,
											"end": 8604,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8611,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8836,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 8623,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 8698,
											"end": 8699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 8681,
											"end": 8700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8700,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 8681,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8676,
											"end": 8700,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8676,
											"end": 8700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8714,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8714,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 8714,
											"end": 8733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8714,
											"end": 8733,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 8714,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8709,
											"end": 8733,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8709,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8756,
											"end": 8757,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8753,
											"end": 8754,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8758,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8742,
											"end": 8758,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8742,
											"end": 8758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8779,
											"end": 8805,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8774,
											"end": 8777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8771,
											"end": 8806,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8768,
											"end": 8829,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8768,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 8768,
											"end": 8829,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 8809,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 8809,
											"end": 8827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8809,
											"end": 8827,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 8809,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8768,
											"end": 8829,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 8768,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8836,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8836,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 9011,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 8842,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 8937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8960,
											"end": 8966,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8955,
											"end": 8958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8948,
											"end": 8967,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9000,
											"end": 9004,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8995,
											"end": 8998,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8991,
											"end": 9005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8976,
											"end": 9005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8976,
											"end": 9005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 9011,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 9011,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 9011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 9011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 9011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9017,
											"end": 9198,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 9017,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9157,
											"end": 9190,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9153,
											"end": 9154,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9141,
											"end": 9155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9134,
											"end": 9191,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9017,
											"end": 9198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9017,
											"end": 9198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9570,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 9204,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9346,
											"end": 9349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9426,
											"end": 9429,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9367,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 9367,
											"end": 9434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9367,
											"end": 9434,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 9367,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9360,
											"end": 9434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9360,
											"end": 9434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 9532,
											"end": 9535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 9443,
											"end": 9536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9536,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 9443,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9561,
											"end": 9563,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9556,
											"end": 9559,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9552,
											"end": 9564,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9545,
											"end": 9564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9545,
											"end": 9564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9204,
											"end": 9570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9995,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 9576,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9742,
											"end": 9746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9780,
											"end": 9782,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9769,
											"end": 9778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9829,
											"end": 9838,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9823,
											"end": 9827,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9819,
											"end": 9839,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9815,
											"end": 9816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9813,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9800,
											"end": 9817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9793,
											"end": 9840,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9857,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 9983,
											"end": 9987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9857,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 9857,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9857,
											"end": 9988,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 9857,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 9988,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 9988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9995,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9576,
											"end": 9995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10119,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 10001,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 10106,
											"end": 10111,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 10088,
											"end": 10112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10112,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 10088,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10083,
											"end": 10086,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10113,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10457,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 10125,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10246,
											"end": 10250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10273,
											"end": 10282,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10269,
											"end": 10287,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10287,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 10365,
											"end": 10366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10354,
											"end": 10363,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10350,
											"end": 10367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10341,
											"end": 10347,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 10297,
											"end": 10368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10368,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 10297,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10378,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 10446,
											"end": 10448,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10435,
											"end": 10444,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10422,
											"end": 10428,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10378,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 10378,
											"end": 10450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10378,
											"end": 10450,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 10378,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10457,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/HoldAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"airdropEndTime()": "806019c1",
							"airdropStartTime()": "40306fb6",
							"checkEligibility(address[])": "58262359",
							"claimAirdrop()": "5b88349d",
							"config()": "79502c55",
							"emergencyWithdraw()": "db2e21bc",
							"minEthRequired()": "43074c7f",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_minEthRequired\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_airdropAmount\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_maxSupply\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"_startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_endTime\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupplyReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"AirdropClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maxSupply\",\"type\":\"uint96\"}],\"name\":\"AirdropConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"airdropEndTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropStartTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"name\":\"checkEligibility\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"eligibility\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"airdropAmount\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"maxAirdropSupply\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"totalAirdropped\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minEthRequired\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"checkEligibility(address[])\":{\"params\":{\"users\":\"\\u8981\\u68c0\\u67e5\\u7684\\u5730\\u5740\\u6570\\u7ec4\"},\"returns\":{\"eligibility\":\"\\u6bcf\\u4e2a\\u5730\\u5740\\u7684\\u8d44\\u683c\\u72b6\\u6001\\u6570\\u7ec4\"}},\"claimAirdrop()\":{\"details\":\"\\u5305\\u542b\\u591a\\u91cd\\u68c0\\u67e5\\u548c\\u72b6\\u6001\\u66f4\\u65b0\\u7684\\u4e3b\\u8981\\u529f\\u80fd\"},\"constructor\":{\"params\":{\"_airdropAmount\":\"\\u6bcf\\u4e2a\\u5730\\u5740\\u53ef\\u9886\\u53d6\\u7684\\u4ee3\\u5e01\\u6570\\u91cf\",\"_endTime\":\"\\u7a7a\\u6295\\u7ed3\\u675f\\u65f6\\u95f4\",\"_maxSupply\":\"\\u6700\\u5927\\u7a7a\\u6295\\u4f9b\\u5e94\\u91cf\",\"_minEthRequired\":\"\\u6700\\u5c0f ETH \\u6301\\u6709\\u91cf\\u8981\\u6c42\",\"_startTime\":\"\\u7a7a\\u6295\\u5f00\\u59cb\\u65f6\\u95f4\",\"_token\":\"\\u7a7a\\u6295\\u4ee3\\u5e01\\u5730\\u5740\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GasOptimizedAirdrop\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkEligibility(address[])\":{\"notice\":\"\\u6279\\u91cf\\u68c0\\u67e5\\u5730\\u5740\\u662f\\u5426\\u6709\\u8d44\\u683c\\u9886\\u53d6\\u7a7a\\u6295\"},\"claimAirdrop()\":{\"notice\":\"\\u7528\\u6237\\u9886\\u53d6\\u7a7a\\u6295\"},\"constructor\":{\"notice\":\"\\u6784\\u9020\\u51fd\\u6570\\u521d\\u59cb\\u5316\\u7a7a\\u6295\\u5408\\u7ea6\"},\"emergencyWithdraw()\":{\"notice\":\"\\u7d27\\u6025\\u63d0\\u53d6\\u5408\\u7ea6\\u4e2d\\u7684\\u4ee3\\u5e01\\uff08\\u4ec5\\u5408\\u7ea6\\u6240\\u6709\\u8005\\uff09\"}},\"notice\":\"\\u4e00\\u4e2a\\u7ecf\\u8fc7 gas \\u4f18\\u5316\\u7684\\u7a7a\\u6295\\u5408\\u7ea6\\uff0c\\u4f7f\\u7528\\u4e86\\u591a\\u79cd gas \\u4f18\\u5316\\u6280\\u672f\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HoldAirdrop.sol\":\"GasOptimizedAirdrop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/HoldAirdrop.sol\":{\"keccak256\":\"0xdafd1f92af8b320389c1873858f39ff926a7e5de47d902350bde64f5be666154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b734dcbb96d71289a334a54e7cc624ea70f0d686aac6a40505e68a93853e4e66\",\"dweb:/ipfs/QmVx9gVgwkwEZaKmCZnmSCcDRoZr3yH2ZtmiYXMyZVCJhP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1224,
								"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
								"label": "config",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(AirdropConfig)1221_storage"
							},
							{
								"astId": 1227,
								"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
								"label": "claimedBitMap",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Map)1126_storage"
							},
							{
								"astId": 1229,
								"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
								"label": "airdropStartTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint64"
							},
							{
								"astId": 1231,
								"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
								"label": "airdropEndTime",
								"offset": 8,
								"slot": "4",
								"type": "t_uint64"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AirdropConfig)1221_storage": {
								"encoding": "inplace",
								"label": "struct GasOptimizedAirdrop.AirdropConfig",
								"members": [
									{
										"astId": 1216,
										"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
										"label": "airdropAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 1218,
										"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
										"label": "maxAirdropSupply",
										"offset": 12,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 1220,
										"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
										"label": "totalAirdropped",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Map)1126_storage": {
								"encoding": "inplace",
								"label": "struct BitMap.Map",
								"members": [
									{
										"astId": 1125,
										"contract": "contracts/HoldAirdrop.sol:GasOptimizedAirdrop",
										"label": "bits",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_uint256,t_uint256)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkEligibility(address[])": {
								"notice": "批量检查地址是否有资格领取空投"
							},
							"claimAirdrop()": {
								"notice": "用户领取空投"
							},
							"constructor": {
								"notice": "构造函数初始化空投合约"
							},
							"emergencyWithdraw()": {
								"notice": "紧急提取合约中的代币（仅合约所有者）"
							}
						},
						"notice": "一个经过 gas 优化的空投合约，使用了多种 gas 优化技术",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1080
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1081,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1080,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1080,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1080
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1114
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1114,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1115,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							791
						]
					},
					"id": 792,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 792,
							"sourceUnit": 1051,
							"src": "238:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 387,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "246:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 389,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 394,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "875:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:6"
									},
									"src": "844:46:6"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 403,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1011:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1028:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1054:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:6"
									},
									"src": "972:109:6"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "1343:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1373:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 418,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "1395:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1395:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 420,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1412:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1416:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 422,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 416,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 414,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1353:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:6"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1293:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1293:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1293:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1307:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "1319:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:6"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:6"
									},
									"scope": 791,
									"src": "1271:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1760:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "1790:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 444,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "1812:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1812:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 446,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1833:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 447,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1839:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 448,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "1843:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 449,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 442,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1770:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:6"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1696:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1696:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1696:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1724:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "1736:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:6"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:6"
									},
									"scope": 791,
									"src": "1670:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2600:139:6",
										"statements": [
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2610:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 471,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$791",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 469,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 473,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2664:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 467,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2633:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2633:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2695:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 478,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2702:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "2711:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2726:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2682:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:6"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2545:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 457,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 456,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2545:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2545:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2559:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "2576:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:6"
									},
									"scope": 791,
									"src": "2514:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3505:370:6",
										"statements": [
											{
												"id": 526,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:6",
												"statements": [
													{
														"assignments": [
															497
														],
														"declarations": [
															{
																"constant": false,
																"id": 497,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 526,
																"src": "3539:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 496,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 506,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$791",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 504,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3597:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3566:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3566:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "3623:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 508,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "3642:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 517,
														"nodeType": "IfStatement",
														"src": "3619:160:6",
														"trueBody": {
															"id": 516,
															"nodeType": "Block",
															"src": "3661:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 511,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3719:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 512,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "3728:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 513,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "3746:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 510,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "3686:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 515,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 519,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3805:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 520,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3812:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 521,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "3821:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 522,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "3840:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 518,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "3792:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 525,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3438:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3438:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3438:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3452:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3469:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:6"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:6"
									},
									"scope": 791,
									"src": "3407:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4529:303:6",
										"statements": [
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4539:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 539,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 543,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4582:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4582:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 545,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4598:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4607:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 547,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 541,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:6"
											},
											{
												"condition": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 551,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4654:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 552,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "4661:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 550,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "4630:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "4625:201:6",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "4676:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4710:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 559,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "4732:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4732:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 561,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 534,
																						"src": "4748:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 562,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 563,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 557,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4690:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 568,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4795:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 569,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "4802:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 567,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "4775:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4474:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 531,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 530,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4474:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4474:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4488:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:6"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:6"
									},
									"scope": 791,
									"src": "4452:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "5279:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 588,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "5293:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 602,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5402:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5406:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 604,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "5413:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5380:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 615,
													"nodeType": "IfStatement",
													"src": "5375:117:6",
													"trueBody": {
														"id": 614,
														"nodeType": "Block",
														"src": "5420:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 610,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "5474:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 608,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 607,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "5441:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 613,
																"nodeType": "RevertStatement",
																"src": "5434:47:6"
															}
														]
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "5289:203:6",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "5314:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5341:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 595,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5348:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "5352:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "5328:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5208:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 577,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5224:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5236:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5251:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:6"
									},
									"scope": 791,
									"src": "5176:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6017:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 633,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "6031:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 648,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6154:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 649,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6160:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6164:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 651,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "6171:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 646,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6128:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 662,
													"nodeType": "IfStatement",
													"src": "6123:127:6",
													"trueBody": {
														"id": 661,
														"nodeType": "Block",
														"src": "6178:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 657,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6232:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 655,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 654,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "6199:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 660,
																"nodeType": "RevertStatement",
																"src": "6192:47:6"
															}
														]
													}
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6027:223:6",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "6052:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 639,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6083:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 640,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6090:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 641,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6096:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 642,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "6100:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 638,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6066:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5895:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5919:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5941:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5961:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5984:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:6"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:6"
									},
									"scope": 791,
									"src": "5850:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "7023:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 678,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "7037:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 692,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7145:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7149:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 694,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "7156:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 690,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7124:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 705,
													"nodeType": "IfStatement",
													"src": "7119:116:6",
													"trueBody": {
														"id": 704,
														"nodeType": "Block",
														"src": "7163:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 700,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "7217:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 698,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 697,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "7184:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 703,
																"nodeType": "RevertStatement",
																"src": "7177:47:6"
															}
														]
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "7033:202:6",
												"trueBody": {
													"id": 689,
													"nodeType": "Block",
													"src": "7058:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7085:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 685,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7092:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 686,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "7096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 683,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "7072:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 688,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6952:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 667,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6968:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6980:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6995:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:6"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:6"
									},
									"scope": 791,
									"src": "6921:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "7808:650:6",
										"statements": [
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7818:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:6"
											},
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "7846:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:6",
													"nodeType": "YulBlock",
													"src": "7900:396:6",
													"statements": [
														{
															"nativeSrc": "7914:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:6"
																		},
																		"nativeSrc": "7934:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:6"
																		},
																		"nativeSrc": "7951:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:6"
																		},
																		"nativeSrc": "7968:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:6"
																},
																"nativeSrc": "7929:60:6",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:6",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:6",
																"nodeType": "YulBlock",
																"src": "8050:157:6",
																"statements": [
																	{
																		"nativeSrc": "8068:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:6"
																			},
																			"nativeSrc": "8079:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:6"
																					},
																					"nativeSrc": "8130:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:6"
																			},
																			"nativeSrc": "8107:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:6"
																		},
																		"nativeSrc": "8107:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:6"
																					},
																					"nativeSrc": "8176:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:6"
																			},
																			"nativeSrc": "8164:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:6"
																		},
																		"nativeSrc": "8164:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:6"
																},
																"nativeSrc": "8034:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:6"
															},
															"nativeSrc": "8031:176:6",
															"nodeType": "YulIf",
															"src": "8031:176:6"
														},
														{
															"nativeSrc": "8220:30:6",
															"nodeType": "YulAssignment",
															"src": "8220:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:6"
																},
																"nativeSrc": "8234:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:6"
																}
															]
														},
														{
															"nativeSrc": "8263:23:6",
															"nodeType": "YulAssignment",
															"src": "8263:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:6"
																},
																"nativeSrc": "8278:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:6",
														"valueSize": 1
													},
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:6",
														"valueSize": 1
													},
													{
														"declaration": 718,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:6",
														"valueSize": 1
													},
													{
														"declaration": 721,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 723,
												"nodeType": "InlineAssembly",
												"src": "7875:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 724,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "8310:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 735,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "8362:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 729,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "8336:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 727,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "8306:146:6",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "8380:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 742,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "8434:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 740,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 739,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8401:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 745,
															"nodeType": "RevertStatement",
															"src": "8394:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7767:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "7781:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:6"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:6"
									},
									"scope": 791,
									"src": "7738:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "9049:391:6",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9059:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 760,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:6"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9081:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:6"
											},
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "9109:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:6",
													"nodeType": "YulBlock",
													"src": "9163:174:6",
													"statements": [
														{
															"nativeSrc": "9177:71:6",
															"nodeType": "YulAssignment",
															"src": "9177:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:6"
																		},
																		"nativeSrc": "9193:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:6"
																		},
																		"nativeSrc": "9210:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:6"
																		},
																		"nativeSrc": "9227:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:6"
																},
																"nativeSrc": "9188:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:6"
																}
															]
														},
														{
															"nativeSrc": "9261:30:6",
															"nodeType": "YulAssignment",
															"src": "9261:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:6"
																},
																"nativeSrc": "9275:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:6"
																}
															]
														},
														{
															"nativeSrc": "9304:23:6",
															"nodeType": "YulAssignment",
															"src": "9304:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:6"
																},
																"nativeSrc": "9319:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:6",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:6",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:6",
														"valueSize": 1
													},
													{
														"declaration": 761,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 769,
												"nodeType": "InlineAssembly",
												"src": "9138:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "9353:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 771,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "9365:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 782,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9416:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 776,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 753,
																						"src": "9391:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 775,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 774,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 786,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 759,
												"id": 788,
												"nodeType": "Return",
												"src": "9346:87:6"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "8993:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 751,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8993:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8993:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9007:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "9043:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:6"
									},
									"scope": 791,
									"src": "8960:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 792,
							"src": "750:8692:6",
							"usedErrors": [
								394,
								403
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"Errors": [
							1102
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1051,
							"sourceUnit": 1103,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 794,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1102,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 801,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1361:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 821,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 819,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 824,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 826,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													830,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 847,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 829,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 831,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1525:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "1547:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:7"
											},
											{
												"condition": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:7",
													"subExpression": {
														"id": 838,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 846,
												"nodeType": "IfStatement",
												"src": "1568:65:7",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "1582:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 840,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "1603:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "1603:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 844,
															"nodeType": "RevertStatement",
															"src": "1596:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1050,
									"src": "1290:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2573:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "2612:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "2620:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 858,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2590:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 857,
												"id": 863,
												"nodeType": "Return",
												"src": "2583:45:7"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:7"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2559:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:7"
									},
									"scope": 1050,
									"src": "2484:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "3072:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 879,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1050",
																		"typeString": "library Address"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 882,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "3110:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "3082:123:7",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "3117:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 889,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1050",
																						"typeString": "library Address"
																					}
																				],
																				"id": 888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 887,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 892,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "3188:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 884,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "3138:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "3138:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "3131:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													898,
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 898,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3215:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 897,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "3229:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 899,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "3282:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 901,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "3256:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 903,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "3275:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3339:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 911,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "3348:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 908,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3304:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 913,
												"nodeType": "Return",
												"src": "3297:62:7"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2990:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3006:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3025:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3058:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:7"
									},
									"scope": 1050,
									"src": "2959:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3605:154:7",
										"statements": [
											{
												"assignments": [
													926,
													928
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3616:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 925,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 928,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "3630:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 927,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"arguments": [
														{
															"id": 931,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3675:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 929,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3657:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3724:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "3732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 937,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3741:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 934,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "3697:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 939,
												"nodeType": "Return",
												"src": "3690:62:7"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3533:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3549:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3591:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:7"
									},
									"scope": 1050,
									"src": "3505:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3997:156:7",
										"statements": [
											{
												"assignments": [
													952,
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4008:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 951,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 966,
														"src": "4022:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 953,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4069:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 955,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4049:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4118:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "4126:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "4135:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 960,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "4091:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 950,
												"id": 965,
												"nodeType": "Return",
												"src": "4084:62:7"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3930:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3946:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:7"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3983:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:7"
									},
									"scope": 1050,
									"src": "3900:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "4579:424:7",
										"statements": [
											{
												"condition": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:7",
													"subExpression": {
														"id": 979,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "4594:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "4653:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 986,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "4841:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 990,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "4867:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1001,
															"nodeType": "IfStatement",
															"src": "4837:119:7",
															"trueBody": {
																"id": 1000,
																"nodeType": "Block",
																"src": "4892:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 997,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "4934:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 996,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "4917:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 999,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1002,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "4976:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 978,
															"id": 1003,
															"nodeType": "Return",
															"src": "4969:17:7"
														}
													]
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "4589:408:7",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "4603:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "4625:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 981,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "4617:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4466:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4512:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "4565:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:7"
									},
									"scope": 1050,
									"src": "4421:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "5307:122:7",
										"statements": [
											{
												"condition": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:7",
													"subExpression": {
														"id": 1017,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "5322:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "5381:42:7",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "5402:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1016,
															"id": 1025,
															"nodeType": "Return",
															"src": "5395:17:7"
														}
													]
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "5317:106:7",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "5331:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "5353:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1019,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5345:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5231:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1009,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5245:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "5293:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:7"
									},
									"scope": 1050,
									"src": "5205:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "5598:432:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1035,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "5674:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "5973:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1041,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "5994:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1102_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1093,
																	"src": "5994:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1045,
															"nodeType": "RevertStatement",
															"src": "5987:26:7"
														}
													]
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "5670:354:7",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "5697:270:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:7",
																"nodeType": "YulBlock",
																"src": "5824:133:7",
																"statements": [
																	{
																		"nativeSrc": "5842:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:7"
																			},
																			"nativeSrc": "5865:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:7",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:7",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:7"
																					},
																					"nativeSrc": "5906:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:7"
																			},
																			"nativeSrc": "5899:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:7"
																		},
																		"nativeSrc": "5899:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:7"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1032,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:7",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1039,
															"nodeType": "InlineAssembly",
															"src": "5799:158:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5560:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:7"
									},
									"scope": 1050,
									"src": "5543:487:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1051,
							"src": "233:5799:7",
							"usedErrors": [
								801
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1080
						]
					},
					"id": 1081,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1053,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1080,
							"linearizedBaseContracts": [
								1080
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1060,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1080,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1067,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1069,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1080,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1075,
												"id": 1077,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1080,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1081,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1102
						]
					},
					"id": 1103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1083,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1102,
							"linearizedBaseContracts": [
								1102
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1090,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1093,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1096,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1101,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1103,
							"src": "411:484:9",
							"usedErrors": [
								1090,
								1093,
								1096,
								1101
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1104,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1105,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1114,
							"linearizedBaseContracts": [
								1114
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1114,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/HoldAirdrop.sol": {
				"ast": {
					"absolutePath": "contracts/HoldAirdrop.sol",
					"exportedSymbols": {
						"Address": [
							1050
						],
						"BitMap": [
							1194
						],
						"Context": [
							1080
						],
						"GasOptimizedAirdrop": [
							1593
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							791
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 381,
							"src": "58:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 792,
							"src": "115:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 148,
							"src": "181:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 303,
							"src": "234:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1121,
								"nodeType": "StructuredDocumentation",
								"src": "298:142:11",
								"text": " @title BitMap Library\n @notice 使用紧凑的位图存储来标记已领取状态，每个存储槽可以存储 256 个布尔值"
							},
							"fullyImplemented": true,
							"id": 1194,
							"linearizedBaseContracts": [
								1194
							],
							"name": "BitMap",
							"nameLocation": "449:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BitMap.Map",
									"id": 1126,
									"members": [
										{
											"constant": false,
											"id": 1125,
											"mutability": "mutable",
											"name": "bits",
											"nameLocation": "511:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 1126,
											"src": "483:32:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 1124,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "483:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Map",
									"nameLocation": "469:3:11",
									"nodeType": "StructDefinition",
									"scope": 1194,
									"src": "462:60:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "602:133:11",
										"statements": [
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "bucket",
														"nameLocation": "620:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "612:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "612:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1141,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1138,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "629:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "38",
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "638:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "629:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "612:27:11"
											},
											{
												"assignments": [
													1143
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "657:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "649:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "649:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1150,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "664:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1145,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "670:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30786666",
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "678:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "0xff"
																},
																"src": "670:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1148,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "669:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "664:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "649:34:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1151,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "700:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
																		"typeString": "struct BitMap.Map storage pointer"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "704:4:11",
																"memberName": "bits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1125,
																"src": "700:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1154,
															"indexExpression": {
																"id": 1153,
																"name": "bucket",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "709:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "700:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"id": 1155,
															"name": "mask",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "719:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "700:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "727:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "700:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1135,
												"id": 1159,
												"nodeType": "Return",
												"src": "693:35:11"
											}
										]
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "537:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "553:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "541:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
													"typeString": "struct BitMap.Map"
												},
												"typeName": {
													"id": 1128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1127,
														"name": "Map",
														"nameLocations": [
															"541:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "541:3:11"
													},
													"referencedDeclaration": 1126,
													"src": "541:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
														"typeString": "struct BitMap.Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "566:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "558:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:32:11"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "596:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "596:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:6:11"
									},
									"scope": 1194,
									"src": "528:207:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "795:122:11",
										"statements": [
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "bucket",
														"nameLocation": "813:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "805:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "805:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1171,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "822:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "38",
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "831:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "822:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "805:27:11"
											},
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "850:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "842:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "842:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "857:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "863:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30786666",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "871:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "0xff"
																},
																"src": "863:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1181,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "862:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "857:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "842:34:11"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1184,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "886:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
																	"typeString": "struct BitMap.Map storage pointer"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "890:4:11",
															"memberName": "bits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1125,
															"src": "886:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "bucket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "895:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "886:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"id": 1189,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "906:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "886:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "886:24:11"
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "750:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "766:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "754:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
													"typeString": "struct BitMap.Map"
												},
												"typeName": {
													"id": 1163,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1162,
														"name": "Map",
														"nameLocations": [
															"754:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1126,
														"src": "754:3:11"
													},
													"referencedDeclaration": 1126,
													"src": "754:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
														"typeString": "struct BitMap.Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "779:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "771:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:32:11"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:11"
									},
									"scope": 1194,
									"src": "741:176:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1594,
							"src": "441:478:11",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 1197,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "1084:3:11",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1198,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "1088:6:11",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "1084:10:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1196,
										"name": "Ownable",
										"nameLocations": [
											"1076:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1076:7:11"
									},
									"id": 1199,
									"nodeType": "InheritanceSpecifier",
									"src": "1076:19:11"
								},
								{
									"baseName": {
										"id": 1200,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1097:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "1097:15:11"
									},
									"id": 1201,
									"nodeType": "InheritanceSpecifier",
									"src": "1097:15:11"
								}
							],
							"canonicalName": "GasOptimizedAirdrop",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1195,
								"nodeType": "StructuredDocumentation",
								"src": "921:122:11",
								"text": " @title GasOptimizedAirdrop\n @notice 一个经过 gas 优化的空投合约，使用了多种 gas 优化技术"
							},
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593,
								302,
								147,
								1080
							],
							"name": "GasOptimizedAirdrop",
							"nameLocation": "1053:19:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1205,
									"libraryName": {
										"id": 1202,
										"name": "SafeERC20",
										"nameLocations": [
											"1125:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 791,
										"src": "1125:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1119:27:11",
									"typeName": {
										"id": 1204,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1203,
											"name": "IERC20",
											"nameLocations": [
												"1139:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "1139:6:11"
										},
										"referencedDeclaration": 380,
										"src": "1139:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1209,
									"libraryName": {
										"id": 1206,
										"name": "BitMap",
										"nameLocations": [
											"1157:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1194,
										"src": "1157:6:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1151:28:11",
									"typeName": {
										"id": 1208,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1207,
											"name": "BitMap.Map",
											"nameLocations": [
												"1168:6:11",
												"1175:3:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1126,
											"src": "1168:10:11"
										},
										"referencedDeclaration": 1126,
										"src": "1168:10:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
											"typeString": "struct BitMap.Map"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1212,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "1229:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "1205:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1211,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1210,
											"name": "IERC20",
											"nameLocations": [
												"1205:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "1205:6:11"
										},
										"referencedDeclaration": 380,
										"src": "1205:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "43074c7f",
									"id": 1214,
									"mutability": "immutable",
									"name": "minEthRequired",
									"nameLocation": "1264:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "1240:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 1213,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "1240:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GasOptimizedAirdrop.AirdropConfig",
									"id": 1221,
									"members": [
										{
											"constant": false,
											"id": 1216,
											"mutability": "mutable",
											"name": "airdropAmount",
											"nameLocation": "1327:13:11",
											"nodeType": "VariableDeclaration",
											"scope": 1221,
											"src": "1320:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1215,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1320:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1218,
											"mutability": "mutable",
											"name": "maxAirdropSupply",
											"nameLocation": "1357:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 1221,
											"src": "1350:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1217,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1350:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1220,
											"mutability": "mutable",
											"name": "totalAirdropped",
											"nameLocation": "1390:15:11",
											"nodeType": "VariableDeclaration",
											"scope": 1221,
											"src": "1383:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1219,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1383:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AirdropConfig",
									"nameLocation": "1296:13:11",
									"nodeType": "StructDefinition",
									"scope": 1593,
									"src": "1289:123:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "79502c55",
									"id": 1224,
									"mutability": "mutable",
									"name": "config",
									"nameLocation": "1438:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "1417:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
										"typeString": "struct GasOptimizedAirdrop.AirdropConfig"
									},
									"typeName": {
										"id": 1223,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1222,
											"name": "AirdropConfig",
											"nameLocations": [
												"1417:13:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1221,
											"src": "1417:13:11"
										},
										"referencedDeclaration": 1221,
										"src": "1417:13:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage_ptr",
											"typeString": "struct GasOptimizedAirdrop.AirdropConfig"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1227,
									"mutability": "mutable",
									"name": "claimedBitMap",
									"nameLocation": "1474:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "1455:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Map_$1126_storage",
										"typeString": "struct BitMap.Map"
									},
									"typeName": {
										"id": 1226,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1225,
											"name": "BitMap.Map",
											"nameLocations": [
												"1455:6:11",
												"1462:3:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1126,
											"src": "1455:10:11"
										},
										"referencedDeclaration": 1126,
										"src": "1455:10:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Map_$1126_storage_ptr",
											"typeString": "struct BitMap.Map"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "40306fb6",
									"id": 1229,
									"mutability": "mutable",
									"name": "airdropStartTime",
									"nameLocation": "1512:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "1498:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1228,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1498:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "806019c1",
									"id": 1231,
									"mutability": "mutable",
									"name": "airdropEndTime",
									"nameLocation": "1548:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "1534:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1230,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "1534:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "public"
								},
								{
									"errorSelector": "80cb55e2",
									"id": 1233,
									"name": "NotActive",
									"nameLocation": "1602:9:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:2:11"
									},
									"src": "1596:18:11"
								},
								{
									"errorSelector": "646cf558",
									"id": 1235,
									"name": "AlreadyClaimed",
									"nameLocation": "1625:14:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:2:11"
									},
									"src": "1619:23:11"
								},
								{
									"errorSelector": "f4d678b8",
									"id": 1237,
									"name": "InsufficientBalance",
									"nameLocation": "1653:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1672:2:11"
									},
									"src": "1647:28:11"
								},
								{
									"errorSelector": "d05cb609",
									"id": 1239,
									"name": "MaxSupplyReached",
									"nameLocation": "1686:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1702:2:11"
									},
									"src": "1680:25:11"
								},
								{
									"errorSelector": "e6c4247b",
									"id": 1241,
									"name": "InvalidAddress",
									"nameLocation": "1716:14:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:2:11"
									},
									"src": "1710:23:11"
								},
								{
									"errorSelector": "2c5211c6",
									"id": 1243,
									"name": "InvalidAmount",
									"nameLocation": "1744:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:2:11"
									},
									"src": "1738:22:11"
								},
								{
									"errorSelector": "6f7eac26",
									"id": 1245,
									"name": "InvalidTime",
									"nameLocation": "1771:11:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1782:2:11"
									},
									"src": "1765:20:11"
								},
								{
									"anonymous": false,
									"eventSelector": "61302c72df1000ca12d41c5583685720a0cbd3233372643a553eb042d670f076",
									"id": 1251,
									"name": "AirdropClaimed",
									"nameLocation": "1815:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1846:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1830:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1859:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1852:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1248,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:37:11"
									},
									"src": "1809:58:11"
								},
								{
									"anonymous": false,
									"eventSelector": "743ecf8114691336739b4044c516556b37c4e36c1195f759a19cda321560e994",
									"id": 1257,
									"name": "AirdropConfigUpdated",
									"nameLocation": "1878:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1906:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1899:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1252,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1899:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxSupply",
												"nameLocation": "1921:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1914:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1254,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1914:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:33:11"
									},
									"src": "1872:60:11"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "2487:671:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1273,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2525:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2543:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2535:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1274,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2535:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2535:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2525:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "2521:49:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1279,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "2554:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2554:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1281,
													"nodeType": "RevertStatement",
													"src": "2547:23:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1283,
														"name": "_airdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "2584:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2602:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2584:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1289,
												"nodeType": "IfStatement",
												"src": "2580:47:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1286,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "2612:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2612:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1288,
													"nodeType": "RevertStatement",
													"src": "2605:22:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1290,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2641:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1291,
														"name": "_airdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "2654:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2641:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "2637:55:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1293,
															"name": "InvalidAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "2677:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2677:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1295,
													"nodeType": "RevertStatement",
													"src": "2670:22:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1297,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "2706:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1298,
														"name": "_endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "2720:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2706:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "2702:48:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1300,
															"name": "InvalidTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "2737:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2737:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1302,
													"nodeType": "RevertStatement",
													"src": "2730:20:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1304,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "2764:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1305,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2777:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2783:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2777:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2764:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "IfStatement",
												"src": "2760:54:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1308,
															"name": "InvalidTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "2801:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2801:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1310,
													"nodeType": "RevertStatement",
													"src": "2794:20:11"
												}
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2866:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1314,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "2881:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1313,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2874:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2874:14:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2866:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "2866:22:11"
											},
											{
												"expression": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1318,
														"name": "minEthRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "2898:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1319,
														"name": "_minEthRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "2915:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2898:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "2898:32:11"
											},
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1322,
															"name": "config",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "2949:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2956:13:11",
														"memberName": "airdropAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1216,
														"src": "2949:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1325,
														"name": "_airdropAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "2972:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2949:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "2949:37:11"
											},
											{
												"expression": {
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1328,
															"name": "config",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "2996:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3003:16:11",
														"memberName": "maxAirdropSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1218,
														"src": "2996:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1331,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "3022:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2996:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "2996:36:11"
											},
											{
												"expression": {
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1334,
															"name": "config",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "3042:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3049:15:11",
														"memberName": "totalAirdropped",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "3042:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3067:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3042:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "3042:26:11"
											},
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1340,
														"name": "airdropStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "3087:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1341,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "3106:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3087:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "3087:29:11"
											},
											{
												"expression": {
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1344,
														"name": "airdropEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3126:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1345,
														"name": "_endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "3143:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3126:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "3126:25:11"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "1942:356:11",
										"text": " @notice 构造函数初始化空投合约\n @param _token 空投代币地址\n @param _minEthRequired 最小 ETH 持有量要求\n @param _airdropAmount 每个地址可领取的代币数量\n @param _maxSupply 最大空投供应量\n @param _startTime 空投开始时间\n @param _endTime 空投结束时间"
									},
									"id": 1349,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2332:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2324:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "_minEthRequired",
												"nameLocation": "2355:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2348:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1261,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2348:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "_airdropAmount",
												"nameLocation": "2387:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2380:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1263,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2380:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "2418:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2411:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1265,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2411:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "2445:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2438:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1267,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2438:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "2472:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "2465:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1269,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:172:11"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:0:11"
									},
									"scope": 1593,
									"src": "2303:855:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "3330:398:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1356,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3355:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3359:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3355:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1355,
														"name": "_validateClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "3340:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3340:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "3340:26:11"
											},
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "userIndex",
														"nameLocation": "3393:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "3385:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1360,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3385:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1366,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3421:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3425:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3421:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3413:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1364,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "3413:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3413:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3405:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3405:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3405:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3385:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1374,
															"name": "userIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "3461:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1371,
															"name": "claimedBitMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "3443:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1126_storage",
																"typeString": "struct BitMap.Map storage ref"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3457:3:11",
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1193,
														"src": "3443:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Map_$1126_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_Map_$1126_storage_ptr_$",
															"typeString": "function (struct BitMap.Map storage pointer,uint256)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3443:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "3443:28:11"
											},
											{
												"id": 1387,
												"nodeType": "UncheckedBlock",
												"src": "3490:89:11",
												"statements": [
													{
														"expression": {
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1377,
																	"name": "config",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "3514:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																		"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																	}
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "3521:15:11",
																"memberName": "totalAirdropped",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1220,
																"src": "3514:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1382,
																			"name": "config",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "3547:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																				"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																			}
																		},
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3554:13:11",
																		"memberName": "airdropAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1216,
																		"src": "3547:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	],
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3540:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1380,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "3540:6:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3540:28:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3514:54:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1386,
														"nodeType": "ExpressionStatement",
														"src": "3514:54:11"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3616:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3620:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3616:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1393,
																"name": "config",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "3628:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																	"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3635:13:11",
															"memberName": "airdropAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1216,
															"src": "3628:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"expression": {
															"id": 1388,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "3597:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3603:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "3597:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "3597:52:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1398,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3688:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3692:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3688:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1400,
																"name": "config",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "3700:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																	"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3707:13:11",
															"memberName": "airdropAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1216,
															"src": "3700:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 1397,
														"name": "AirdropClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "3673:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,uint96)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "EmitStatement",
												"src": "3668:53:11"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "3173:106:11",
										"text": " @notice 用户领取空投\n @dev 包含多重检查和状态更新的主要功能"
									},
									"functionSelector": "5b88349d",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1353,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1352,
												"name": "nonReentrant",
												"nameLocations": [
													"3317:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3317:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3317:12:11"
										}
									],
									"name": "claimAirdrop",
									"nameLocation": "3293:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3305:2:11"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3330:0:11"
									},
									"scope": 1593,
									"src": "3284:444:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "3883:541:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1411,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3897:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3903:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3897:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1413,
															"name": "airdropStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "3915:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3897:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1415,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3935:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3941:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3935:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1417,
															"name": "airdropEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3953:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3935:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3897:70:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1424,
												"nodeType": "IfStatement",
												"src": "3893:119:11",
												"trueBody": {
													"id": 1423,
													"nodeType": "Block",
													"src": "3969:43:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1420,
																	"name": "NotActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "3990:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3990:11:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1422,
															"nodeType": "RevertStatement",
															"src": "3983:18:11"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1431,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1408,
																			"src": "4068:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1429,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "4060:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4060:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4052:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1427,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4052:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4052:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1425,
															"name": "claimedBitMap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "4034:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Map_$1126_storage",
																"typeString": "struct BitMap.Map storage ref"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4048:3:11",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1161,
														"src": "4034:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1126_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_Map_$1126_storage_ptr_$",
															"typeString": "function (struct BitMap.Map storage pointer,uint256) view returns (bool)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "4030:95:11",
												"trueBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "4077:48:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1435,
																	"name": "AlreadyClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "4098:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:16:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1437,
															"nodeType": "RevertStatement",
															"src": "4091:23:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1440,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "4147:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4152:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "4147:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1442,
														"name": "minEthRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "4162:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "4147:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"nodeType": "IfStatement",
												"src": "4143:88:11",
												"trueBody": {
													"id": 1447,
													"nodeType": "Block",
													"src": "4178:53:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1444,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "4199:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4199:21:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1446,
															"nodeType": "RevertStatement",
															"src": "4192:28:11"
														}
													]
												}
											},
											{
												"id": 1462,
												"nodeType": "UncheckedBlock",
												"src": "4249:169:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1449,
																		"name": "config",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "4277:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																			"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4284:15:11",
																	"memberName": "totalAirdropped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1220,
																	"src": "4277:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 1451,
																		"name": "config",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "4302:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																			"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4309:13:11",
																	"memberName": "airdropAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1216,
																	"src": "4302:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "4277:45:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1454,
																	"name": "config",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "4325:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																		"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4332:16:11",
																"memberName": "maxAirdropSupply",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1218,
																"src": "4325:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "4277:71:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1461,
														"nodeType": "IfStatement",
														"src": "4273:135:11",
														"trueBody": {
															"id": 1460,
															"nodeType": "Block",
															"src": "4350:58:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1457,
																			"name": "MaxSupplyReached",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1239,
																			"src": "4375:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4375:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1459,
																	"nodeType": "RevertStatement",
																	"src": "4368:25:11"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "3738:89:11",
										"text": " @notice 验证领取资格\n @param user 要验证的用户地址"
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateClaim",
									"nameLocation": "3841:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3864:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "3856:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3856:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3855:14:11"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3883:0:11"
									},
									"scope": 1593,
									"src": "3832:592:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "4733:266:11",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1474,
														"name": "eligibility",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "4743:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1478,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "4768:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4774:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4768:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4757:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bool[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1475,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "4761:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1476,
																"nodeType": "ArrayTypeName",
																"src": "4761:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																	"typeString": "bool[]"
																}
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4757:24:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[] memory"
														}
													},
													"src": "4743:38:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "4743:38:11"
											},
											{
												"assignments": [
													1484
												],
												"declarations": [
													{
														"constant": false,
														"id": 1484,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "4799:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "4791:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4791:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1487,
												"initialValue": {
													"expression": {
														"id": 1485,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4813:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4819:9:11",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4813:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4791:37:11"
											},
											{
												"body": {
													"id": 1511,
													"nodeType": "Block",
													"src": "4886:107:11",
													"statements": [
														{
															"expression": {
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1496,
																		"name": "eligibility",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1472,
																		"src": "4900:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																			"typeString": "bool[] memory"
																		}
																	},
																	"id": 1498,
																	"indexExpression": {
																		"id": 1497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "4912:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4900:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1500,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1468,
																				"src": "4929:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 1502,
																			"indexExpression": {
																				"id": 1501,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1489,
																				"src": "4935:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4929:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1503,
																			"name": "currentTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1484,
																			"src": "4939:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1499,
																		"name": "_isEligible",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "4917:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) view returns (bool)"
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4917:34:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4900:51:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1506,
															"nodeType": "ExpressionStatement",
															"src": "4900:51:11"
														},
														{
															"id": 1510,
															"nodeType": "UncheckedBlock",
															"src": "4965:18:11",
															"statements": [
																{
																	"expression": {
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "4977:3:11",
																		"subExpression": {
																			"id": 1507,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "4979:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1509,
																	"nodeType": "ExpressionStatement",
																	"src": "4977:3:11"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1492,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "4867:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1493,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4871:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4877:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4871:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4867:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1512,
												"initializationExpression": {
													"assignments": [
														1489
													],
													"declarations": [
														{
															"constant": false,
															"id": 1489,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4860:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1512,
															"src": "4852:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1488,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4852:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1491,
													"initialValue": {
														"hexValue": "30",
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4864:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4852:13:11"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "4847:146:11"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "4434:178:11",
										"text": " @notice 批量检查地址是否有资格领取空投\n @param users 要检查的地址数组\n @return eligibility 每个地址的资格状态数组"
									},
									"functionSelector": "58262359",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkEligibility",
									"nameLocation": "4626:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "4662:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "4643:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1466,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4643:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1467,
													"nodeType": "ArrayTypeName",
													"src": "4643:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:26:11"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "eligibility",
												"nameLocation": "4715:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "4701:25:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1470,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "4701:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1471,
													"nodeType": "ArrayTypeName",
													"src": "4701:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4700:27:11"
									},
									"scope": 1593,
									"src": "4617:382:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "5275:307:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1524,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "5305:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1525,
																		"name": "airdropStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "5320:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "5305:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1527,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "5352:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1528,
																		"name": "airdropEndTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "5367:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"src": "5352:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5305:76:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1531,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "5397:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5402:7:11",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "5397:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1533,
																	"name": "minEthRequired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "5413:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5397:30:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5305:122:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5443:42:11",
															"subExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1542,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1517,
																						"src": "5478:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5470:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1540,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "5470:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5470:13:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			],
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5462:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1538,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5462:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5462:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1536,
																		"name": "claimedBitMap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "5444:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Map_$1126_storage",
																			"typeString": "struct BitMap.Map storage ref"
																		}
																	},
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5458:3:11",
																	"memberName": "get",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1161,
																	"src": "5444:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Map_$1126_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_Map_$1126_storage_ptr_$",
																		"typeString": "function (struct BitMap.Map storage pointer,uint256) view returns (bool)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5444:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5305:180:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1548,
																			"name": "config",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "5502:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																				"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																			}
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5509:15:11",
																		"memberName": "totalAirdropped",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1220,
																		"src": "5502:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 1550,
																			"name": "config",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "5527:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																				"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																			}
																		},
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5534:13:11",
																		"memberName": "airdropAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1216,
																		"src": "5527:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"src": "5502:45:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1553,
																		"name": "config",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "5551:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AirdropConfig_$1221_storage",
																			"typeString": "struct GasOptimizedAirdrop.AirdropConfig storage ref"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5558:16:11",
																	"memberName": "maxAirdropSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1218,
																	"src": "5551:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "5502:72:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1556,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5501:74:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5305:270:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1558,
												"nodeType": "Return",
												"src": "5285:290:11"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "5009:177:11",
										"text": " @notice 检查单个地址的领取资格\n @param user 要检查的地址\n @param currentTime 当前时间戳\n @return 是否有资格领取"
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isEligible",
									"nameLocation": "5200:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5220:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "5212:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5212:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "currentTime",
												"nameLocation": "5234:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "5226:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5226:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5211:35:11"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "5269:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5269:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5268:6:11"
									},
									"scope": 1593,
									"src": "5191:391:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "5722:170:11",
										"statements": [
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "5740:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1591,
														"src": "5732:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5732:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1572,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5774:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GasOptimizedAirdrop_$1593",
																		"typeString": "contract GasOptimizedAirdrop"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GasOptimizedAirdrop_$1593",
																		"typeString": "contract GasOptimizedAirdrop"
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5766:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1570,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5766:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5766:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1568,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "5750:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5756:9:11",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "5750:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5750:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5732:48:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1576,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "5794:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5805:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5794:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1582,
												"nodeType": "IfStatement",
												"src": "5790:46:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1579,
															"name": "InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "5815:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5815:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1581,
													"nodeType": "RevertStatement",
													"src": "5808:28:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1586,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5865:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5869:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5865:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1588,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "5877:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1583,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "5846:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5852:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 427,
														"src": "5846:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5846:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "5846:39:11"
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "5588:81:11",
										"text": " @notice 紧急提取合约中的代币（仅合约所有者）"
									},
									"functionSelector": "db2e21bc",
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1563,
												"name": "onlyOwner",
												"nameLocations": [
													"5712:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5712:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5712:9:11"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "5683:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5700:2:11"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5722:0:11"
									},
									"scope": 1593,
									"src": "5674:218:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1594,
							"src": "1044:4850:11",
							"usedErrors": [
								13,
								18,
								394,
								1233,
								1235,
								1237,
								1239,
								1241,
								1243,
								1245
							],
							"usedEvents": [
								24,
								1251,
								1257
							]
						}
					],
					"src": "32:5862:11"
				},
				"id": 11
			}
		}
	}
}